{
	"id": "112c6c65895f5c294633337c17700670",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Lockup.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./Reputify.sol\"; // Import the Reputify token contract\r\n\r\ncontract StakingContract is Ownable {\r\n    struct Stake {\r\n        uint256 amount;\r\n        bool isPositive; // true if the stake is positive, false if negative\r\n        string postId; // Identifier for the post related to this stake\r\n    }\r\n\r\n    struct Post {\r\n        address originalPoster; // Address of the original poster\r\n        uint256 totalStaked; // Total staked amount for this post\r\n        uint256 totalPositiveStake; // Total positive stake for this post\r\n        uint256 totalNegativeStake; // Total negative stake for this post\r\n        address[] stakers; // Array of all stakers for this post\r\n    }\r\n\r\n    Reputify public token; // Instance of the Reputify token contract\r\n\r\n    mapping(address => Stake) public stakes;\r\n    mapping(string => Post) public posts; // Maps postId to its Post data\r\n\r\n    event Staked(address indexed user, uint256 amount, bool isPositive, string postId);\r\n    event Unstaked(address indexed user, uint256 amount, uint256 reward);\r\n    event RewardPaid(address indexed user, uint256 reward);\r\n\r\n    constructor(address tokenAddress, address initialOwner) Ownable(initialOwner) {\r\n        token = Reputify(tokenAddress); // Initialize with the deployed Reputify token address\r\n    }\r\n\r\n    // Stake tokens with a postId\r\n    function stake(uint256 amount, bool isPositive, string memory postId) external {\r\n        require(amount > 0, \"Cannot stake 0\");\r\n        require(token.balanceOf(msg.sender) >= amount, \"Insufficient balance\");\r\n        require(token.allowance(msg.sender, address(this)) >= amount, \"Contract not approved to transfer tokens\");\r\n\r\n        Post storage post = posts[postId];\r\n\r\n        // Transfer tokens from the user to this contract\r\n        bool success = token.transferFrom(msg.sender, address(this), amount);\r\n        require(success, \"Token transfer failed\");\r\n\r\n        // Update the user's stake\r\n        stakes[msg.sender] = Stake(amount, isPositive, postId);\r\n\r\n        // Update the post's total stake\r\n        if (post.totalStaked == 0) {\r\n            post.originalPoster = msg.sender; // Set the original poster if first stake\r\n        }\r\n\r\n        post.totalStaked += amount;\r\n        post.stakers.push(msg.sender); // Track the staker\r\n\r\n        if (isPositive) {\r\n            post.totalPositiveStake += amount;\r\n        } else {\r\n            post.totalNegativeStake += amount;\r\n        }\r\n\r\n        emit Staked(msg.sender, amount, isPositive, postId);\r\n    }\r\n\r\n    // Unstake tokens and claim rewards\r\n    function unstake(bool predictionOutcome, string memory postId) external {\r\n        Stake memory userStake = stakes[msg.sender];\r\n        Post storage post = posts[postId];\r\n\r\n        require(userStake.amount > 0, \"No stake found\");\r\n        require(keccak256(bytes(userStake.postId)) == keccak256(bytes(postId)), \"Post ID mismatch\");\r\n\r\n        uint256 reward = 0;\r\n\r\n        if (predictionOutcome) {\r\n            // Prediction is correct\r\n            uint256 commission = (userStake.amount * 5) / 100; // 5% commission for the original poster\r\n\r\n            // Original poster receives their stake back and the commission\r\n            token.transfer(post.originalPoster, userStake.amount + commission);\r\n\r\n            // Distribute remaining tokens equally to all true stakes\r\n            uint256 remainingAmount = post.totalPositiveStake - commission;\r\n            for (uint256 i = 0; i < post.stakers.length; i++) {\r\n                address stakerAddress = post.stakers[i];\r\n                Stake memory stakeInfo = stakes[stakerAddress];\r\n                if (stakeInfo.isPositive) {\r\n                    uint256 stakerReward = (stakeInfo.amount * remainingAmount) / post.totalPositiveStake;\r\n                    token.transfer(stakerAddress, stakerReward);\r\n                    emit RewardPaid(stakerAddress, stakerReward);\r\n                }\r\n            }\r\n        } else {\r\n            // Prediction is incorrect\r\n            token.transfer(post.originalPoster, 0); // Original poster loses their stake\r\n\r\n            // All true stakers lose their stakes\r\n            for (uint256 i = 0; i < post.stakers.length; i++) {\r\n                address stakerAddress = post.stakers[i];\r\n                Stake memory stakeInfo = stakes[stakerAddress];\r\n                if (stakeInfo.isPositive) {\r\n                    token.transfer(stakerAddress, 0); // Lose their stakes\r\n                }\r\n            }\r\n\r\n            // Distribute rewards to false stakers\r\n            for (uint256 i = 0; i < post.stakers.length; i++) {\r\n                address stakerAddress = post.stakers[i];\r\n                Stake memory stakeInfo = stakes[stakerAddress];\r\n                if (!stakeInfo.isPositive) {\r\n                    uint256 stakerReward = (stakeInfo.amount * post.totalNegativeStake) / post.totalNegativeStake;\r\n                    token.transfer(stakerAddress, stakerReward);\r\n                    emit RewardPaid(stakerAddress, stakerReward);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Reset the user's stake\r\n        if (userStake.isPositive) {\r\n            post.totalPositiveStake -= userStake.amount;\r\n        } else {\r\n            post.totalNegativeStake -= userStake.amount;\r\n        }\r\n\r\n        delete stakes[msg.sender]; // Clear the user's stake\r\n        emit Unstaked(msg.sender, userStake.amount, reward);\r\n    }\r\n}\r\n"
			},
			"contracts/Reputify.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Reputify is ERC20, Ownable {\n    event Minted(address indexed to, uint256 amount);\n    event Burned(address indexed from, uint256 amount);\n\n    // Constructor that requires an initial owner and initial supply\n    constructor(address initialOwner, uint256 initialSupply) ERC20(\"Reputify\", \"RPT\") Ownable(initialOwner) {\n        _mint(initialOwner, initialSupply); // Mint initial supply to the initialOwner\n    }\n\n    // Mint new tokens (only the owner can mint)\n    function mint(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount);\n        emit Minted(to, amount);\n    }\n\n    // Burn tokens from the caller's account\n    function burn(uint256 amount) external {\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance to burn\");\n        _burn(msg.sender, amount);\n        emit Burned(msg.sender, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Lockup.sol": {
				"StakingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isPositive",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "postId",
									"type": "string"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "Unstaked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "posts",
							"outputs": [
								{
									"internalType": "address",
									"name": "originalPoster",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "totalStaked",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalPositiveStake",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalNegativeStake",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isPositive",
									"type": "bool"
								},
								{
									"internalType": "string",
									"name": "postId",
									"type": "string"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isPositive",
									"type": "bool"
								},
								{
									"internalType": "string",
									"name": "postId",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract Reputify",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "predictionOutcome",
									"type": "bool"
								},
								{
									"internalType": "string",
									"name": "postId",
									"type": "string"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Lockup.sol\":180:5517  contract StakingContract is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Lockup.sol\":1229:1411  constructor(address tokenAddress, address initialOwner) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Lockup.sol\":1293:1305  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/Lockup.sol\":1335:1347  tokenAddress */\n  dup2\n    /* \"contracts/Lockup.sol\":1318:1323  token */\n  0x01\n  0x00\n    /* \"contracts/Lockup.sol\":1318:1348  token = Reputify(tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Lockup.sol\":1229:1411  constructor(address tokenAddress, address initialOwner) Ownable(initialOwner) {... */\n  pop\n  pop\n    /* \"contracts/Lockup.sol\":180:5517  contract StakingContract is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":949:1068   */\ntag_36:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_38\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_39\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_22:\n    /* \"#utility.yul\":1445:1469   */\n  tag_41\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_19\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_9:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_43\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Lockup.sol\":180:5517  contract StakingContract is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Lockup.sol\":180:5517  contract StakingContract is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc0497ac8\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xc0497ac8\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf8300fca\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x16934fc4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb7f5a5a3\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Lockup.sol\":879:918  mapping(address => Stake) public stakes */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Lockup.sol\":2675:5514  function unstake(bool predictionOutcome, string memory postId) external {... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/Lockup.sol\":1454:2626  function stake(uint256 amount, bool isPositive, string memory postId) external {... */\n    tag_7:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/Lockup.sol\":925:961  mapping(string => Post) public posts */\n    tag_9:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Lockup.sol\":806:827  Reputify public token */\n    tag_10:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Lockup.sol\":879:918  mapping(address => Stake) public stakes */\n    tag_15:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      dup1\n      sload\n      tag_45\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_47\n      swap1\n      tag_46\n      jump\t// in\n    tag_47:\n      dup1\n      iszero\n      tag_48\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_49\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_48)\n    tag_49:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_50:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_50\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_52\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Lockup.sol\":2675:5514  function unstake(bool predictionOutcome, string memory postId) external {... */\n    tag_27:\n        /* \"contracts/Lockup.sol\":2758:2780  Stake memory userStake */\n      0x00\n        /* \"contracts/Lockup.sol\":2783:2789  stakes */\n      0x02\n        /* \"contracts/Lockup.sol\":2783:2801  stakes[msg.sender] */\n      0x00\n        /* \"contracts/Lockup.sol\":2790:2800  msg.sender */\n      caller\n        /* \"contracts/Lockup.sol\":2783:2801  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Lockup.sol\":2758:2801  Stake memory userStake = stakes[msg.sender] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      tag_59\n      swap1\n      tag_46\n      jump\t// in\n    tag_59:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_60\n      swap1\n      tag_46\n      jump\t// in\n    tag_60:\n      dup1\n      iszero\n      tag_61\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_62\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_61)\n    tag_62:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_63:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_63\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Lockup.sol\":2812:2829  Post storage post */\n      0x00\n        /* \"contracts/Lockup.sol\":2832:2837  posts */\n      0x03\n        /* \"contracts/Lockup.sol\":2838:2844  postId */\n      dup4\n        /* \"contracts/Lockup.sol\":2832:2845  posts[postId] */\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/Lockup.sol\":2812:2845  Post storage post = posts[postId] */\n      swap1\n      pop\n        /* \"contracts/Lockup.sol\":2885:2886  0 */\n      0x00\n        /* \"contracts/Lockup.sol\":2866:2875  userStake */\n      dup3\n        /* \"contracts/Lockup.sol\":2866:2882  userStake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Lockup.sol\":2866:2886  userStake.amount > 0 */\n      gt\n        /* \"contracts/Lockup.sol\":2858:2905  require(userStake.amount > 0, \"No stake found\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"contracts/Lockup.sol\":2978:2984  postId */\n      dup3\n        /* \"contracts/Lockup.sol\":2962:2986  keccak256(bytes(postId)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/Lockup.sol\":2940:2949  userStake */\n      dup3\n        /* \"contracts/Lockup.sol\":2940:2956  userStake.postId */\n      0x40\n      add\n      mload\n        /* \"contracts/Lockup.sol\":2924:2958  keccak256(bytes(userStake.postId)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/Lockup.sol\":2924:2986  keccak256(bytes(userStake.postId)) == keccak256(bytes(postId)) */\n      eq\n        /* \"contracts/Lockup.sol\":2916:3007  require(keccak256(bytes(userStake.postId)) == keccak256(bytes(postId)), \"Post ID mismatch\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"contracts/Lockup.sol\":3020:3034  uint256 reward */\n      0x00\n        /* \"contracts/Lockup.sol\":3055:3072  predictionOutcome */\n      dup5\n        /* \"contracts/Lockup.sol\":3051:5162  if (predictionOutcome) {... */\n      iszero\n      tag_72\n      jumpi\n        /* \"contracts/Lockup.sol\":3127:3145  uint256 commission */\n      0x00\n        /* \"contracts/Lockup.sol\":3173:3176  100 */\n      0x64\n        /* \"contracts/Lockup.sol\":3168:3169  5 */\n      0x05\n        /* \"contracts/Lockup.sol\":3149:3158  userStake */\n      dup6\n        /* \"contracts/Lockup.sol\":3149:3165  userStake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Lockup.sol\":3149:3169  userStake.amount * 5 */\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n        /* \"contracts/Lockup.sol\":3148:3176  (userStake.amount * 5) / 100 */\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"contracts/Lockup.sol\":3127:3176  uint256 commission = (userStake.amount * 5) / 100 */\n      swap1\n      pop\n        /* \"contracts/Lockup.sol\":3311:3316  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Lockup.sol\":3311:3325  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Lockup.sol\":3326:3330  post */\n      dup5\n        /* \"contracts/Lockup.sol\":3326:3345  post.originalPoster */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Lockup.sol\":3366:3376  commission */\n      dup4\n        /* \"contracts/Lockup.sol\":3347:3356  userStake */\n      dup8\n        /* \"contracts/Lockup.sol\":3347:3363  userStake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Lockup.sol\":3347:3376  userStake.amount + commission */\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"contracts/Lockup.sol\":3311:3377  token.transfer(post.originalPoster, userStake.amount + commission) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      pop\n        /* \"contracts/Lockup.sol\":3465:3488  uint256 remainingAmount */\n      0x00\n        /* \"contracts/Lockup.sol\":3517:3527  commission */\n      dup2\n        /* \"contracts/Lockup.sol\":3491:3495  post */\n      dup5\n        /* \"contracts/Lockup.sol\":3491:3514  post.totalPositiveStake */\n      0x02\n      add\n      sload\n        /* \"contracts/Lockup.sol\":3491:3527  post.totalPositiveStake - commission */\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"contracts/Lockup.sol\":3465:3527  uint256 remainingAmount = post.totalPositiveStake - commission */\n      swap1\n      pop\n        /* \"contracts/Lockup.sol\":3547:3556  uint256 i */\n      0x00\n        /* \"contracts/Lockup.sol\":3542:4036  for (uint256 i = 0; i < post.stakers.length; i++) {... */\n    tag_87:\n        /* \"contracts/Lockup.sol\":3566:3570  post */\n      dup5\n        /* \"contracts/Lockup.sol\":3566:3578  post.stakers */\n      0x04\n      add\n        /* \"contracts/Lockup.sol\":3566:3585  post.stakers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Lockup.sol\":3562:3563  i */\n      dup2\n        /* \"contracts/Lockup.sol\":3562:3585  i < post.stakers.length */\n      lt\n        /* \"contracts/Lockup.sol\":3542:4036  for (uint256 i = 0; i < post.stakers.length; i++) {... */\n      iszero\n      tag_88\n      jumpi\n        /* \"contracts/Lockup.sol\":3611:3632  address stakerAddress */\n      0x00\n        /* \"contracts/Lockup.sol\":3635:3639  post */\n      dup6\n        /* \"contracts/Lockup.sol\":3635:3647  post.stakers */\n      0x04\n      add\n        /* \"contracts/Lockup.sol\":3648:3649  i */\n      dup3\n        /* \"contracts/Lockup.sol\":3635:3650  post.stakers[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_90\n      jumpi\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n    tag_90:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Lockup.sol\":3611:3650  address stakerAddress = post.stakers[i] */\n      swap1\n      pop\n        /* \"contracts/Lockup.sol\":3669:3691  Stake memory stakeInfo */\n      0x00\n        /* \"contracts/Lockup.sol\":3694:3700  stakes */\n      0x02\n        /* \"contracts/Lockup.sol\":3694:3715  stakes[stakerAddress] */\n      0x00\n        /* \"contracts/Lockup.sol\":3701:3714  stakerAddress */\n      dup4\n        /* \"contracts/Lockup.sol\":3694:3715  stakes[stakerAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Lockup.sol\":3669:3715  Stake memory stakeInfo = stakes[stakerAddress] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_46\n      jump\t// in\n    tag_94:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_46\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Lockup.sol\":3738:3747  stakeInfo */\n      dup1\n        /* \"contracts/Lockup.sol\":3738:3758  stakeInfo.isPositive */\n      0x20\n      add\n      mload\n        /* \"contracts/Lockup.sol\":3734:4021  if (stakeInfo.isPositive) {... */\n      iszero\n      tag_99\n      jumpi\n        /* \"contracts/Lockup.sol\":3783:3803  uint256 stakerReward */\n      0x00\n        /* \"contracts/Lockup.sol\":3845:3849  post */\n      dup8\n        /* \"contracts/Lockup.sol\":3845:3868  post.totalPositiveStake */\n      0x02\n      add\n      sload\n        /* \"contracts/Lockup.sol\":3826:3841  remainingAmount */\n      dup6\n        /* \"contracts/Lockup.sol\":3807:3816  stakeInfo */\n      dup4\n        /* \"contracts/Lockup.sol\":3807:3823  stakeInfo.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Lockup.sol\":3807:3841  stakeInfo.amount * remainingAmount */\n      tag_100\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_100:\n        /* \"contracts/Lockup.sol\":3806:3868  (stakeInfo.amount * remainingAmount) / post.totalPositiveStake */\n      tag_101\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_101:\n        /* \"contracts/Lockup.sol\":3783:3868  uint256 stakerReward = (stakeInfo.amount * remainingAmount) / post.totalPositiveStake */\n      swap1\n      pop\n        /* \"contracts/Lockup.sol\":3891:3896  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Lockup.sol\":3891:3905  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Lockup.sol\":3906:3919  stakerAddress */\n      dup5\n        /* \"contracts/Lockup.sol\":3921:3933  stakerReward */\n      dup4\n        /* \"contracts/Lockup.sol\":3891:3934  token.transfer(stakerAddress, stakerReward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_102:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_105:\n      pop\n        /* \"contracts/Lockup.sol\":3973:3986  stakerAddress */\n      dup3\n        /* \"contracts/Lockup.sol\":3962:4001  RewardPaid(stakerAddress, stakerReward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/Lockup.sol\":3988:4000  stakerReward */\n      dup3\n        /* \"contracts/Lockup.sol\":3962:4001  RewardPaid(stakerAddress, stakerReward) */\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Lockup.sol\":3760:4021  {... */\n      pop\n        /* \"contracts/Lockup.sol\":3734:4021  if (stakeInfo.isPositive) {... */\n    tag_99:\n        /* \"contracts/Lockup.sol\":3592:4036  {... */\n      pop\n      pop\n        /* \"contracts/Lockup.sol\":3587:3590  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Lockup.sol\":3542:4036  for (uint256 i = 0; i < post.stakers.length; i++) {... */\n      jump(tag_87)\n    tag_88:\n      pop\n        /* \"contracts/Lockup.sol\":3074:4047  {... */\n      pop\n      pop\n        /* \"contracts/Lockup.sol\":3051:5162  if (predictionOutcome) {... */\n      jump(tag_108)\n    tag_72:\n        /* \"contracts/Lockup.sol\":4108:4113  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Lockup.sol\":4108:4122  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Lockup.sol\":4123:4127  post */\n      dup4\n        /* \"contracts/Lockup.sol\":4123:4142  post.originalPoster */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Lockup.sol\":4144:4145  0 */\n      0x00\n        /* \"contracts/Lockup.sol\":4108:4146  token.transfer(post.originalPoster, 0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap3\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_113:\n      pop\n        /* \"contracts/Lockup.sol\":4256:4265  uint256 i */\n      0x00\n        /* \"contracts/Lockup.sol\":4251:4580  for (uint256 i = 0; i < post.stakers.length; i++) {... */\n    tag_114:\n        /* \"contracts/Lockup.sol\":4275:4279  post */\n      dup3\n        /* \"contracts/Lockup.sol\":4275:4287  post.stakers */\n      0x04\n      add\n        /* \"contracts/Lockup.sol\":4275:4294  post.stakers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Lockup.sol\":4271:4272  i */\n      dup2\n        /* \"contracts/Lockup.sol\":4271:4294  i < post.stakers.length */\n      lt\n        /* \"contracts/Lockup.sol\":4251:4580  for (uint256 i = 0; i < post.stakers.length; i++) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"contracts/Lockup.sol\":4320:4341  address stakerAddress */\n      0x00\n        /* \"contracts/Lockup.sol\":4344:4348  post */\n      dup4\n        /* \"contracts/Lockup.sol\":4344:4356  post.stakers */\n      0x04\n      add\n        /* \"contracts/Lockup.sol\":4357:4358  i */\n      dup3\n        /* \"contracts/Lockup.sol\":4344:4359  post.stakers[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_117\n      jumpi\n      tag_118\n      tag_92\n      jump\t// in\n    tag_118:\n    tag_117:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Lockup.sol\":4320:4359  address stakerAddress = post.stakers[i] */\n      swap1\n      pop\n        /* \"contracts/Lockup.sol\":4378:4400  Stake memory stakeInfo */\n      0x00\n        /* \"contracts/Lockup.sol\":4403:4409  stakes */\n      0x02\n        /* \"contracts/Lockup.sol\":4403:4424  stakes[stakerAddress] */\n      0x00\n        /* \"contracts/Lockup.sol\":4410:4423  stakerAddress */\n      dup4\n        /* \"contracts/Lockup.sol\":4403:4424  stakes[stakerAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Lockup.sol\":4378:4424  Stake memory stakeInfo = stakes[stakerAddress] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      tag_120\n      swap1\n      tag_46\n      jump\t// in\n    tag_120:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_121\n      swap1\n      tag_46\n      jump\t// in\n    tag_121:\n      dup1\n      iszero\n      tag_122\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_123\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_122)\n    tag_123:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_124:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_124\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Lockup.sol\":4447:4456  stakeInfo */\n      dup1\n        /* \"contracts/Lockup.sol\":4447:4467  stakeInfo.isPositive */\n      0x20\n      add\n      mload\n        /* \"contracts/Lockup.sol\":4443:4565  if (stakeInfo.isPositive) {... */\n      iszero\n      tag_125\n      jumpi\n        /* \"contracts/Lockup.sol\":4492:4497  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Lockup.sol\":4492:4506  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Lockup.sol\":4507:4520  stakerAddress */\n      dup4\n        /* \"contracts/Lockup.sol\":4522:4523  0 */\n      0x00\n        /* \"contracts/Lockup.sol\":4492:4524  token.transfer(stakerAddress, 0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap3\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_126:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_129:\n      pop\n        /* \"contracts/Lockup.sol\":4443:4565  if (stakeInfo.isPositive) {... */\n    tag_125:\n        /* \"contracts/Lockup.sol\":4301:4580  {... */\n      pop\n      pop\n        /* \"contracts/Lockup.sol\":4296:4299  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Lockup.sol\":4251:4580  for (uint256 i = 0; i < post.stakers.length; i++) {... */\n      jump(tag_114)\n    tag_115:\n      pop\n        /* \"contracts/Lockup.sol\":4653:4662  uint256 i */\n      0x00\n        /* \"contracts/Lockup.sol\":4648:5151  for (uint256 i = 0; i < post.stakers.length; i++) {... */\n    tag_130:\n        /* \"contracts/Lockup.sol\":4672:4676  post */\n      dup3\n        /* \"contracts/Lockup.sol\":4672:4684  post.stakers */\n      0x04\n      add\n        /* \"contracts/Lockup.sol\":4672:4691  post.stakers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Lockup.sol\":4668:4669  i */\n      dup2\n        /* \"contracts/Lockup.sol\":4668:4691  i < post.stakers.length */\n      lt\n        /* \"contracts/Lockup.sol\":4648:5151  for (uint256 i = 0; i < post.stakers.length; i++) {... */\n      iszero\n      tag_131\n      jumpi\n        /* \"contracts/Lockup.sol\":4717:4738  address stakerAddress */\n      0x00\n        /* \"contracts/Lockup.sol\":4741:4745  post */\n      dup4\n        /* \"contracts/Lockup.sol\":4741:4753  post.stakers */\n      0x04\n      add\n        /* \"contracts/Lockup.sol\":4754:4755  i */\n      dup3\n        /* \"contracts/Lockup.sol\":4741:4756  post.stakers[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_133\n      jumpi\n      tag_134\n      tag_92\n      jump\t// in\n    tag_134:\n    tag_133:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Lockup.sol\":4717:4756  address stakerAddress = post.stakers[i] */\n      swap1\n      pop\n        /* \"contracts/Lockup.sol\":4775:4797  Stake memory stakeInfo */\n      0x00\n        /* \"contracts/Lockup.sol\":4800:4806  stakes */\n      0x02\n        /* \"contracts/Lockup.sol\":4800:4821  stakes[stakerAddress] */\n      0x00\n        /* \"contracts/Lockup.sol\":4807:4820  stakerAddress */\n      dup4\n        /* \"contracts/Lockup.sol\":4800:4821  stakes[stakerAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Lockup.sol\":4775:4821  Stake memory stakeInfo = stakes[stakerAddress] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      tag_136\n      swap1\n      tag_46\n      jump\t// in\n    tag_136:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_137\n      swap1\n      tag_46\n      jump\t// in\n    tag_137:\n      dup1\n      iszero\n      tag_138\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_139\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_138)\n    tag_139:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_140:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_140\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Lockup.sol\":4845:4854  stakeInfo */\n      dup1\n        /* \"contracts/Lockup.sol\":4845:4865  stakeInfo.isPositive */\n      0x20\n      add\n      mload\n        /* \"contracts/Lockup.sol\":4840:5136  if (!stakeInfo.isPositive) {... */\n      tag_141\n      jumpi\n        /* \"contracts/Lockup.sol\":4890:4910  uint256 stakerReward */\n      0x00\n        /* \"contracts/Lockup.sol\":4960:4964  post */\n      dup6\n        /* \"contracts/Lockup.sol\":4960:4983  post.totalNegativeStake */\n      0x03\n      add\n      sload\n        /* \"contracts/Lockup.sol\":4933:4937  post */\n      dup7\n        /* \"contracts/Lockup.sol\":4933:4956  post.totalNegativeStake */\n      0x03\n      add\n      sload\n        /* \"contracts/Lockup.sol\":4914:4923  stakeInfo */\n      dup4\n        /* \"contracts/Lockup.sol\":4914:4930  stakeInfo.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Lockup.sol\":4914:4956  stakeInfo.amount * post.totalNegativeStake */\n      tag_142\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_142:\n        /* \"contracts/Lockup.sol\":4913:4983  (stakeInfo.amount * post.totalNegativeStake) / post.totalNegativeStake */\n      tag_143\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_143:\n        /* \"contracts/Lockup.sol\":4890:4983  uint256 stakerReward = (stakeInfo.amount * post.totalNegativeStake) / post.totalNegativeStake */\n      swap1\n      pop\n        /* \"contracts/Lockup.sol\":5006:5011  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Lockup.sol\":5006:5020  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Lockup.sol\":5021:5034  stakerAddress */\n      dup5\n        /* \"contracts/Lockup.sol\":5036:5048  stakerReward */\n      dup4\n        /* \"contracts/Lockup.sol\":5006:5049  token.transfer(stakerAddress, stakerReward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_144:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_147:\n      pop\n        /* \"contracts/Lockup.sol\":5088:5101  stakerAddress */\n      dup3\n        /* \"contracts/Lockup.sol\":5077:5116  RewardPaid(stakerAddress, stakerReward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/Lockup.sol\":5103:5115  stakerReward */\n      dup3\n        /* \"contracts/Lockup.sol\":5077:5116  RewardPaid(stakerAddress, stakerReward) */\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Lockup.sol\":4867:5136  {... */\n      pop\n        /* \"contracts/Lockup.sol\":4840:5136  if (!stakeInfo.isPositive) {... */\n    tag_141:\n        /* \"contracts/Lockup.sol\":4698:5151  {... */\n      pop\n      pop\n        /* \"contracts/Lockup.sol\":4693:4696  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Lockup.sol\":4648:5151  for (uint256 i = 0; i < post.stakers.length; i++) {... */\n      jump(tag_130)\n    tag_131:\n      pop\n        /* \"contracts/Lockup.sol\":3051:5162  if (predictionOutcome) {... */\n    tag_108:\n        /* \"contracts/Lockup.sol\":5213:5222  userStake */\n      dup3\n        /* \"contracts/Lockup.sol\":5213:5233  userStake.isPositive */\n      0x20\n      add\n      mload\n        /* \"contracts/Lockup.sol\":5209:5381  if (userStake.isPositive) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"contracts/Lockup.sol\":5277:5286  userStake */\n      dup3\n        /* \"contracts/Lockup.sol\":5277:5293  userStake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Lockup.sol\":5250:5254  post */\n      dup3\n        /* \"contracts/Lockup.sol\":5250:5273  post.totalPositiveStake */\n      0x02\n      add\n      0x00\n        /* \"contracts/Lockup.sol\":5250:5293  post.totalPositiveStake -= userStake.amount */\n      dup3\n      dup3\n      sload\n      tag_150\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_150:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Lockup.sol\":5209:5381  if (userStake.isPositive) {... */\n      jump(tag_151)\n    tag_149:\n        /* \"contracts/Lockup.sol\":5353:5362  userStake */\n      dup3\n        /* \"contracts/Lockup.sol\":5353:5369  userStake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Lockup.sol\":5326:5330  post */\n      dup3\n        /* \"contracts/Lockup.sol\":5326:5349  post.totalNegativeStake */\n      0x03\n      add\n      0x00\n        /* \"contracts/Lockup.sol\":5326:5369  post.totalNegativeStake -= userStake.amount */\n      dup3\n      dup3\n      sload\n      tag_152\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_152:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Lockup.sol\":5209:5381  if (userStake.isPositive) {... */\n    tag_151:\n        /* \"contracts/Lockup.sol\":5400:5406  stakes */\n      0x02\n        /* \"contracts/Lockup.sol\":5400:5418  stakes[msg.sender] */\n      0x00\n        /* \"contracts/Lockup.sol\":5407:5417  msg.sender */\n      caller\n        /* \"contracts/Lockup.sol\":5400:5418  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Lockup.sol\":5393:5418  delete stakes[msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      pop\n      pop\n        /* \"contracts/Lockup.sol\":5469:5479  msg.sender */\n      caller\n        /* \"contracts/Lockup.sol\":5460:5506  Unstaked(msg.sender, userStake.amount, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e\n        /* \"contracts/Lockup.sol\":5481:5490  userStake */\n      dup5\n        /* \"contracts/Lockup.sol\":5481:5497  userStake.amount */\n      0x00\n      add\n      mload\n        /* \"contracts/Lockup.sol\":5499:5505  reward */\n      dup4\n        /* \"contracts/Lockup.sol\":5460:5506  Unstaked(msg.sender, userStake.amount, reward) */\n      mload(0x40)\n      tag_155\n      swap3\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Lockup.sol\":2747:5514  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Lockup.sol\":2675:5514  function unstake(bool predictionOutcome, string memory postId) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Lockup.sol\":1454:2626  function stake(uint256 amount, bool isPositive, string memory postId) external {... */\n    tag_31:\n        /* \"contracts/Lockup.sol\":1561:1562  0 */\n      0x00\n        /* \"contracts/Lockup.sol\":1552:1558  amount */\n      dup4\n        /* \"contracts/Lockup.sol\":1552:1562  amount > 0 */\n      gt\n        /* \"contracts/Lockup.sol\":1544:1581  require(amount > 0, \"Cannot stake 0\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"contracts/Lockup.sol\":1631:1637  amount */\n      dup3\n        /* \"contracts/Lockup.sol\":1600:1605  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Lockup.sol\":1600:1615  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Lockup.sol\":1616:1626  msg.sender */\n      caller\n        /* \"contracts/Lockup.sol\":1600:1627  token.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_161:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_164\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"contracts/Lockup.sol\":1600:1637  token.balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/Lockup.sol\":1592:1662  require(token.balanceOf(msg.sender) >= amount, \"Insufficient balance\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"contracts/Lockup.sol\":1727:1733  amount */\n      dup3\n        /* \"contracts/Lockup.sol\":1681:1686  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Lockup.sol\":1681:1696  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Lockup.sol\":1697:1707  msg.sender */\n      caller\n        /* \"contracts/Lockup.sol\":1717:1721  this */\n      address\n        /* \"contracts/Lockup.sol\":1681:1723  token.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap3\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_172:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_173\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_173:\n        /* \"contracts/Lockup.sol\":1681:1733  token.allowance(msg.sender, address(this)) >= amount */\n      lt\n      iszero\n        /* \"contracts/Lockup.sol\":1673:1778  require(token.allowance(msg.sender, address(this)) >= amount, \"Contract not approved to transfer tokens\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/Lockup.sol\":1791:1808  Post storage post */\n      0x00\n        /* \"contracts/Lockup.sol\":1811:1816  posts */\n      0x03\n        /* \"contracts/Lockup.sol\":1817:1823  postId */\n      dup3\n        /* \"contracts/Lockup.sol\":1811:1824  posts[postId] */\n      mload(0x40)\n      tag_177\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_177:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/Lockup.sol\":1791:1824  Post storage post = posts[postId] */\n      swap1\n      pop\n        /* \"contracts/Lockup.sol\":1896:1908  bool success */\n      0x00\n        /* \"contracts/Lockup.sol\":1911:1916  token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Lockup.sol\":1911:1929  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Lockup.sol\":1930:1940  msg.sender */\n      caller\n        /* \"contracts/Lockup.sol\":1950:1954  this */\n      address\n        /* \"contracts/Lockup.sol\":1957:1963  amount */\n      dup9\n        /* \"contracts/Lockup.sol\":1911:1964  token.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_182\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_182:\n        /* \"contracts/Lockup.sol\":1896:1964  bool success = token.transferFrom(msg.sender, address(this), amount) */\n      swap1\n      pop\n        /* \"contracts/Lockup.sol\":1983:1990  success */\n      dup1\n        /* \"contracts/Lockup.sol\":1975:2016  require(success, \"Token transfer failed\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"contracts/Lockup.sol\":2086:2119  Stake(amount, isPositive, postId) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Lockup.sol\":2092:2098  amount */\n      dup7\n        /* \"contracts/Lockup.sol\":2086:2119  Stake(amount, isPositive, postId) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Lockup.sol\":2100:2110  isPositive */\n      dup6\n        /* \"contracts/Lockup.sol\":2086:2119  Stake(amount, isPositive, postId) */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Lockup.sol\":2112:2118  postId */\n      dup5\n        /* \"contracts/Lockup.sol\":2086:2119  Stake(amount, isPositive, postId) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/Lockup.sol\":2065:2071  stakes */\n      0x02\n        /* \"contracts/Lockup.sol\":2065:2083  stakes[msg.sender] */\n      0x00\n        /* \"contracts/Lockup.sol\":2072:2082  msg.sender */\n      caller\n        /* \"contracts/Lockup.sol\":2065:2083  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Lockup.sol\":2065:2119  stakes[msg.sender] = Stake(amount, isPositive, postId) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      swap1\n      dup2\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/Lockup.sol\":2198:2199  0 */\n      0x00\n        /* \"contracts/Lockup.sol\":2178:2182  post */\n      dup3\n        /* \"contracts/Lockup.sol\":2178:2194  post.totalStaked */\n      0x01\n      add\n      sload\n        /* \"contracts/Lockup.sol\":2178:2199  post.totalStaked == 0 */\n      sub\n        /* \"contracts/Lockup.sol\":2174:2302  if (post.totalStaked == 0) {... */\n      tag_188\n      jumpi\n        /* \"contracts/Lockup.sol\":2238:2248  msg.sender */\n      caller\n        /* \"contracts/Lockup.sol\":2216:2220  post */\n      dup3\n        /* \"contracts/Lockup.sol\":2216:2235  post.originalPoster */\n      0x00\n      add\n      0x00\n        /* \"contracts/Lockup.sol\":2216:2248  post.originalPoster = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Lockup.sol\":2174:2302  if (post.totalStaked == 0) {... */\n    tag_188:\n        /* \"contracts/Lockup.sol\":2334:2340  amount */\n      dup5\n        /* \"contracts/Lockup.sol\":2314:2318  post */\n      dup3\n        /* \"contracts/Lockup.sol\":2314:2330  post.totalStaked */\n      0x01\n      add\n      0x00\n        /* \"contracts/Lockup.sol\":2314:2340  post.totalStaked += amount */\n      dup3\n      dup3\n      sload\n      tag_189\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_189:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Lockup.sol\":2351:2355  post */\n      dup2\n        /* \"contracts/Lockup.sol\":2351:2363  post.stakers */\n      0x04\n      add\n        /* \"contracts/Lockup.sol\":2369:2379  msg.sender */\n      caller\n        /* \"contracts/Lockup.sol\":2351:2380  post.stakers.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Lockup.sol\":2417:2427  isPositive */\n      dup4\n        /* \"contracts/Lockup.sol\":2413:2555  if (isPositive) {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"contracts/Lockup.sol\":2471:2477  amount */\n      dup5\n        /* \"contracts/Lockup.sol\":2444:2448  post */\n      dup3\n        /* \"contracts/Lockup.sol\":2444:2467  post.totalPositiveStake */\n      0x02\n      add\n      0x00\n        /* \"contracts/Lockup.sol\":2444:2477  post.totalPositiveStake += amount */\n      dup3\n      dup3\n      sload\n      tag_192\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_192:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Lockup.sol\":2413:2555  if (isPositive) {... */\n      jump(tag_193)\n    tag_191:\n        /* \"contracts/Lockup.sol\":2537:2543  amount */\n      dup5\n        /* \"contracts/Lockup.sol\":2510:2514  post */\n      dup3\n        /* \"contracts/Lockup.sol\":2510:2533  post.totalNegativeStake */\n      0x03\n      add\n      0x00\n        /* \"contracts/Lockup.sol\":2510:2543  post.totalNegativeStake += amount */\n      dup3\n      dup3\n      sload\n      tag_194\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_194:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Lockup.sol\":2413:2555  if (isPositive) {... */\n    tag_193:\n        /* \"contracts/Lockup.sol\":2579:2589  msg.sender */\n      caller\n        /* \"contracts/Lockup.sol\":2572:2618  Staked(msg.sender, amount, isPositive, postId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x56e5c3a64ee1d63cc76545ae78b97f7bb9e3f402463f7f9f86428f5154fc5eaf\n        /* \"contracts/Lockup.sol\":2591:2597  amount */\n      dup7\n        /* \"contracts/Lockup.sol\":2599:2609  isPositive */\n      dup7\n        /* \"contracts/Lockup.sol\":2611:2617  postId */\n      dup7\n        /* \"contracts/Lockup.sol\":2572:2618  Staked(msg.sender, amount, isPositive, postId) */\n      mload(0x40)\n      tag_195\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Lockup.sol\":1533:2626  {... */\n      pop\n      pop\n        /* \"contracts/Lockup.sol\":1454:2626  function stake(uint256 amount, bool isPositive, string memory postId) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_53\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_56\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Lockup.sol\":925:961  mapping(string => Post) public posts */\n    tag_38:\n      0x03\n      dup2\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      dup3\n      add\n      dup1\n      mload\n      dup5\n      dup3\n      mstore\n      0x20\n      dup4\n      add\n      0x20\n      dup6\n      add\n      keccak256\n      dup2\n      dup4\n      mstore\n      dup1\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"contracts/Lockup.sol\":806:827  Reputify public token */\n    tag_42:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_21\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n    tag_154:\n      pop\n      dup1\n      sload\n      tag_211\n      swap1\n      tag_46\n      jump\t// in\n    tag_211:\n      0x00\n      dup3\n      sstore\n      dup1\n      0x1f\n      lt\n      tag_213\n      jumpi\n      pop\n      jump(tag_212)\n    tag_213:\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_214\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n    tag_212:\n      pop\n      jump\t// out\n    tag_215:\n    tag_216:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_217\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_216)\n    tag_217:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_218:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_219:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_220:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_221:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_222:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_295\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_221\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_223:\n        /* \"#utility.yul\":641:665   */\n      tag_297\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_222\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_298\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_298:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_224:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_300\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_223\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_14:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_303\n      tag_219\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":917:1036   */\n    tag_302:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_304\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_224\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_225:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_226:\n        /* \"#utility.yul\":1346:1370   */\n      tag_307\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_225\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1473   */\n    tag_227:\n        /* \"#utility.yul\":1417:1424   */\n      0x00\n        /* \"#utility.yul\":1460:1465   */\n      dup2\n        /* \"#utility.yul\":1453:1466   */\n      iszero\n        /* \"#utility.yul\":1446:1467   */\n      iszero\n        /* \"#utility.yul\":1435:1467   */\n      swap1\n      pop\n        /* \"#utility.yul\":1383:1473   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1479:1588   */\n    tag_228:\n        /* \"#utility.yul\":1560:1581   */\n      tag_310\n        /* \"#utility.yul\":1575:1580   */\n      dup2\n        /* \"#utility.yul\":1560:1581   */\n      tag_227\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":1555:1558   */\n      dup3\n        /* \"#utility.yul\":1548:1582   */\n      mstore\n        /* \"#utility.yul\":1479:1588   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1594:1693   */\n    tag_229:\n        /* \"#utility.yul\":1646:1652   */\n      0x00\n        /* \"#utility.yul\":1680:1685   */\n      dup2\n        /* \"#utility.yul\":1674:1686   */\n      mload\n        /* \"#utility.yul\":1664:1686   */\n      swap1\n      pop\n        /* \"#utility.yul\":1594:1693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1699:1868   */\n    tag_230:\n        /* \"#utility.yul\":1783:1794   */\n      0x00\n        /* \"#utility.yul\":1817:1823   */\n      dup3\n        /* \"#utility.yul\":1812:1815   */\n      dup3\n        /* \"#utility.yul\":1805:1824   */\n      mstore\n        /* \"#utility.yul\":1857:1861   */\n      0x20\n        /* \"#utility.yul\":1852:1855   */\n      dup3\n        /* \"#utility.yul\":1848:1862   */\n      add\n        /* \"#utility.yul\":1833:1862   */\n      swap1\n      pop\n        /* \"#utility.yul\":1699:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2013   */\n    tag_231:\n        /* \"#utility.yul\":1963:1969   */\n      dup3\n        /* \"#utility.yul\":1958:1961   */\n      dup2\n        /* \"#utility.yul\":1953:1956   */\n      dup4\n        /* \"#utility.yul\":1947:1970   */\n      mcopy\n        /* \"#utility.yul\":2004:2005   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      dup4\n        /* \"#utility.yul\":1990:1993   */\n      dup4\n        /* \"#utility.yul\":1986:2002   */\n      add\n        /* \"#utility.yul\":1979:2006   */\n      mstore\n        /* \"#utility.yul\":1874:2013   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2019:2121   */\n    tag_232:\n        /* \"#utility.yul\":2060:2066   */\n      0x00\n        /* \"#utility.yul\":2111:2113   */\n      0x1f\n        /* \"#utility.yul\":2107:2114   */\n      not\n        /* \"#utility.yul\":2102:2104   */\n      0x1f\n        /* \"#utility.yul\":2095:2100   */\n      dup4\n        /* \"#utility.yul\":2091:2105   */\n      add\n        /* \"#utility.yul\":2087:2115   */\n      and\n        /* \"#utility.yul\":2077:2115   */\n      swap1\n      pop\n        /* \"#utility.yul\":2019:2121   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2127:2504   */\n    tag_233:\n        /* \"#utility.yul\":2215:2218   */\n      0x00\n        /* \"#utility.yul\":2243:2282   */\n      tag_316\n        /* \"#utility.yul\":2276:2281   */\n      dup3\n        /* \"#utility.yul\":2243:2282   */\n      tag_229\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":2298:2369   */\n      tag_317\n        /* \"#utility.yul\":2362:2368   */\n      dup2\n        /* \"#utility.yul\":2357:2360   */\n      dup6\n        /* \"#utility.yul\":2298:2369   */\n      tag_230\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":2291:2369   */\n      swap4\n      pop\n        /* \"#utility.yul\":2378:2443   */\n      tag_318\n        /* \"#utility.yul\":2436:2442   */\n      dup2\n        /* \"#utility.yul\":2431:2434   */\n      dup6\n        /* \"#utility.yul\":2424:2428   */\n      0x20\n        /* \"#utility.yul\":2417:2422   */\n      dup7\n        /* \"#utility.yul\":2413:2429   */\n      add\n        /* \"#utility.yul\":2378:2443   */\n      tag_231\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":2468:2497   */\n      tag_319\n        /* \"#utility.yul\":2490:2496   */\n      dup2\n        /* \"#utility.yul\":2468:2497   */\n      tag_232\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":2463:2466   */\n      dup5\n        /* \"#utility.yul\":2459:2498   */\n      add\n        /* \"#utility.yul\":2452:2498   */\n      swap2\n      pop\n        /* \"#utility.yul\":2219:2504   */\n      pop\n        /* \"#utility.yul\":2127:2504   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2510:3031   */\n    tag_17:\n        /* \"#utility.yul\":2673:2677   */\n      0x00\n        /* \"#utility.yul\":2711:2713   */\n      0x60\n        /* \"#utility.yul\":2700:2709   */\n      dup3\n        /* \"#utility.yul\":2696:2714   */\n      add\n        /* \"#utility.yul\":2688:2714   */\n      swap1\n      pop\n        /* \"#utility.yul\":2724:2795   */\n      tag_321\n        /* \"#utility.yul\":2792:2793   */\n      0x00\n        /* \"#utility.yul\":2781:2790   */\n      dup4\n        /* \"#utility.yul\":2777:2794   */\n      add\n        /* \"#utility.yul\":2768:2774   */\n      dup7\n        /* \"#utility.yul\":2724:2795   */\n      tag_226\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":2805:2871   */\n      tag_322\n        /* \"#utility.yul\":2867:2869   */\n      0x20\n        /* \"#utility.yul\":2856:2865   */\n      dup4\n        /* \"#utility.yul\":2852:2870   */\n      add\n        /* \"#utility.yul\":2843:2849   */\n      dup6\n        /* \"#utility.yul\":2805:2871   */\n      tag_228\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2918:2927   */\n      dup2\n        /* \"#utility.yul\":2912:2916   */\n      dup2\n        /* \"#utility.yul\":2908:2928   */\n      sub\n        /* \"#utility.yul\":2903:2905   */\n      0x40\n        /* \"#utility.yul\":2892:2901   */\n      dup4\n        /* \"#utility.yul\":2888:2906   */\n      add\n        /* \"#utility.yul\":2881:2929   */\n      mstore\n        /* \"#utility.yul\":2946:3024   */\n      tag_323\n        /* \"#utility.yul\":3019:3023   */\n      dup2\n        /* \"#utility.yul\":3010:3016   */\n      dup5\n        /* \"#utility.yul\":2946:3024   */\n      tag_233\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2938:3024   */\n      swap1\n      pop\n        /* \"#utility.yul\":2510:3031   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3037:3155   */\n    tag_234:\n        /* \"#utility.yul\":3124:3148   */\n      tag_325\n        /* \"#utility.yul\":3142:3147   */\n      dup2\n        /* \"#utility.yul\":3124:3148   */\n      tag_222\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":3119:3122   */\n      dup3\n        /* \"#utility.yul\":3112:3149   */\n      mstore\n        /* \"#utility.yul\":3037:3155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3161:3383   */\n    tag_23:\n        /* \"#utility.yul\":3254:3258   */\n      0x00\n        /* \"#utility.yul\":3292:3294   */\n      0x20\n        /* \"#utility.yul\":3281:3290   */\n      dup3\n        /* \"#utility.yul\":3277:3295   */\n      add\n        /* \"#utility.yul\":3269:3295   */\n      swap1\n      pop\n        /* \"#utility.yul\":3305:3376   */\n      tag_327\n        /* \"#utility.yul\":3373:3374   */\n      0x00\n        /* \"#utility.yul\":3362:3371   */\n      dup4\n        /* \"#utility.yul\":3358:3375   */\n      add\n        /* \"#utility.yul\":3349:3355   */\n      dup5\n        /* \"#utility.yul\":3305:3376   */\n      tag_234\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":3161:3383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3389:3505   */\n    tag_235:\n        /* \"#utility.yul\":3459:3480   */\n      tag_329\n        /* \"#utility.yul\":3474:3479   */\n      dup2\n        /* \"#utility.yul\":3459:3480   */\n      tag_227\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":3452:3457   */\n      dup2\n        /* \"#utility.yul\":3449:3481   */\n      eq\n        /* \"#utility.yul\":3439:3499   */\n      tag_330\n      jumpi\n        /* \"#utility.yul\":3495:3496   */\n      0x00\n        /* \"#utility.yul\":3492:3493   */\n      dup1\n        /* \"#utility.yul\":3485:3497   */\n      revert\n        /* \"#utility.yul\":3439:3499   */\n    tag_330:\n        /* \"#utility.yul\":3389:3505   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3511:3644   */\n    tag_236:\n        /* \"#utility.yul\":3554:3559   */\n      0x00\n        /* \"#utility.yul\":3592:3598   */\n      dup2\n        /* \"#utility.yul\":3579:3599   */\n      calldataload\n        /* \"#utility.yul\":3570:3599   */\n      swap1\n      pop\n        /* \"#utility.yul\":3608:3638   */\n      tag_332\n        /* \"#utility.yul\":3632:3637   */\n      dup2\n        /* \"#utility.yul\":3608:3638   */\n      tag_235\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":3511:3644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3650:3767   */\n    tag_237:\n        /* \"#utility.yul\":3759:3760   */\n      0x00\n        /* \"#utility.yul\":3756:3757   */\n      dup1\n        /* \"#utility.yul\":3749:3761   */\n      revert\n        /* \"#utility.yul\":3773:3890   */\n    tag_238:\n        /* \"#utility.yul\":3882:3883   */\n      0x00\n        /* \"#utility.yul\":3879:3880   */\n      dup1\n        /* \"#utility.yul\":3872:3884   */\n      revert\n        /* \"#utility.yul\":3896:4076   */\n    tag_239:\n        /* \"#utility.yul\":3944:4021   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3941:3942   */\n      0x00\n        /* \"#utility.yul\":3934:4022   */\n      mstore\n        /* \"#utility.yul\":4041:4045   */\n      0x41\n        /* \"#utility.yul\":4038:4039   */\n      0x04\n        /* \"#utility.yul\":4031:4046   */\n      mstore\n        /* \"#utility.yul\":4065:4069   */\n      0x24\n        /* \"#utility.yul\":4062:4063   */\n      0x00\n        /* \"#utility.yul\":4055:4070   */\n      revert\n        /* \"#utility.yul\":4082:4363   */\n    tag_240:\n        /* \"#utility.yul\":4165:4192   */\n      tag_337\n        /* \"#utility.yul\":4187:4191   */\n      dup3\n        /* \"#utility.yul\":4165:4192   */\n      tag_232\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":4157:4163   */\n      dup2\n        /* \"#utility.yul\":4153:4193   */\n      add\n        /* \"#utility.yul\":4295:4301   */\n      dup2\n        /* \"#utility.yul\":4283:4293   */\n      dup2\n        /* \"#utility.yul\":4280:4302   */\n      lt\n        /* \"#utility.yul\":4259:4277   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4247:4257   */\n      dup3\n        /* \"#utility.yul\":4244:4278   */\n      gt\n        /* \"#utility.yul\":4241:4303   */\n      or\n        /* \"#utility.yul\":4238:4326   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":4306:4324   */\n      tag_339\n      tag_239\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":4238:4326   */\n    tag_338:\n        /* \"#utility.yul\":4346:4356   */\n      dup1\n        /* \"#utility.yul\":4342:4344   */\n      0x40\n        /* \"#utility.yul\":4335:4357   */\n      mstore\n        /* \"#utility.yul\":4125:4363   */\n      pop\n        /* \"#utility.yul\":4082:4363   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4369:4498   */\n    tag_241:\n        /* \"#utility.yul\":4403:4409   */\n      0x00\n        /* \"#utility.yul\":4430:4450   */\n      tag_341\n      tag_218\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":4420:4450   */\n      swap1\n      pop\n        /* \"#utility.yul\":4459:4492   */\n      tag_342\n        /* \"#utility.yul\":4487:4491   */\n      dup3\n        /* \"#utility.yul\":4479:4485   */\n      dup3\n        /* \"#utility.yul\":4459:4492   */\n      tag_240\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":4369:4498   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4504:4812   */\n    tag_242:\n        /* \"#utility.yul\":4566:4570   */\n      0x00\n        /* \"#utility.yul\":4656:4674   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4648:4654   */\n      dup3\n        /* \"#utility.yul\":4645:4675   */\n      gt\n        /* \"#utility.yul\":4642:4698   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":4678:4696   */\n      tag_345\n      tag_239\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4642:4698   */\n    tag_344:\n        /* \"#utility.yul\":4716:4745   */\n      tag_346\n        /* \"#utility.yul\":4738:4744   */\n      dup3\n        /* \"#utility.yul\":4716:4745   */\n      tag_232\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":4708:4745   */\n      swap1\n      pop\n        /* \"#utility.yul\":4800:4804   */\n      0x20\n        /* \"#utility.yul\":4794:4798   */\n      dup2\n        /* \"#utility.yul\":4790:4805   */\n      add\n        /* \"#utility.yul\":4782:4805   */\n      swap1\n      pop\n        /* \"#utility.yul\":4504:4812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4818:4966   */\n    tag_243:\n        /* \"#utility.yul\":4916:4922   */\n      dup3\n        /* \"#utility.yul\":4911:4914   */\n      dup2\n        /* \"#utility.yul\":4906:4909   */\n      dup4\n        /* \"#utility.yul\":4893:4923   */\n      calldatacopy\n        /* \"#utility.yul\":4957:4958   */\n      0x00\n        /* \"#utility.yul\":4948:4954   */\n      dup4\n        /* \"#utility.yul\":4943:4946   */\n      dup4\n        /* \"#utility.yul\":4939:4955   */\n      add\n        /* \"#utility.yul\":4932:4959   */\n      mstore\n        /* \"#utility.yul\":4818:4966   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4972:5397   */\n    tag_244:\n        /* \"#utility.yul\":5050:5055   */\n      0x00\n        /* \"#utility.yul\":5075:5141   */\n      tag_349\n        /* \"#utility.yul\":5091:5140   */\n      tag_350\n        /* \"#utility.yul\":5133:5139   */\n      dup5\n        /* \"#utility.yul\":5091:5140   */\n      tag_242\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":5075:5141   */\n      tag_241\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":5066:5141   */\n      swap1\n      pop\n        /* \"#utility.yul\":5164:5170   */\n      dup3\n        /* \"#utility.yul\":5157:5162   */\n      dup2\n        /* \"#utility.yul\":5150:5171   */\n      mstore\n        /* \"#utility.yul\":5202:5206   */\n      0x20\n        /* \"#utility.yul\":5195:5200   */\n      dup2\n        /* \"#utility.yul\":5191:5207   */\n      add\n        /* \"#utility.yul\":5240:5243   */\n      dup5\n        /* \"#utility.yul\":5231:5237   */\n      dup5\n        /* \"#utility.yul\":5226:5229   */\n      dup5\n        /* \"#utility.yul\":5222:5238   */\n      add\n        /* \"#utility.yul\":5219:5244   */\n      gt\n        /* \"#utility.yul\":5216:5328   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":5247:5326   */\n      tag_352\n      tag_238\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":5216:5328   */\n    tag_351:\n        /* \"#utility.yul\":5337:5391   */\n      tag_353\n        /* \"#utility.yul\":5384:5390   */\n      dup5\n        /* \"#utility.yul\":5379:5382   */\n      dup3\n        /* \"#utility.yul\":5374:5377   */\n      dup6\n        /* \"#utility.yul\":5337:5391   */\n      tag_243\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":5056:5397   */\n      pop\n        /* \"#utility.yul\":4972:5397   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5417:5757   */\n    tag_245:\n        /* \"#utility.yul\":5473:5478   */\n      0x00\n        /* \"#utility.yul\":5522:5525   */\n      dup3\n        /* \"#utility.yul\":5515:5519   */\n      0x1f\n        /* \"#utility.yul\":5507:5513   */\n      dup4\n        /* \"#utility.yul\":5503:5520   */\n      add\n        /* \"#utility.yul\":5499:5526   */\n      slt\n        /* \"#utility.yul\":5489:5611   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":5530:5609   */\n      tag_356\n      tag_237\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":5489:5611   */\n    tag_355:\n        /* \"#utility.yul\":5647:5653   */\n      dup2\n        /* \"#utility.yul\":5634:5654   */\n      calldataload\n        /* \"#utility.yul\":5672:5751   */\n      tag_357\n        /* \"#utility.yul\":5747:5750   */\n      dup5\n        /* \"#utility.yul\":5739:5745   */\n      dup3\n        /* \"#utility.yul\":5732:5736   */\n      0x20\n        /* \"#utility.yul\":5724:5730   */\n      dup7\n        /* \"#utility.yul\":5720:5737   */\n      add\n        /* \"#utility.yul\":5672:5751   */\n      tag_244\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5663:5751   */\n      swap2\n      pop\n        /* \"#utility.yul\":5479:5757   */\n      pop\n        /* \"#utility.yul\":5417:5757   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5763:6411   */\n    tag_26:\n        /* \"#utility.yul\":5838:5844   */\n      0x00\n        /* \"#utility.yul\":5846:5852   */\n      dup1\n        /* \"#utility.yul\":5895:5897   */\n      0x40\n        /* \"#utility.yul\":5883:5892   */\n      dup4\n        /* \"#utility.yul\":5874:5881   */\n      dup6\n        /* \"#utility.yul\":5870:5893   */\n      sub\n        /* \"#utility.yul\":5866:5898   */\n      slt\n        /* \"#utility.yul\":5863:5982   */\n      iszero\n      tag_359\n      jumpi\n        /* \"#utility.yul\":5901:5980   */\n      tag_360\n      tag_219\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":5863:5982   */\n    tag_359:\n        /* \"#utility.yul\":6021:6022   */\n      0x00\n        /* \"#utility.yul\":6046:6096   */\n      tag_361\n        /* \"#utility.yul\":6088:6095   */\n      dup6\n        /* \"#utility.yul\":6079:6085   */\n      dup3\n        /* \"#utility.yul\":6068:6077   */\n      dup7\n        /* \"#utility.yul\":6064:6086   */\n      add\n        /* \"#utility.yul\":6046:6096   */\n      tag_236\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":6036:6096   */\n      swap3\n      pop\n        /* \"#utility.yul\":5992:6106   */\n      pop\n        /* \"#utility.yul\":6173:6175   */\n      0x20\n        /* \"#utility.yul\":6162:6171   */\n      dup4\n        /* \"#utility.yul\":6158:6176   */\n      add\n        /* \"#utility.yul\":6145:6177   */\n      calldataload\n        /* \"#utility.yul\":6204:6222   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6196:6202   */\n      dup2\n        /* \"#utility.yul\":6193:6223   */\n      gt\n        /* \"#utility.yul\":6190:6307   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":6226:6305   */\n      tag_363\n      tag_220\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":6190:6307   */\n    tag_362:\n        /* \"#utility.yul\":6331:6394   */\n      tag_364\n        /* \"#utility.yul\":6386:6393   */\n      dup6\n        /* \"#utility.yul\":6377:6383   */\n      dup3\n        /* \"#utility.yul\":6366:6375   */\n      dup7\n        /* \"#utility.yul\":6362:6384   */\n      add\n        /* \"#utility.yul\":6331:6394   */\n      tag_245\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":6321:6394   */\n      swap2\n      pop\n        /* \"#utility.yul\":6116:6404   */\n      pop\n        /* \"#utility.yul\":5763:6411   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6417:6539   */\n    tag_246:\n        /* \"#utility.yul\":6490:6514   */\n      tag_366\n        /* \"#utility.yul\":6508:6513   */\n      dup2\n        /* \"#utility.yul\":6490:6514   */\n      tag_225\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":6483:6488   */\n      dup2\n        /* \"#utility.yul\":6480:6515   */\n      eq\n        /* \"#utility.yul\":6470:6533   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":6529:6530   */\n      0x00\n        /* \"#utility.yul\":6526:6527   */\n      dup1\n        /* \"#utility.yul\":6519:6531   */\n      revert\n        /* \"#utility.yul\":6470:6533   */\n    tag_367:\n        /* \"#utility.yul\":6417:6539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6545:6684   */\n    tag_247:\n        /* \"#utility.yul\":6591:6596   */\n      0x00\n        /* \"#utility.yul\":6629:6635   */\n      dup2\n        /* \"#utility.yul\":6616:6636   */\n      calldataload\n        /* \"#utility.yul\":6607:6636   */\n      swap1\n      pop\n        /* \"#utility.yul\":6645:6678   */\n      tag_369\n        /* \"#utility.yul\":6672:6677   */\n      dup2\n        /* \"#utility.yul\":6645:6678   */\n      tag_246\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6545:6684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6690:7483   */\n    tag_30:\n        /* \"#utility.yul\":6774:6780   */\n      0x00\n        /* \"#utility.yul\":6782:6788   */\n      dup1\n        /* \"#utility.yul\":6790:6796   */\n      0x00\n        /* \"#utility.yul\":6839:6841   */\n      0x60\n        /* \"#utility.yul\":6827:6836   */\n      dup5\n        /* \"#utility.yul\":6818:6825   */\n      dup7\n        /* \"#utility.yul\":6814:6837   */\n      sub\n        /* \"#utility.yul\":6810:6842   */\n      slt\n        /* \"#utility.yul\":6807:6926   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":6845:6924   */\n      tag_372\n      tag_219\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6807:6926   */\n    tag_371:\n        /* \"#utility.yul\":6965:6966   */\n      0x00\n        /* \"#utility.yul\":6990:7043   */\n      tag_373\n        /* \"#utility.yul\":7035:7042   */\n      dup7\n        /* \"#utility.yul\":7026:7032   */\n      dup3\n        /* \"#utility.yul\":7015:7024   */\n      dup8\n        /* \"#utility.yul\":7011:7033   */\n      add\n        /* \"#utility.yul\":6990:7043   */\n      tag_247\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":6980:7043   */\n      swap4\n      pop\n        /* \"#utility.yul\":6936:7053   */\n      pop\n        /* \"#utility.yul\":7092:7094   */\n      0x20\n        /* \"#utility.yul\":7118:7168   */\n      tag_374\n        /* \"#utility.yul\":7160:7167   */\n      dup7\n        /* \"#utility.yul\":7151:7157   */\n      dup3\n        /* \"#utility.yul\":7140:7149   */\n      dup8\n        /* \"#utility.yul\":7136:7158   */\n      add\n        /* \"#utility.yul\":7118:7168   */\n      tag_236\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7108:7168   */\n      swap3\n      pop\n        /* \"#utility.yul\":7063:7178   */\n      pop\n        /* \"#utility.yul\":7245:7247   */\n      0x40\n        /* \"#utility.yul\":7234:7243   */\n      dup5\n        /* \"#utility.yul\":7230:7248   */\n      add\n        /* \"#utility.yul\":7217:7249   */\n      calldataload\n        /* \"#utility.yul\":7276:7294   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7268:7274   */\n      dup2\n        /* \"#utility.yul\":7265:7295   */\n      gt\n        /* \"#utility.yul\":7262:7379   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":7298:7377   */\n      tag_376\n      tag_220\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":7262:7379   */\n    tag_375:\n        /* \"#utility.yul\":7403:7466   */\n      tag_377\n        /* \"#utility.yul\":7458:7465   */\n      dup7\n        /* \"#utility.yul\":7449:7455   */\n      dup3\n        /* \"#utility.yul\":7438:7447   */\n      dup8\n        /* \"#utility.yul\":7434:7456   */\n      add\n        /* \"#utility.yul\":7403:7466   */\n      tag_245\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7393:7466   */\n      swap2\n      pop\n        /* \"#utility.yul\":7188:7476   */\n      pop\n        /* \"#utility.yul\":6690:7483   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7489:7998   */\n    tag_37:\n        /* \"#utility.yul\":7558:7564   */\n      0x00\n        /* \"#utility.yul\":7607:7609   */\n      0x20\n        /* \"#utility.yul\":7595:7604   */\n      dup3\n        /* \"#utility.yul\":7586:7593   */\n      dup5\n        /* \"#utility.yul\":7582:7605   */\n      sub\n        /* \"#utility.yul\":7578:7610   */\n      slt\n        /* \"#utility.yul\":7575:7694   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":7613:7692   */\n      tag_380\n      tag_219\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7575:7694   */\n    tag_379:\n        /* \"#utility.yul\":7761:7762   */\n      0x00\n        /* \"#utility.yul\":7750:7759   */\n      dup3\n        /* \"#utility.yul\":7746:7763   */\n      add\n        /* \"#utility.yul\":7733:7764   */\n      calldataload\n        /* \"#utility.yul\":7791:7809   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7783:7789   */\n      dup2\n        /* \"#utility.yul\":7780:7810   */\n      gt\n        /* \"#utility.yul\":7777:7894   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":7813:7892   */\n      tag_382\n      tag_220\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":7777:7894   */\n    tag_381:\n        /* \"#utility.yul\":7918:7981   */\n      tag_383\n        /* \"#utility.yul\":7973:7980   */\n      dup5\n        /* \"#utility.yul\":7964:7970   */\n      dup3\n        /* \"#utility.yul\":7953:7962   */\n      dup6\n        /* \"#utility.yul\":7949:7971   */\n      add\n        /* \"#utility.yul\":7918:7981   */\n      tag_245\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":7908:7981   */\n      swap2\n      pop\n        /* \"#utility.yul\":7704:7991   */\n      pop\n        /* \"#utility.yul\":7489:7998   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8004:8557   */\n    tag_40:\n        /* \"#utility.yul\":8181:8185   */\n      0x00\n        /* \"#utility.yul\":8219:8222   */\n      0x80\n        /* \"#utility.yul\":8208:8217   */\n      dup3\n        /* \"#utility.yul\":8204:8223   */\n      add\n        /* \"#utility.yul\":8196:8223   */\n      swap1\n      pop\n        /* \"#utility.yul\":8233:8304   */\n      tag_385\n        /* \"#utility.yul\":8301:8302   */\n      0x00\n        /* \"#utility.yul\":8290:8299   */\n      dup4\n        /* \"#utility.yul\":8286:8303   */\n      add\n        /* \"#utility.yul\":8277:8283   */\n      dup8\n        /* \"#utility.yul\":8233:8304   */\n      tag_234\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":8314:8386   */\n      tag_386\n        /* \"#utility.yul\":8382:8384   */\n      0x20\n        /* \"#utility.yul\":8371:8380   */\n      dup4\n        /* \"#utility.yul\":8367:8385   */\n      add\n        /* \"#utility.yul\":8358:8364   */\n      dup7\n        /* \"#utility.yul\":8314:8386   */\n      tag_226\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":8396:8468   */\n      tag_387\n        /* \"#utility.yul\":8464:8466   */\n      0x40\n        /* \"#utility.yul\":8453:8462   */\n      dup4\n        /* \"#utility.yul\":8449:8467   */\n      add\n        /* \"#utility.yul\":8440:8446   */\n      dup6\n        /* \"#utility.yul\":8396:8468   */\n      tag_226\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":8478:8550   */\n      tag_388\n        /* \"#utility.yul\":8546:8548   */\n      0x60\n        /* \"#utility.yul\":8535:8544   */\n      dup4\n        /* \"#utility.yul\":8531:8549   */\n      add\n        /* \"#utility.yul\":8522:8528   */\n      dup5\n        /* \"#utility.yul\":8478:8550   */\n      tag_226\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":8004:8557   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8563:8623   */\n    tag_248:\n        /* \"#utility.yul\":8591:8594   */\n      0x00\n        /* \"#utility.yul\":8612:8617   */\n      dup2\n        /* \"#utility.yul\":8605:8617   */\n      swap1\n      pop\n        /* \"#utility.yul\":8563:8623   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8629:8771   */\n    tag_249:\n        /* \"#utility.yul\":8679:8688   */\n      0x00\n        /* \"#utility.yul\":8712:8765   */\n      tag_391\n        /* \"#utility.yul\":8730:8764   */\n      tag_392\n        /* \"#utility.yul\":8739:8763   */\n      tag_393\n        /* \"#utility.yul\":8757:8762   */\n      dup5\n        /* \"#utility.yul\":8739:8763   */\n      tag_221\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8730:8764   */\n      tag_248\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":8712:8765   */\n      tag_221\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":8699:8765   */\n      swap1\n      pop\n        /* \"#utility.yul\":8629:8771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8777:8903   */\n    tag_250:\n        /* \"#utility.yul\":8827:8836   */\n      0x00\n        /* \"#utility.yul\":8860:8897   */\n      tag_395\n        /* \"#utility.yul\":8891:8896   */\n      dup3\n        /* \"#utility.yul\":8860:8897   */\n      tag_249\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":8847:8897   */\n      swap1\n      pop\n        /* \"#utility.yul\":8777:8903   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8909:9052   */\n    tag_251:\n        /* \"#utility.yul\":8976:8985   */\n      0x00\n        /* \"#utility.yul\":9009:9046   */\n      tag_397\n        /* \"#utility.yul\":9040:9045   */\n      dup3\n        /* \"#utility.yul\":9009:9046   */\n      tag_250\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":8996:9046   */\n      swap1\n      pop\n        /* \"#utility.yul\":8909:9052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9058:9223   */\n    tag_252:\n        /* \"#utility.yul\":9162:9216   */\n      tag_399\n        /* \"#utility.yul\":9210:9215   */\n      dup2\n        /* \"#utility.yul\":9162:9216   */\n      tag_251\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":9157:9160   */\n      dup3\n        /* \"#utility.yul\":9150:9217   */\n      mstore\n        /* \"#utility.yul\":9058:9223   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9229:9485   */\n    tag_44:\n        /* \"#utility.yul\":9339:9343   */\n      0x00\n        /* \"#utility.yul\":9377:9379   */\n      0x20\n        /* \"#utility.yul\":9366:9375   */\n      dup3\n        /* \"#utility.yul\":9362:9380   */\n      add\n        /* \"#utility.yul\":9354:9380   */\n      swap1\n      pop\n        /* \"#utility.yul\":9390:9478   */\n      tag_401\n        /* \"#utility.yul\":9475:9476   */\n      0x00\n        /* \"#utility.yul\":9464:9473   */\n      dup4\n        /* \"#utility.yul\":9460:9477   */\n      add\n        /* \"#utility.yul\":9451:9457   */\n      dup5\n        /* \"#utility.yul\":9390:9478   */\n      tag_252\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":9229:9485   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9491:9671   */\n    tag_253:\n        /* \"#utility.yul\":9539:9616   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9536:9537   */\n      0x00\n        /* \"#utility.yul\":9529:9617   */\n      mstore\n        /* \"#utility.yul\":9636:9640   */\n      0x22\n        /* \"#utility.yul\":9633:9634   */\n      0x04\n        /* \"#utility.yul\":9626:9641   */\n      mstore\n        /* \"#utility.yul\":9660:9664   */\n      0x24\n        /* \"#utility.yul\":9657:9658   */\n      0x00\n        /* \"#utility.yul\":9650:9665   */\n      revert\n        /* \"#utility.yul\":9677:9997   */\n    tag_46:\n        /* \"#utility.yul\":9721:9727   */\n      0x00\n        /* \"#utility.yul\":9758:9759   */\n      0x02\n        /* \"#utility.yul\":9752:9756   */\n      dup3\n        /* \"#utility.yul\":9748:9760   */\n      div\n        /* \"#utility.yul\":9738:9760   */\n      swap1\n      pop\n        /* \"#utility.yul\":9805:9806   */\n      0x01\n        /* \"#utility.yul\":9799:9803   */\n      dup3\n        /* \"#utility.yul\":9795:9807   */\n      and\n        /* \"#utility.yul\":9826:9844   */\n      dup1\n        /* \"#utility.yul\":9816:9897   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":9882:9886   */\n      0x7f\n        /* \"#utility.yul\":9874:9880   */\n      dup3\n        /* \"#utility.yul\":9870:9887   */\n      and\n        /* \"#utility.yul\":9860:9887   */\n      swap2\n      pop\n        /* \"#utility.yul\":9816:9897   */\n    tag_404:\n        /* \"#utility.yul\":9944:9946   */\n      0x20\n        /* \"#utility.yul\":9936:9942   */\n      dup3\n        /* \"#utility.yul\":9933:9947   */\n      lt\n        /* \"#utility.yul\":9913:9931   */\n      dup2\n        /* \"#utility.yul\":9910:9948   */\n      sub\n        /* \"#utility.yul\":9907:9991   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":9963:9981   */\n      tag_406\n      tag_253\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9907:9991   */\n    tag_405:\n        /* \"#utility.yul\":9728:9997   */\n      pop\n        /* \"#utility.yul\":9677:9997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10003:10151   */\n    tag_254:\n        /* \"#utility.yul\":10105:10116   */\n      0x00\n        /* \"#utility.yul\":10142:10145   */\n      dup2\n        /* \"#utility.yul\":10127:10145   */\n      swap1\n      pop\n        /* \"#utility.yul\":10003:10151   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10157:10547   */\n    tag_255:\n        /* \"#utility.yul\":10263:10266   */\n      0x00\n        /* \"#utility.yul\":10291:10330   */\n      tag_409\n        /* \"#utility.yul\":10324:10329   */\n      dup3\n        /* \"#utility.yul\":10291:10330   */\n      tag_229\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":10346:10435   */\n      tag_410\n        /* \"#utility.yul\":10428:10434   */\n      dup2\n        /* \"#utility.yul\":10423:10426   */\n      dup6\n        /* \"#utility.yul\":10346:10435   */\n      tag_254\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":10339:10435   */\n      swap4\n      pop\n        /* \"#utility.yul\":10444:10509   */\n      tag_411\n        /* \"#utility.yul\":10502:10508   */\n      dup2\n        /* \"#utility.yul\":10497:10500   */\n      dup6\n        /* \"#utility.yul\":10490:10494   */\n      0x20\n        /* \"#utility.yul\":10483:10488   */\n      dup7\n        /* \"#utility.yul\":10479:10495   */\n      add\n        /* \"#utility.yul\":10444:10509   */\n      tag_231\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":10534:10540   */\n      dup1\n        /* \"#utility.yul\":10529:10532   */\n      dup5\n        /* \"#utility.yul\":10525:10541   */\n      add\n        /* \"#utility.yul\":10518:10541   */\n      swap2\n      pop\n        /* \"#utility.yul\":10267:10547   */\n      pop\n        /* \"#utility.yul\":10157:10547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10553:10828   */\n    tag_65:\n        /* \"#utility.yul\":10685:10688   */\n      0x00\n        /* \"#utility.yul\":10707:10802   */\n      tag_413\n        /* \"#utility.yul\":10798:10801   */\n      dup3\n        /* \"#utility.yul\":10789:10795   */\n      dup5\n        /* \"#utility.yul\":10707:10802   */\n      tag_255\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":10700:10802   */\n      swap2\n      pop\n        /* \"#utility.yul\":10819:10822   */\n      dup2\n        /* \"#utility.yul\":10812:10822   */\n      swap1\n      pop\n        /* \"#utility.yul\":10553:10828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10834:10998   */\n    tag_256:\n        /* \"#utility.yul\":10974:10990   */\n      0x4e6f207374616b6520666f756e64000000000000000000000000000000000000\n        /* \"#utility.yul\":10970:10971   */\n      0x00\n        /* \"#utility.yul\":10962:10968   */\n      dup3\n        /* \"#utility.yul\":10958:10972   */\n      add\n        /* \"#utility.yul\":10951:10991   */\n      mstore\n        /* \"#utility.yul\":10834:10998   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11004:11370   */\n    tag_257:\n        /* \"#utility.yul\":11146:11149   */\n      0x00\n        /* \"#utility.yul\":11167:11234   */\n      tag_416\n        /* \"#utility.yul\":11231:11233   */\n      0x0e\n        /* \"#utility.yul\":11226:11229   */\n      dup4\n        /* \"#utility.yul\":11167:11234   */\n      tag_230\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":11160:11234   */\n      swap2\n      pop\n        /* \"#utility.yul\":11243:11336   */\n      tag_417\n        /* \"#utility.yul\":11332:11335   */\n      dup3\n        /* \"#utility.yul\":11243:11336   */\n      tag_256\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":11361:11363   */\n      0x20\n        /* \"#utility.yul\":11356:11359   */\n      dup3\n        /* \"#utility.yul\":11352:11364   */\n      add\n        /* \"#utility.yul\":11345:11364   */\n      swap1\n      pop\n        /* \"#utility.yul\":11004:11370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11376:11795   */\n    tag_68:\n        /* \"#utility.yul\":11542:11546   */\n      0x00\n        /* \"#utility.yul\":11580:11582   */\n      0x20\n        /* \"#utility.yul\":11569:11578   */\n      dup3\n        /* \"#utility.yul\":11565:11583   */\n      add\n        /* \"#utility.yul\":11557:11583   */\n      swap1\n      pop\n        /* \"#utility.yul\":11629:11638   */\n      dup2\n        /* \"#utility.yul\":11623:11627   */\n      dup2\n        /* \"#utility.yul\":11619:11639   */\n      sub\n        /* \"#utility.yul\":11615:11616   */\n      0x00\n        /* \"#utility.yul\":11604:11613   */\n      dup4\n        /* \"#utility.yul\":11600:11617   */\n      add\n        /* \"#utility.yul\":11593:11640   */\n      mstore\n        /* \"#utility.yul\":11657:11788   */\n      tag_419\n        /* \"#utility.yul\":11783:11787   */\n      dup2\n        /* \"#utility.yul\":11657:11788   */\n      tag_257\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":11649:11788   */\n      swap1\n      pop\n        /* \"#utility.yul\":11376:11795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11801:11967   */\n    tag_258:\n        /* \"#utility.yul\":11941:11959   */\n      0x506f7374204944206d69736d6174636800000000000000000000000000000000\n        /* \"#utility.yul\":11937:11938   */\n      0x00\n        /* \"#utility.yul\":11929:11935   */\n      dup3\n        /* \"#utility.yul\":11925:11939   */\n      add\n        /* \"#utility.yul\":11918:11960   */\n      mstore\n        /* \"#utility.yul\":11801:11967   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11973:12339   */\n    tag_259:\n        /* \"#utility.yul\":12115:12118   */\n      0x00\n        /* \"#utility.yul\":12136:12203   */\n      tag_422\n        /* \"#utility.yul\":12200:12202   */\n      0x10\n        /* \"#utility.yul\":12195:12198   */\n      dup4\n        /* \"#utility.yul\":12136:12203   */\n      tag_230\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":12129:12203   */\n      swap2\n      pop\n        /* \"#utility.yul\":12212:12305   */\n      tag_423\n        /* \"#utility.yul\":12301:12304   */\n      dup3\n        /* \"#utility.yul\":12212:12305   */\n      tag_258\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":12330:12332   */\n      0x20\n        /* \"#utility.yul\":12325:12328   */\n      dup3\n        /* \"#utility.yul\":12321:12333   */\n      add\n        /* \"#utility.yul\":12314:12333   */\n      swap1\n      pop\n        /* \"#utility.yul\":11973:12339   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12345:12764   */\n    tag_71:\n        /* \"#utility.yul\":12511:12515   */\n      0x00\n        /* \"#utility.yul\":12549:12551   */\n      0x20\n        /* \"#utility.yul\":12538:12547   */\n      dup3\n        /* \"#utility.yul\":12534:12552   */\n      add\n        /* \"#utility.yul\":12526:12552   */\n      swap1\n      pop\n        /* \"#utility.yul\":12598:12607   */\n      dup2\n        /* \"#utility.yul\":12592:12596   */\n      dup2\n        /* \"#utility.yul\":12588:12608   */\n      sub\n        /* \"#utility.yul\":12584:12585   */\n      0x00\n        /* \"#utility.yul\":12573:12582   */\n      dup4\n        /* \"#utility.yul\":12569:12586   */\n      add\n        /* \"#utility.yul\":12562:12609   */\n      mstore\n        /* \"#utility.yul\":12626:12757   */\n      tag_425\n        /* \"#utility.yul\":12752:12756   */\n      dup2\n        /* \"#utility.yul\":12626:12757   */\n      tag_259\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":12618:12757   */\n      swap1\n      pop\n        /* \"#utility.yul\":12345:12764   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12770:12950   */\n    tag_260:\n        /* \"#utility.yul\":12818:12895   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12815:12816   */\n      0x00\n        /* \"#utility.yul\":12808:12896   */\n      mstore\n        /* \"#utility.yul\":12915:12919   */\n      0x11\n        /* \"#utility.yul\":12912:12913   */\n      0x04\n        /* \"#utility.yul\":12905:12920   */\n      mstore\n        /* \"#utility.yul\":12939:12943   */\n      0x24\n        /* \"#utility.yul\":12936:12937   */\n      0x00\n        /* \"#utility.yul\":12929:12944   */\n      revert\n        /* \"#utility.yul\":12956:13366   */\n    tag_74:\n        /* \"#utility.yul\":12996:13003   */\n      0x00\n        /* \"#utility.yul\":13019:13039   */\n      tag_428\n        /* \"#utility.yul\":13037:13038   */\n      dup3\n        /* \"#utility.yul\":13019:13039   */\n      tag_225\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":13014:13039   */\n      swap2\n      pop\n        /* \"#utility.yul\":13053:13073   */\n      tag_429\n        /* \"#utility.yul\":13071:13072   */\n      dup4\n        /* \"#utility.yul\":13053:13073   */\n      tag_225\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":13048:13073   */\n      swap3\n      pop\n        /* \"#utility.yul\":13108:13109   */\n      dup3\n        /* \"#utility.yul\":13105:13106   */\n      dup3\n        /* \"#utility.yul\":13101:13110   */\n      mul\n        /* \"#utility.yul\":13130:13160   */\n      tag_430\n        /* \"#utility.yul\":13148:13159   */\n      dup2\n        /* \"#utility.yul\":13130:13160   */\n      tag_225\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":13119:13160   */\n      swap2\n      pop\n        /* \"#utility.yul\":13309:13310   */\n      dup3\n        /* \"#utility.yul\":13300:13307   */\n      dup3\n        /* \"#utility.yul\":13296:13311   */\n      div\n        /* \"#utility.yul\":13293:13294   */\n      dup5\n        /* \"#utility.yul\":13290:13312   */\n      eq\n        /* \"#utility.yul\":13270:13271   */\n      dup4\n        /* \"#utility.yul\":13263:13272   */\n      iszero\n        /* \"#utility.yul\":13243:13326   */\n      or\n        /* \"#utility.yul\":13220:13359   */\n      tag_431\n      jumpi\n        /* \"#utility.yul\":13339:13357   */\n      tag_432\n      tag_260\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":13220:13359   */\n    tag_431:\n        /* \"#utility.yul\":13004:13366   */\n      pop\n        /* \"#utility.yul\":12956:13366   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13372:13552   */\n    tag_261:\n        /* \"#utility.yul\":13420:13497   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13417:13418   */\n      0x00\n        /* \"#utility.yul\":13410:13498   */\n      mstore\n        /* \"#utility.yul\":13517:13521   */\n      0x12\n        /* \"#utility.yul\":13514:13515   */\n      0x04\n        /* \"#utility.yul\":13507:13522   */\n      mstore\n        /* \"#utility.yul\":13541:13545   */\n      0x24\n        /* \"#utility.yul\":13538:13539   */\n      0x00\n        /* \"#utility.yul\":13531:13546   */\n      revert\n        /* \"#utility.yul\":13558:13743   */\n    tag_76:\n        /* \"#utility.yul\":13598:13599   */\n      0x00\n        /* \"#utility.yul\":13615:13635   */\n      tag_435\n        /* \"#utility.yul\":13633:13634   */\n      dup3\n        /* \"#utility.yul\":13615:13635   */\n      tag_225\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":13610:13635   */\n      swap2\n      pop\n        /* \"#utility.yul\":13649:13669   */\n      tag_436\n        /* \"#utility.yul\":13667:13668   */\n      dup4\n        /* \"#utility.yul\":13649:13669   */\n      tag_225\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":13644:13669   */\n      swap3\n      pop\n        /* \"#utility.yul\":13688:13689   */\n      dup3\n        /* \"#utility.yul\":13678:13713   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":13693:13711   */\n      tag_438\n      tag_261\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13678:13713   */\n    tag_437:\n        /* \"#utility.yul\":13735:13736   */\n      dup3\n        /* \"#utility.yul\":13732:13733   */\n      dup3\n        /* \"#utility.yul\":13728:13737   */\n      div\n        /* \"#utility.yul\":13723:13737   */\n      swap1\n      pop\n        /* \"#utility.yul\":13558:13743   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13749:13940   */\n    tag_78:\n        /* \"#utility.yul\":13789:13792   */\n      0x00\n        /* \"#utility.yul\":13808:13828   */\n      tag_440\n        /* \"#utility.yul\":13826:13827   */\n      dup3\n        /* \"#utility.yul\":13808:13828   */\n      tag_225\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":13803:13828   */\n      swap2\n      pop\n        /* \"#utility.yul\":13842:13862   */\n      tag_441\n        /* \"#utility.yul\":13860:13861   */\n      dup4\n        /* \"#utility.yul\":13842:13862   */\n      tag_225\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":13837:13862   */\n      swap3\n      pop\n        /* \"#utility.yul\":13885:13886   */\n      dup3\n        /* \"#utility.yul\":13882:13883   */\n      dup3\n        /* \"#utility.yul\":13878:13887   */\n      add\n        /* \"#utility.yul\":13871:13887   */\n      swap1\n      pop\n        /* \"#utility.yul\":13906:13909   */\n      dup1\n        /* \"#utility.yul\":13903:13904   */\n      dup3\n        /* \"#utility.yul\":13900:13910   */\n      gt\n        /* \"#utility.yul\":13897:13933   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":13913:13931   */\n      tag_443\n      tag_260\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":13897:13933   */\n    tag_442:\n        /* \"#utility.yul\":13749:13940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13946:14278   */\n    tag_80:\n        /* \"#utility.yul\":14067:14071   */\n      0x00\n        /* \"#utility.yul\":14105:14107   */\n      0x40\n        /* \"#utility.yul\":14094:14103   */\n      dup3\n        /* \"#utility.yul\":14090:14108   */\n      add\n        /* \"#utility.yul\":14082:14108   */\n      swap1\n      pop\n        /* \"#utility.yul\":14118:14189   */\n      tag_445\n        /* \"#utility.yul\":14186:14187   */\n      0x00\n        /* \"#utility.yul\":14175:14184   */\n      dup4\n        /* \"#utility.yul\":14171:14188   */\n      add\n        /* \"#utility.yul\":14162:14168   */\n      dup6\n        /* \"#utility.yul\":14118:14189   */\n      tag_234\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":14199:14271   */\n      tag_446\n        /* \"#utility.yul\":14267:14269   */\n      0x20\n        /* \"#utility.yul\":14256:14265   */\n      dup4\n        /* \"#utility.yul\":14252:14270   */\n      add\n        /* \"#utility.yul\":14243:14249   */\n      dup5\n        /* \"#utility.yul\":14199:14271   */\n      tag_226\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":13946:14278   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14284:14421   */\n    tag_262:\n        /* \"#utility.yul\":14338:14343   */\n      0x00\n        /* \"#utility.yul\":14369:14375   */\n      dup2\n        /* \"#utility.yul\":14363:14376   */\n      mload\n        /* \"#utility.yul\":14354:14376   */\n      swap1\n      pop\n        /* \"#utility.yul\":14385:14415   */\n      tag_448\n        /* \"#utility.yul\":14409:14414   */\n      dup2\n        /* \"#utility.yul\":14385:14415   */\n      tag_235\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":14284:14421   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14427:14772   */\n    tag_84:\n        /* \"#utility.yul\":14494:14500   */\n      0x00\n        /* \"#utility.yul\":14543:14545   */\n      0x20\n        /* \"#utility.yul\":14531:14540   */\n      dup3\n        /* \"#utility.yul\":14522:14529   */\n      dup5\n        /* \"#utility.yul\":14518:14541   */\n      sub\n        /* \"#utility.yul\":14514:14546   */\n      slt\n        /* \"#utility.yul\":14511:14630   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":14549:14628   */\n      tag_451\n      tag_219\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":14511:14630   */\n    tag_450:\n        /* \"#utility.yul\":14669:14670   */\n      0x00\n        /* \"#utility.yul\":14694:14755   */\n      tag_452\n        /* \"#utility.yul\":14747:14754   */\n      dup5\n        /* \"#utility.yul\":14738:14744   */\n      dup3\n        /* \"#utility.yul\":14727:14736   */\n      dup6\n        /* \"#utility.yul\":14723:14745   */\n      add\n        /* \"#utility.yul\":14694:14755   */\n      tag_262\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":14684:14755   */\n      swap2\n      pop\n        /* \"#utility.yul\":14640:14765   */\n      pop\n        /* \"#utility.yul\":14427:14772   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14778:14972   */\n    tag_86:\n        /* \"#utility.yul\":14818:14822   */\n      0x00\n        /* \"#utility.yul\":14838:14858   */\n      tag_454\n        /* \"#utility.yul\":14856:14857   */\n      dup3\n        /* \"#utility.yul\":14838:14858   */\n      tag_225\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":14833:14858   */\n      swap2\n      pop\n        /* \"#utility.yul\":14872:14892   */\n      tag_455\n        /* \"#utility.yul\":14890:14891   */\n      dup4\n        /* \"#utility.yul\":14872:14892   */\n      tag_225\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":14867:14892   */\n      swap3\n      pop\n        /* \"#utility.yul\":14916:14917   */\n      dup3\n        /* \"#utility.yul\":14913:14914   */\n      dup3\n        /* \"#utility.yul\":14909:14918   */\n      sub\n        /* \"#utility.yul\":14901:14918   */\n      swap1\n      pop\n        /* \"#utility.yul\":14940:14941   */\n      dup2\n        /* \"#utility.yul\":14934:14938   */\n      dup2\n        /* \"#utility.yul\":14931:14942   */\n      gt\n        /* \"#utility.yul\":14928:14965   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":14945:14963   */\n      tag_457\n      tag_260\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":14928:14965   */\n    tag_456:\n        /* \"#utility.yul\":14778:14972   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14978:15158   */\n    tag_92:\n        /* \"#utility.yul\":15026:15103   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15023:15024   */\n      0x00\n        /* \"#utility.yul\":15016:15104   */\n      mstore\n        /* \"#utility.yul\":15123:15127   */\n      0x32\n        /* \"#utility.yul\":15120:15121   */\n      0x04\n        /* \"#utility.yul\":15113:15128   */\n      mstore\n        /* \"#utility.yul\":15147:15151   */\n      0x24\n        /* \"#utility.yul\":15144:15145   */\n      0x00\n        /* \"#utility.yul\":15137:15152   */\n      revert\n        /* \"#utility.yul\":15164:15386   */\n    tag_107:\n        /* \"#utility.yul\":15257:15261   */\n      0x00\n        /* \"#utility.yul\":15295:15297   */\n      0x20\n        /* \"#utility.yul\":15284:15293   */\n      dup3\n        /* \"#utility.yul\":15280:15298   */\n      add\n        /* \"#utility.yul\":15272:15298   */\n      swap1\n      pop\n        /* \"#utility.yul\":15308:15379   */\n      tag_460\n        /* \"#utility.yul\":15376:15377   */\n      0x00\n        /* \"#utility.yul\":15365:15374   */\n      dup4\n        /* \"#utility.yul\":15361:15378   */\n      add\n        /* \"#utility.yul\":15352:15358   */\n      dup5\n        /* \"#utility.yul\":15308:15379   */\n      tag_226\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":15164:15386   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15392:15477   */\n    tag_263:\n        /* \"#utility.yul\":15437:15444   */\n      0x00\n        /* \"#utility.yul\":15466:15471   */\n      dup2\n        /* \"#utility.yul\":15455:15471   */\n      swap1\n      pop\n        /* \"#utility.yul\":15392:15477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15483:15641   */\n    tag_264:\n        /* \"#utility.yul\":15541:15550   */\n      0x00\n        /* \"#utility.yul\":15574:15635   */\n      tag_463\n        /* \"#utility.yul\":15592:15634   */\n      tag_464\n        /* \"#utility.yul\":15601:15633   */\n      tag_465\n        /* \"#utility.yul\":15627:15632   */\n      dup5\n        /* \"#utility.yul\":15601:15633   */\n      tag_263\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":15592:15634   */\n      tag_248\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":15574:15635   */\n      tag_225\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":15561:15635   */\n      swap1\n      pop\n        /* \"#utility.yul\":15483:15641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15647:15794   */\n    tag_265:\n        /* \"#utility.yul\":15742:15787   */\n      tag_467\n        /* \"#utility.yul\":15781:15786   */\n      dup2\n        /* \"#utility.yul\":15742:15787   */\n      tag_264\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":15737:15740   */\n      dup3\n        /* \"#utility.yul\":15730:15788   */\n      mstore\n        /* \"#utility.yul\":15647:15794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15800:16148   */\n    tag_110:\n        /* \"#utility.yul\":15929:15933   */\n      0x00\n        /* \"#utility.yul\":15967:15969   */\n      0x40\n        /* \"#utility.yul\":15956:15965   */\n      dup3\n        /* \"#utility.yul\":15952:15970   */\n      add\n        /* \"#utility.yul\":15944:15970   */\n      swap1\n      pop\n        /* \"#utility.yul\":15980:16051   */\n      tag_469\n        /* \"#utility.yul\":16048:16049   */\n      0x00\n        /* \"#utility.yul\":16037:16046   */\n      dup4\n        /* \"#utility.yul\":16033:16050   */\n      add\n        /* \"#utility.yul\":16024:16030   */\n      dup6\n        /* \"#utility.yul\":15980:16051   */\n      tag_234\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":16061:16141   */\n      tag_470\n        /* \"#utility.yul\":16137:16139   */\n      0x20\n        /* \"#utility.yul\":16126:16135   */\n      dup4\n        /* \"#utility.yul\":16122:16140   */\n      add\n        /* \"#utility.yul\":16113:16119   */\n      dup5\n        /* \"#utility.yul\":16061:16141   */\n      tag_265\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":15800:16148   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16154:16486   */\n    tag_156:\n        /* \"#utility.yul\":16275:16279   */\n      0x00\n        /* \"#utility.yul\":16313:16315   */\n      0x40\n        /* \"#utility.yul\":16302:16311   */\n      dup3\n        /* \"#utility.yul\":16298:16316   */\n      add\n        /* \"#utility.yul\":16290:16316   */\n      swap1\n      pop\n        /* \"#utility.yul\":16326:16397   */\n      tag_472\n        /* \"#utility.yul\":16394:16395   */\n      0x00\n        /* \"#utility.yul\":16383:16392   */\n      dup4\n        /* \"#utility.yul\":16379:16396   */\n      add\n        /* \"#utility.yul\":16370:16376   */\n      dup6\n        /* \"#utility.yul\":16326:16397   */\n      tag_226\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":16407:16479   */\n      tag_473\n        /* \"#utility.yul\":16475:16477   */\n      0x20\n        /* \"#utility.yul\":16464:16473   */\n      dup4\n        /* \"#utility.yul\":16460:16478   */\n      add\n        /* \"#utility.yul\":16451:16457   */\n      dup5\n        /* \"#utility.yul\":16407:16479   */\n      tag_226\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":16154:16486   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16492:16656   */\n    tag_266:\n        /* \"#utility.yul\":16632:16648   */\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n        /* \"#utility.yul\":16628:16629   */\n      0x00\n        /* \"#utility.yul\":16620:16626   */\n      dup3\n        /* \"#utility.yul\":16616:16630   */\n      add\n        /* \"#utility.yul\":16609:16649   */\n      mstore\n        /* \"#utility.yul\":16492:16656   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16662:17028   */\n    tag_267:\n        /* \"#utility.yul\":16804:16807   */\n      0x00\n        /* \"#utility.yul\":16825:16892   */\n      tag_476\n        /* \"#utility.yul\":16889:16891   */\n      0x0e\n        /* \"#utility.yul\":16884:16887   */\n      dup4\n        /* \"#utility.yul\":16825:16892   */\n      tag_230\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":16818:16892   */\n      swap2\n      pop\n        /* \"#utility.yul\":16901:16994   */\n      tag_477\n        /* \"#utility.yul\":16990:16993   */\n      dup3\n        /* \"#utility.yul\":16901:16994   */\n      tag_266\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":17019:17021   */\n      0x20\n        /* \"#utility.yul\":17014:17017   */\n      dup3\n        /* \"#utility.yul\":17010:17022   */\n      add\n        /* \"#utility.yul\":17003:17022   */\n      swap1\n      pop\n        /* \"#utility.yul\":16662:17028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17034:17453   */\n    tag_160:\n        /* \"#utility.yul\":17200:17204   */\n      0x00\n        /* \"#utility.yul\":17238:17240   */\n      0x20\n        /* \"#utility.yul\":17227:17236   */\n      dup3\n        /* \"#utility.yul\":17223:17241   */\n      add\n        /* \"#utility.yul\":17215:17241   */\n      swap1\n      pop\n        /* \"#utility.yul\":17287:17296   */\n      dup2\n        /* \"#utility.yul\":17281:17285   */\n      dup2\n        /* \"#utility.yul\":17277:17297   */\n      sub\n        /* \"#utility.yul\":17273:17274   */\n      0x00\n        /* \"#utility.yul\":17262:17271   */\n      dup4\n        /* \"#utility.yul\":17258:17275   */\n      add\n        /* \"#utility.yul\":17251:17298   */\n      mstore\n        /* \"#utility.yul\":17315:17446   */\n      tag_479\n        /* \"#utility.yul\":17441:17445   */\n      dup2\n        /* \"#utility.yul\":17315:17446   */\n      tag_267\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":17307:17446   */\n      swap1\n      pop\n        /* \"#utility.yul\":17034:17453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17459:17602   */\n    tag_268:\n        /* \"#utility.yul\":17516:17521   */\n      0x00\n        /* \"#utility.yul\":17547:17553   */\n      dup2\n        /* \"#utility.yul\":17541:17554   */\n      mload\n        /* \"#utility.yul\":17532:17554   */\n      swap1\n      pop\n        /* \"#utility.yul\":17563:17596   */\n      tag_481\n        /* \"#utility.yul\":17590:17595   */\n      dup2\n        /* \"#utility.yul\":17563:17596   */\n      tag_246\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":17459:17602   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17608:17959   */\n    tag_165:\n        /* \"#utility.yul\":17678:17684   */\n      0x00\n        /* \"#utility.yul\":17727:17729   */\n      0x20\n        /* \"#utility.yul\":17715:17724   */\n      dup3\n        /* \"#utility.yul\":17706:17713   */\n      dup5\n        /* \"#utility.yul\":17702:17725   */\n      sub\n        /* \"#utility.yul\":17698:17730   */\n      slt\n        /* \"#utility.yul\":17695:17814   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":17733:17812   */\n      tag_484\n      tag_219\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":17695:17814   */\n    tag_483:\n        /* \"#utility.yul\":17853:17854   */\n      0x00\n        /* \"#utility.yul\":17878:17942   */\n      tag_485\n        /* \"#utility.yul\":17934:17941   */\n      dup5\n        /* \"#utility.yul\":17925:17931   */\n      dup3\n        /* \"#utility.yul\":17914:17923   */\n      dup6\n        /* \"#utility.yul\":17910:17932   */\n      add\n        /* \"#utility.yul\":17878:17942   */\n      tag_268\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":17868:17942   */\n      swap2\n      pop\n        /* \"#utility.yul\":17824:17952   */\n      pop\n        /* \"#utility.yul\":17608:17959   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17965:18135   */\n    tag_269:\n        /* \"#utility.yul\":18105:18127   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":18101:18102   */\n      0x00\n        /* \"#utility.yul\":18093:18099   */\n      dup3\n        /* \"#utility.yul\":18089:18103   */\n      add\n        /* \"#utility.yul\":18082:18128   */\n      mstore\n        /* \"#utility.yul\":17965:18135   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18141:18507   */\n    tag_270:\n        /* \"#utility.yul\":18283:18286   */\n      0x00\n        /* \"#utility.yul\":18304:18371   */\n      tag_488\n        /* \"#utility.yul\":18368:18370   */\n      0x14\n        /* \"#utility.yul\":18363:18366   */\n      dup4\n        /* \"#utility.yul\":18304:18371   */\n      tag_230\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":18297:18371   */\n      swap2\n      pop\n        /* \"#utility.yul\":18380:18473   */\n      tag_489\n        /* \"#utility.yul\":18469:18472   */\n      dup3\n        /* \"#utility.yul\":18380:18473   */\n      tag_269\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":18498:18500   */\n      0x20\n        /* \"#utility.yul\":18493:18496   */\n      dup3\n        /* \"#utility.yul\":18489:18501   */\n      add\n        /* \"#utility.yul\":18482:18501   */\n      swap1\n      pop\n        /* \"#utility.yul\":18141:18507   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18513:18932   */\n    tag_168:\n        /* \"#utility.yul\":18679:18683   */\n      0x00\n        /* \"#utility.yul\":18717:18719   */\n      0x20\n        /* \"#utility.yul\":18706:18715   */\n      dup3\n        /* \"#utility.yul\":18702:18720   */\n      add\n        /* \"#utility.yul\":18694:18720   */\n      swap1\n      pop\n        /* \"#utility.yul\":18766:18775   */\n      dup2\n        /* \"#utility.yul\":18760:18764   */\n      dup2\n        /* \"#utility.yul\":18756:18776   */\n      sub\n        /* \"#utility.yul\":18752:18753   */\n      0x00\n        /* \"#utility.yul\":18741:18750   */\n      dup4\n        /* \"#utility.yul\":18737:18754   */\n      add\n        /* \"#utility.yul\":18730:18777   */\n      mstore\n        /* \"#utility.yul\":18794:18925   */\n      tag_491\n        /* \"#utility.yul\":18920:18924   */\n      dup2\n        /* \"#utility.yul\":18794:18925   */\n      tag_270\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":18786:18925   */\n      swap1\n      pop\n        /* \"#utility.yul\":18513:18932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18938:19270   */\n    tag_170:\n        /* \"#utility.yul\":19059:19063   */\n      0x00\n        /* \"#utility.yul\":19097:19099   */\n      0x40\n        /* \"#utility.yul\":19086:19095   */\n      dup3\n        /* \"#utility.yul\":19082:19100   */\n      add\n        /* \"#utility.yul\":19074:19100   */\n      swap1\n      pop\n        /* \"#utility.yul\":19110:19181   */\n      tag_493\n        /* \"#utility.yul\":19178:19179   */\n      0x00\n        /* \"#utility.yul\":19167:19176   */\n      dup4\n        /* \"#utility.yul\":19163:19180   */\n      add\n        /* \"#utility.yul\":19154:19160   */\n      dup6\n        /* \"#utility.yul\":19110:19181   */\n      tag_234\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":19191:19263   */\n      tag_494\n        /* \"#utility.yul\":19259:19261   */\n      0x20\n        /* \"#utility.yul\":19248:19257   */\n      dup4\n        /* \"#utility.yul\":19244:19262   */\n      add\n        /* \"#utility.yul\":19235:19241   */\n      dup5\n        /* \"#utility.yul\":19191:19263   */\n      tag_234\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":18938:19270   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19276:19503   */\n    tag_271:\n        /* \"#utility.yul\":19416:19450   */\n      0x436f6e7472616374206e6f7420617070726f76656420746f207472616e736665\n        /* \"#utility.yul\":19412:19413   */\n      0x00\n        /* \"#utility.yul\":19404:19410   */\n      dup3\n        /* \"#utility.yul\":19400:19414   */\n      add\n        /* \"#utility.yul\":19393:19451   */\n      mstore\n        /* \"#utility.yul\":19485:19495   */\n      0x7220746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19480:19482   */\n      0x20\n        /* \"#utility.yul\":19472:19478   */\n      dup3\n        /* \"#utility.yul\":19468:19483   */\n      add\n        /* \"#utility.yul\":19461:19496   */\n      mstore\n        /* \"#utility.yul\":19276:19503   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19509:19875   */\n    tag_272:\n        /* \"#utility.yul\":19651:19654   */\n      0x00\n        /* \"#utility.yul\":19672:19739   */\n      tag_497\n        /* \"#utility.yul\":19736:19738   */\n      0x28\n        /* \"#utility.yul\":19731:19734   */\n      dup4\n        /* \"#utility.yul\":19672:19739   */\n      tag_230\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":19665:19739   */\n      swap2\n      pop\n        /* \"#utility.yul\":19748:19841   */\n      tag_498\n        /* \"#utility.yul\":19837:19840   */\n      dup3\n        /* \"#utility.yul\":19748:19841   */\n      tag_271\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":19866:19868   */\n      0x40\n        /* \"#utility.yul\":19861:19864   */\n      dup3\n        /* \"#utility.yul\":19857:19869   */\n      add\n        /* \"#utility.yul\":19850:19869   */\n      swap1\n      pop\n        /* \"#utility.yul\":19509:19875   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19881:20300   */\n    tag_176:\n        /* \"#utility.yul\":20047:20051   */\n      0x00\n        /* \"#utility.yul\":20085:20087   */\n      0x20\n        /* \"#utility.yul\":20074:20083   */\n      dup3\n        /* \"#utility.yul\":20070:20088   */\n      add\n        /* \"#utility.yul\":20062:20088   */\n      swap1\n      pop\n        /* \"#utility.yul\":20134:20143   */\n      dup2\n        /* \"#utility.yul\":20128:20132   */\n      dup2\n        /* \"#utility.yul\":20124:20144   */\n      sub\n        /* \"#utility.yul\":20120:20121   */\n      0x00\n        /* \"#utility.yul\":20109:20118   */\n      dup4\n        /* \"#utility.yul\":20105:20122   */\n      add\n        /* \"#utility.yul\":20098:20145   */\n      mstore\n        /* \"#utility.yul\":20162:20293   */\n      tag_500\n        /* \"#utility.yul\":20288:20292   */\n      dup2\n        /* \"#utility.yul\":20162:20293   */\n      tag_272\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":20154:20293   */\n      swap1\n      pop\n        /* \"#utility.yul\":19881:20300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20306:20748   */\n    tag_179:\n        /* \"#utility.yul\":20455:20459   */\n      0x00\n        /* \"#utility.yul\":20493:20495   */\n      0x60\n        /* \"#utility.yul\":20482:20491   */\n      dup3\n        /* \"#utility.yul\":20478:20496   */\n      add\n        /* \"#utility.yul\":20470:20496   */\n      swap1\n      pop\n        /* \"#utility.yul\":20506:20577   */\n      tag_502\n        /* \"#utility.yul\":20574:20575   */\n      0x00\n        /* \"#utility.yul\":20563:20572   */\n      dup4\n        /* \"#utility.yul\":20559:20576   */\n      add\n        /* \"#utility.yul\":20550:20556   */\n      dup7\n        /* \"#utility.yul\":20506:20577   */\n      tag_234\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":20587:20659   */\n      tag_503\n        /* \"#utility.yul\":20655:20657   */\n      0x20\n        /* \"#utility.yul\":20644:20653   */\n      dup4\n        /* \"#utility.yul\":20640:20658   */\n      add\n        /* \"#utility.yul\":20631:20637   */\n      dup6\n        /* \"#utility.yul\":20587:20659   */\n      tag_234\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":20669:20741   */\n      tag_504\n        /* \"#utility.yul\":20737:20739   */\n      0x40\n        /* \"#utility.yul\":20726:20735   */\n      dup4\n        /* \"#utility.yul\":20722:20740   */\n      add\n        /* \"#utility.yul\":20713:20719   */\n      dup5\n        /* \"#utility.yul\":20669:20741   */\n      tag_226\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":20306:20748   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20754:20925   */\n    tag_273:\n        /* \"#utility.yul\":20894:20917   */\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":20890:20891   */\n      0x00\n        /* \"#utility.yul\":20882:20888   */\n      dup3\n        /* \"#utility.yul\":20878:20892   */\n      add\n        /* \"#utility.yul\":20871:20918   */\n      mstore\n        /* \"#utility.yul\":20754:20925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20931:21297   */\n    tag_274:\n        /* \"#utility.yul\":21073:21076   */\n      0x00\n        /* \"#utility.yul\":21094:21161   */\n      tag_507\n        /* \"#utility.yul\":21158:21160   */\n      0x15\n        /* \"#utility.yul\":21153:21156   */\n      dup4\n        /* \"#utility.yul\":21094:21161   */\n      tag_230\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":21087:21161   */\n      swap2\n      pop\n        /* \"#utility.yul\":21170:21263   */\n      tag_508\n        /* \"#utility.yul\":21259:21262   */\n      dup3\n        /* \"#utility.yul\":21170:21263   */\n      tag_273\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":21288:21290   */\n      0x20\n        /* \"#utility.yul\":21283:21286   */\n      dup3\n        /* \"#utility.yul\":21279:21291   */\n      add\n        /* \"#utility.yul\":21272:21291   */\n      swap1\n      pop\n        /* \"#utility.yul\":20931:21297   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21303:21722   */\n    tag_185:\n        /* \"#utility.yul\":21469:21473   */\n      0x00\n        /* \"#utility.yul\":21507:21509   */\n      0x20\n        /* \"#utility.yul\":21496:21505   */\n      dup3\n        /* \"#utility.yul\":21492:21510   */\n      add\n        /* \"#utility.yul\":21484:21510   */\n      swap1\n      pop\n        /* \"#utility.yul\":21556:21565   */\n      dup2\n        /* \"#utility.yul\":21550:21554   */\n      dup2\n        /* \"#utility.yul\":21546:21566   */\n      sub\n        /* \"#utility.yul\":21542:21543   */\n      0x00\n        /* \"#utility.yul\":21531:21540   */\n      dup4\n        /* \"#utility.yul\":21527:21544   */\n      add\n        /* \"#utility.yul\":21520:21567   */\n      mstore\n        /* \"#utility.yul\":21584:21715   */\n      tag_510\n        /* \"#utility.yul\":21710:21714   */\n      dup2\n        /* \"#utility.yul\":21584:21715   */\n      tag_274\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":21576:21715   */\n      swap1\n      pop\n        /* \"#utility.yul\":21303:21722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21728:21869   */\n    tag_275:\n        /* \"#utility.yul\":21777:21781   */\n      0x00\n        /* \"#utility.yul\":21800:21803   */\n      dup2\n        /* \"#utility.yul\":21792:21803   */\n      swap1\n      pop\n        /* \"#utility.yul\":21823:21826   */\n      dup2\n        /* \"#utility.yul\":21820:21821   */\n      0x00\n        /* \"#utility.yul\":21813:21827   */\n      mstore\n        /* \"#utility.yul\":21857:21861   */\n      0x20\n        /* \"#utility.yul\":21854:21855   */\n      0x00\n        /* \"#utility.yul\":21844:21862   */\n      keccak256\n        /* \"#utility.yul\":21836:21862   */\n      swap1\n      pop\n        /* \"#utility.yul\":21728:21869   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21875:21968   */\n    tag_276:\n        /* \"#utility.yul\":21912:21918   */\n      0x00\n        /* \"#utility.yul\":21959:21961   */\n      0x20\n        /* \"#utility.yul\":21954:21956   */\n      0x1f\n        /* \"#utility.yul\":21947:21952   */\n      dup4\n        /* \"#utility.yul\":21943:21957   */\n      add\n        /* \"#utility.yul\":21939:21962   */\n      div\n        /* \"#utility.yul\":21929:21962   */\n      swap1\n      pop\n        /* \"#utility.yul\":21875:21968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21974:22081   */\n    tag_277:\n        /* \"#utility.yul\":22018:22026   */\n      0x00\n        /* \"#utility.yul\":22068:22073   */\n      dup3\n        /* \"#utility.yul\":22062:22066   */\n      dup3\n        /* \"#utility.yul\":22058:22074   */\n      shl\n        /* \"#utility.yul\":22037:22074   */\n      swap1\n      pop\n        /* \"#utility.yul\":21974:22081   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22087:22480   */\n    tag_278:\n        /* \"#utility.yul\":22156:22162   */\n      0x00\n        /* \"#utility.yul\":22206:22207   */\n      0x08\n        /* \"#utility.yul\":22194:22204   */\n      dup4\n        /* \"#utility.yul\":22190:22208   */\n      mul\n        /* \"#utility.yul\":22229:22326   */\n      tag_515\n        /* \"#utility.yul\":22259:22325   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22248:22257   */\n      dup3\n        /* \"#utility.yul\":22229:22326   */\n      tag_277\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":22347:22386   */\n      tag_516\n        /* \"#utility.yul\":22377:22385   */\n      dup7\n        /* \"#utility.yul\":22366:22375   */\n      dup4\n        /* \"#utility.yul\":22347:22386   */\n      tag_277\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":22335:22386   */\n      swap6\n      pop\n        /* \"#utility.yul\":22419:22423   */\n      dup1\n        /* \"#utility.yul\":22415:22424   */\n      not\n        /* \"#utility.yul\":22408:22413   */\n      dup5\n        /* \"#utility.yul\":22404:22425   */\n      and\n        /* \"#utility.yul\":22395:22425   */\n      swap4\n      pop\n        /* \"#utility.yul\":22468:22472   */\n      dup1\n        /* \"#utility.yul\":22458:22466   */\n      dup7\n        /* \"#utility.yul\":22454:22473   */\n      and\n        /* \"#utility.yul\":22447:22452   */\n      dup5\n        /* \"#utility.yul\":22444:22474   */\n      or\n        /* \"#utility.yul\":22434:22474   */\n      swap3\n      pop\n        /* \"#utility.yul\":22163:22480   */\n      pop\n      pop\n        /* \"#utility.yul\":22087:22480   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22486:22628   */\n    tag_279:\n        /* \"#utility.yul\":22536:22545   */\n      0x00\n        /* \"#utility.yul\":22569:22622   */\n      tag_518\n        /* \"#utility.yul\":22587:22621   */\n      tag_519\n        /* \"#utility.yul\":22596:22620   */\n      tag_520\n        /* \"#utility.yul\":22614:22619   */\n      dup5\n        /* \"#utility.yul\":22596:22620   */\n      tag_225\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":22587:22621   */\n      tag_248\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":22569:22622   */\n      tag_225\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":22556:22622   */\n      swap1\n      pop\n        /* \"#utility.yul\":22486:22628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22634:22709   */\n    tag_280:\n        /* \"#utility.yul\":22677:22680   */\n      0x00\n        /* \"#utility.yul\":22698:22703   */\n      dup2\n        /* \"#utility.yul\":22691:22703   */\n      swap1\n      pop\n        /* \"#utility.yul\":22634:22709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22715:22984   */\n    tag_281:\n        /* \"#utility.yul\":22825:22864   */\n      tag_523\n        /* \"#utility.yul\":22856:22863   */\n      dup4\n        /* \"#utility.yul\":22825:22864   */\n      tag_279\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":22886:22977   */\n      tag_524\n        /* \"#utility.yul\":22935:22976   */\n      tag_525\n        /* \"#utility.yul\":22959:22975   */\n      dup3\n        /* \"#utility.yul\":22935:22976   */\n      tag_280\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":22927:22933   */\n      dup5\n        /* \"#utility.yul\":22920:22924   */\n      dup5\n        /* \"#utility.yul\":22914:22925   */\n      sload\n        /* \"#utility.yul\":22886:22977   */\n      tag_278\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":22880:22884   */\n      dup3\n        /* \"#utility.yul\":22873:22978   */\n      sstore\n        /* \"#utility.yul\":22791:22984   */\n      pop\n        /* \"#utility.yul\":22715:22984   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22990:23063   */\n    tag_282:\n        /* \"#utility.yul\":23035:23038   */\n      0x00\n        /* \"#utility.yul\":22990:23063   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":23069:23258   */\n    tag_283:\n        /* \"#utility.yul\":23146:23178   */\n      tag_528\n      tag_282\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":23187:23252   */\n      tag_529\n        /* \"#utility.yul\":23245:23251   */\n      dup2\n        /* \"#utility.yul\":23237:23243   */\n      dup5\n        /* \"#utility.yul\":23231:23235   */\n      dup5\n        /* \"#utility.yul\":23187:23252   */\n      tag_281\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":23122:23258   */\n      pop\n        /* \"#utility.yul\":23069:23258   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23264:23450   */\n    tag_284:\n        /* \"#utility.yul\":23324:23444   */\n    tag_531:\n        /* \"#utility.yul\":23341:23344   */\n      dup2\n        /* \"#utility.yul\":23334:23339   */\n      dup2\n        /* \"#utility.yul\":23331:23345   */\n      lt\n        /* \"#utility.yul\":23324:23444   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":23395:23434   */\n      tag_534\n        /* \"#utility.yul\":23432:23433   */\n      0x00\n        /* \"#utility.yul\":23425:23430   */\n      dup3\n        /* \"#utility.yul\":23395:23434   */\n      tag_283\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":23368:23369   */\n      0x01\n        /* \"#utility.yul\":23361:23366   */\n      dup2\n        /* \"#utility.yul\":23357:23370   */\n      add\n        /* \"#utility.yul\":23348:23370   */\n      swap1\n      pop\n        /* \"#utility.yul\":23324:23444   */\n      jump(tag_531)\n    tag_533:\n        /* \"#utility.yul\":23264:23450   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23456:23999   */\n    tag_285:\n        /* \"#utility.yul\":23557:23559   */\n      0x1f\n        /* \"#utility.yul\":23552:23555   */\n      dup3\n        /* \"#utility.yul\":23549:23560   */\n      gt\n        /* \"#utility.yul\":23546:23992   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":23591:23629   */\n      tag_537\n        /* \"#utility.yul\":23623:23628   */\n      dup2\n        /* \"#utility.yul\":23591:23629   */\n      tag_275\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":23675:23704   */\n      tag_538\n        /* \"#utility.yul\":23693:23703   */\n      dup5\n        /* \"#utility.yul\":23675:23704   */\n      tag_276\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":23665:23673   */\n      dup2\n        /* \"#utility.yul\":23661:23705   */\n      add\n        /* \"#utility.yul\":23858:23860   */\n      0x20\n        /* \"#utility.yul\":23846:23856   */\n      dup6\n        /* \"#utility.yul\":23843:23861   */\n      lt\n        /* \"#utility.yul\":23840:23889   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":23879:23887   */\n      dup2\n        /* \"#utility.yul\":23864:23887   */\n      swap1\n      pop\n        /* \"#utility.yul\":23840:23889   */\n    tag_539:\n        /* \"#utility.yul\":23902:23982   */\n      tag_540\n        /* \"#utility.yul\":23958:23980   */\n      tag_541\n        /* \"#utility.yul\":23976:23979   */\n      dup6\n        /* \"#utility.yul\":23958:23980   */\n      tag_276\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":23948:23956   */\n      dup4\n        /* \"#utility.yul\":23944:23981   */\n      add\n        /* \"#utility.yul\":23931:23942   */\n      dup3\n        /* \"#utility.yul\":23902:23982   */\n      tag_284\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":23561:23992   */\n      pop\n      pop\n        /* \"#utility.yul\":23546:23992   */\n    tag_536:\n        /* \"#utility.yul\":23456:23999   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24005:24122   */\n    tag_286:\n        /* \"#utility.yul\":24059:24067   */\n      0x00\n        /* \"#utility.yul\":24109:24114   */\n      dup3\n        /* \"#utility.yul\":24103:24107   */\n      dup3\n        /* \"#utility.yul\":24099:24115   */\n      shr\n        /* \"#utility.yul\":24078:24115   */\n      swap1\n      pop\n        /* \"#utility.yul\":24005:24122   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24128:24297   */\n    tag_287:\n        /* \"#utility.yul\":24172:24178   */\n      0x00\n        /* \"#utility.yul\":24205:24256   */\n      tag_544\n        /* \"#utility.yul\":24253:24254   */\n      0x00\n        /* \"#utility.yul\":24249:24255   */\n      not\n        /* \"#utility.yul\":24241:24246   */\n      dup5\n        /* \"#utility.yul\":24238:24239   */\n      0x08\n        /* \"#utility.yul\":24234:24247   */\n      mul\n        /* \"#utility.yul\":24205:24256   */\n      tag_286\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":24201:24257   */\n      not\n        /* \"#utility.yul\":24286:24290   */\n      dup1\n        /* \"#utility.yul\":24280:24284   */\n      dup4\n        /* \"#utility.yul\":24276:24291   */\n      and\n        /* \"#utility.yul\":24266:24291   */\n      swap2\n      pop\n        /* \"#utility.yul\":24179:24297   */\n      pop\n        /* \"#utility.yul\":24128:24297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24302:24597   */\n    tag_288:\n        /* \"#utility.yul\":24378:24382   */\n      0x00\n        /* \"#utility.yul\":24524:24553   */\n      tag_546\n        /* \"#utility.yul\":24549:24552   */\n      dup4\n        /* \"#utility.yul\":24543:24547   */\n      dup4\n        /* \"#utility.yul\":24524:24553   */\n      tag_287\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":24516:24553   */\n      swap2\n      pop\n        /* \"#utility.yul\":24586:24589   */\n      dup3\n        /* \"#utility.yul\":24583:24584   */\n      0x02\n        /* \"#utility.yul\":24579:24590   */\n      mul\n        /* \"#utility.yul\":24573:24577   */\n      dup3\n        /* \"#utility.yul\":24570:24591   */\n      or\n        /* \"#utility.yul\":24562:24591   */\n      swap1\n      pop\n        /* \"#utility.yul\":24302:24597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24602:25997   */\n    tag_187:\n        /* \"#utility.yul\":24719:24756   */\n      tag_548\n        /* \"#utility.yul\":24752:24755   */\n      dup3\n        /* \"#utility.yul\":24719:24756   */\n      tag_229\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":24821:24839   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":24813:24819   */\n      dup2\n        /* \"#utility.yul\":24810:24840   */\n      gt\n        /* \"#utility.yul\":24807:24863   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":24843:24861   */\n      tag_550\n      tag_239\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":24807:24863   */\n    tag_549:\n        /* \"#utility.yul\":24887:24925   */\n      tag_551\n        /* \"#utility.yul\":24919:24923   */\n      dup3\n        /* \"#utility.yul\":24913:24924   */\n      sload\n        /* \"#utility.yul\":24887:24925   */\n      tag_46\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":24972:25039   */\n      tag_552\n        /* \"#utility.yul\":25032:25038   */\n      dup3\n        /* \"#utility.yul\":25024:25030   */\n      dup3\n        /* \"#utility.yul\":25018:25022   */\n      dup6\n        /* \"#utility.yul\":24972:25039   */\n      tag_285\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":25066:25067   */\n      0x00\n        /* \"#utility.yul\":25090:25094   */\n      0x20\n        /* \"#utility.yul\":25077:25094   */\n      swap1\n      pop\n        /* \"#utility.yul\":25122:25124   */\n      0x1f\n        /* \"#utility.yul\":25114:25120   */\n      dup4\n        /* \"#utility.yul\":25111:25125   */\n      gt\n        /* \"#utility.yul\":25139:25140   */\n      0x01\n        /* \"#utility.yul\":25134:25752   */\n      dup2\n      eq\n      tag_554\n      jumpi\n        /* \"#utility.yul\":25796:25797   */\n      0x00\n        /* \"#utility.yul\":25813:25819   */\n      dup5\n        /* \"#utility.yul\":25810:25887   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":25862:25871   */\n      dup3\n        /* \"#utility.yul\":25857:25860   */\n      dup8\n        /* \"#utility.yul\":25853:25872   */\n      add\n        /* \"#utility.yul\":25847:25873   */\n      mload\n        /* \"#utility.yul\":25838:25873   */\n      swap1\n      pop\n        /* \"#utility.yul\":25810:25887   */\n    tag_555:\n        /* \"#utility.yul\":25913:25980   */\n      tag_556\n        /* \"#utility.yul\":25973:25979   */\n      dup6\n        /* \"#utility.yul\":25966:25971   */\n      dup3\n        /* \"#utility.yul\":25913:25980   */\n      tag_288\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":25907:25911   */\n      dup7\n        /* \"#utility.yul\":25900:25981   */\n      sstore\n        /* \"#utility.yul\":25769:25991   */\n      pop\n        /* \"#utility.yul\":25104:25991   */\n      jump(tag_553)\n        /* \"#utility.yul\":25134:25752   */\n    tag_554:\n        /* \"#utility.yul\":25186:25190   */\n      0x1f\n        /* \"#utility.yul\":25182:25191   */\n      not\n        /* \"#utility.yul\":25174:25180   */\n      dup5\n        /* \"#utility.yul\":25170:25192   */\n      and\n        /* \"#utility.yul\":25220:25257   */\n      tag_557\n        /* \"#utility.yul\":25252:25256   */\n      dup7\n        /* \"#utility.yul\":25220:25257   */\n      tag_275\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":25279:25280   */\n      0x00\n        /* \"#utility.yul\":25293:25501   */\n    tag_558:\n        /* \"#utility.yul\":25307:25314   */\n      dup3\n        /* \"#utility.yul\":25304:25305   */\n      dup2\n        /* \"#utility.yul\":25301:25315   */\n      lt\n        /* \"#utility.yul\":25293:25501   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":25386:25395   */\n      dup5\n        /* \"#utility.yul\":25381:25384   */\n      dup10\n        /* \"#utility.yul\":25377:25396   */\n      add\n        /* \"#utility.yul\":25371:25397   */\n      mload\n        /* \"#utility.yul\":25363:25369   */\n      dup3\n        /* \"#utility.yul\":25356:25398   */\n      sstore\n        /* \"#utility.yul\":25437:25438   */\n      0x01\n        /* \"#utility.yul\":25429:25435   */\n      dup3\n        /* \"#utility.yul\":25425:25439   */\n      add\n        /* \"#utility.yul\":25415:25439   */\n      swap2\n      pop\n        /* \"#utility.yul\":25484:25486   */\n      0x20\n        /* \"#utility.yul\":25473:25482   */\n      dup6\n        /* \"#utility.yul\":25469:25487   */\n      add\n        /* \"#utility.yul\":25456:25487   */\n      swap5\n      pop\n        /* \"#utility.yul\":25330:25334   */\n      0x20\n        /* \"#utility.yul\":25327:25328   */\n      dup2\n        /* \"#utility.yul\":25323:25335   */\n      add\n        /* \"#utility.yul\":25318:25335   */\n      swap1\n      pop\n        /* \"#utility.yul\":25293:25501   */\n      jump(tag_558)\n    tag_560:\n        /* \"#utility.yul\":25529:25535   */\n      dup7\n        /* \"#utility.yul\":25520:25527   */\n      dup4\n        /* \"#utility.yul\":25517:25536   */\n      lt\n        /* \"#utility.yul\":25514:25693   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":25587:25596   */\n      dup5\n        /* \"#utility.yul\":25582:25585   */\n      dup10\n        /* \"#utility.yul\":25578:25597   */\n      add\n        /* \"#utility.yul\":25572:25598   */\n      mload\n        /* \"#utility.yul\":25630:25678   */\n      tag_562\n        /* \"#utility.yul\":25672:25676   */\n      0x1f\n        /* \"#utility.yul\":25664:25670   */\n      dup10\n        /* \"#utility.yul\":25660:25677   */\n      and\n        /* \"#utility.yul\":25649:25658   */\n      dup3\n        /* \"#utility.yul\":25630:25678   */\n      tag_287\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":25622:25628   */\n      dup4\n        /* \"#utility.yul\":25615:25679   */\n      sstore\n        /* \"#utility.yul\":25537:25693   */\n      pop\n        /* \"#utility.yul\":25514:25693   */\n    tag_561:\n        /* \"#utility.yul\":25739:25740   */\n      0x01\n        /* \"#utility.yul\":25735:25736   */\n      0x02\n        /* \"#utility.yul\":25727:25733   */\n      dup9\n        /* \"#utility.yul\":25723:25737   */\n      mul\n        /* \"#utility.yul\":25719:25741   */\n      add\n        /* \"#utility.yul\":25713:25717   */\n      dup9\n        /* \"#utility.yul\":25706:25742   */\n      sstore\n        /* \"#utility.yul\":25141:25752   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":25104:25991   */\n    tag_553:\n      pop\n        /* \"#utility.yul\":24694:25997   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":24602:25997   */\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a1a88c1ecb151e57d40212ea265b8bbf29268c7c2b00840f79204cd0bb3d3d8364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1012": {
									"entryPoint": null,
									"id": 1012,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 249,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 442,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1707:8",
										"nodeType": "YulBlock",
										"src": "0:1707:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "759:80:8",
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nativeSrc": "769:22:8",
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nativeSrc": "778:13:8",
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nativeSrc": "800:33:8",
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nativeSrc": "800:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:8",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:8",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:8",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nativeSrc": "939:413:8",
													"nodeType": "YulBlock",
													"src": "939:413:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:8",
																"nodeType": "YulBlock",
																"src": "985:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:8"
																			},
																			"nativeSrc": "987:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:8"
																		},
																		"nativeSrc": "987:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:8"
																		},
																		"nativeSrc": "956:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:8",
																		"nodeType": "YulLiteral",
																		"src": "981:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:8"
																},
																"nativeSrc": "952:32:8",
																"nodeType": "YulFunctionCall",
																"src": "952:32:8"
															},
															"nativeSrc": "949:119:8",
															"nodeType": "YulIf",
															"src": "949:119:8"
														},
														{
															"nativeSrc": "1078:128:8",
															"nodeType": "YulBlock",
															"src": "1078:128:8",
															"statements": [
																{
																	"nativeSrc": "1093:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:8"
																				},
																				"nativeSrc": "1164:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:8"
																		},
																		"nativeSrc": "1132:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:8",
															"nodeType": "YulBlock",
															"src": "1216:129:8",
															"statements": [
																{
																	"nativeSrc": "1231:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:8"
																				},
																				"nativeSrc": "1303:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:8"
																		},
																		"nativeSrc": "1271:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:8",
														"nodeType": "YulTypedName",
														"src": "901:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:8",
														"nodeType": "YulTypedName",
														"src": "912:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:8",
														"nodeType": "YulTypedName",
														"src": "924:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:8",
														"nodeType": "YulTypedName",
														"src": "932:6:8",
														"type": ""
													}
												],
												"src": "845:507:8"
											},
											{
												"body": {
													"nativeSrc": "1423:53:8",
													"nodeType": "YulBlock",
													"src": "1423:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:8"
																		},
																		"nativeSrc": "1445:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:8"
																},
																"nativeSrc": "1433:37:8",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:8"
															},
															"nativeSrc": "1433:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:8",
														"nodeType": "YulTypedName",
														"src": "1411:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:8",
														"nodeType": "YulTypedName",
														"src": "1418:3:8",
														"type": ""
													}
												],
												"src": "1358:118:8"
											},
											{
												"body": {
													"nativeSrc": "1580:124:8",
													"nodeType": "YulBlock",
													"src": "1580:124:8",
													"statements": [
														{
															"nativeSrc": "1590:26:8",
															"nodeType": "YulAssignment",
															"src": "1590:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:8"
																},
																"nativeSrc": "1598:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:8"
																		},
																		"nativeSrc": "1679:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:8"
																},
																"nativeSrc": "1626:71:8",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:8"
															},
															"nativeSrc": "1626:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:8",
														"nodeType": "YulTypedName",
														"src": "1552:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:8",
														"nodeType": "YulTypedName",
														"src": "1564:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:8",
														"nodeType": "YulTypedName",
														"src": "1575:4:8",
														"type": ""
													}
												],
												"src": "1482:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516125f83803806125f883398181016040528101906100319190610218565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100999190610265565b60405180910390fd5b6100b1816100f960201b60201c565b508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061027e565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101e7826101be565b9050919050565b6101f7816101dd565b8114610201575f80fd5b50565b5f81519050610212816101ee565b92915050565b5f806040838503121561022e5761022d6101ba565b5b5f61023b85828601610204565b925050602061024c85828601610204565b9150509250929050565b61025f816101dd565b82525050565b5f6020820190506102785f830184610256565b92915050565b61236d8061028b5f395ff3fe608060405234801561000f575f80fd5b5060043610610086575f3560e01c8063c0497ac811610059578063c0497ac814610100578063f2fde38b1461011c578063f8300fca14610138578063fc0c546a1461016b57610086565b806316934fc41461008a578063715018a6146100bc5780638da5cb5b146100c6578063b7f5a5a3146100e4575b5f80fd5b6100a4600480360381019061009f919061161d565b610189565b6040516100b3939291906116ea565b60405180910390f35b6100c4610241565b005b6100ce610254565b6040516100db9190611735565b60405180910390f35b6100fe60048036038101906100f991906118a4565b61027b565b005b61011a60048036038101906101159190611928565b610e07565b005b6101366004803603810190610131919061161d565b6112ff565b005b610152600480360381019061014d9190611994565b611383565b60405161016294939291906119db565b60405180910390f35b6101736113e6565b6040516101809190611a79565b60405180910390f35b6002602052805f5260405f205f91509050805f015490806001015f9054906101000a900460ff16908060020180546101c090611abf565b80601f01602080910402602001604051908101604052809291908181526020018280546101ec90611abf565b80156102375780601f1061020e57610100808354040283529160200191610237565b820191905f5260205f20905b81548152906001019060200180831161021a57829003601f168201915b5050505050905083565b61024961140b565b6102525f611492565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f8201548152602001600182015f9054906101000a900460ff161515151581526020016002820180546102f790611abf565b80601f016020809104026020016040519081016040528092919081815260200182805461032390611abf565b801561036e5780601f106103455761010080835404028352916020019161036e565b820191905f5260205f20905b81548152906001019060200180831161035157829003601f168201915b50505050508152505090505f60038360405161038a9190611b29565b908152602001604051809103902090505f825f0151116103df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d690611b89565b60405180910390fd5b828051906020012082604001518051906020012014610433576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042a90611bf1565b60405180910390fd5b5f84156107b8575f60646005855f015161044d9190611c3c565b6104579190611caa565b905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683875f01516104c89190611cda565b6040518363ffffffff1660e01b81526004016104e5929190611d0d565b6020604051808303815f875af1158015610501573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105259190611d48565b505f8184600201546105379190611d73565b90505f5b84600401805490508110156107b0575f85600401828154811061056157610560611da6565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f8201548152602001600182015f9054906101000a900460ff1615151515815260200160028201805461060790611abf565b80601f016020809104026020016040519081016040528092919081815260200182805461063390611abf565b801561067e5780601f106106555761010080835404028352916020019161067e565b820191905f5260205f20905b81548152906001019060200180831161066157829003601f168201915b50505050508152505090508060200151156107a1575f876002015485835f01516106a89190611c3c565b6106b29190611caa565b905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b8152600401610710929190611d0d565b6020604051808303815f875af115801561072c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107509190611d48565b508273ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040516107979190611dd3565b60405180910390a2505b5050808060010191505061053b565b505050610cfb565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb835f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f6040518363ffffffff1660e01b8152600401610836929190611e25565b6020604051808303815f875af1158015610852573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108769190611d48565b505f5b8260040180549050811015610a7e575f83600401828154811061089f5761089e611da6565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f8201548152602001600182015f9054906101000a900460ff1615151515815260200160028201805461094590611abf565b80601f016020809104026020016040519081016040528092919081815260200182805461097190611abf565b80156109bc5780601f10610993576101008083540402835291602001916109bc565b820191905f5260205f20905b81548152906001019060200180831161099f57829003601f168201915b5050505050815250509050806020015115610a6f5760015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb835f6040518363ffffffff1660e01b8152600401610a2d929190611e25565b6020604051808303815f875af1158015610a49573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a6d9190611d48565b505b50508080600101915050610879565b505f5b8260040180549050811015610cf9575f836004018281548110610aa757610aa6611da6565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f8201548152602001600182015f9054906101000a900460ff16151515158152602001600282018054610b4d90611abf565b80601f0160208091040260200160405190810160405280929190818152602001828054610b7990611abf565b8015610bc45780601f10610b9b57610100808354040283529160200191610bc4565b820191905f5260205f20905b815481529060010190602001808311610ba757829003601f168201915b50505050508152505090508060200151610cea575f85600301548660030154835f0151610bf19190611c3c565b610bfb9190611caa565b905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b8152600401610c59929190611d0d565b6020604051808303815f875af1158015610c75573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c999190611d48565b508273ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610ce09190611dd3565b60405180910390a2505b50508080600101915050610a81565b505b826020015115610d2757825f0151826002015f828254610d1b9190611d73565b92505081905550610d45565b825f0151826003015f828254610d3d9190611d73565b925050819055505b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8082015f9055600182015f6101000a81549060ff0219169055600282015f610dab919061155a565b50503373ffffffffffffffffffffffffffffffffffffffff167f7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e845f015183604051610df8929190611e4c565b60405180910390a25050505050565b5f8311610e49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4090611ebd565b60405180910390fd5b8260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610ea49190611735565b602060405180830381865afa158015610ebf573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ee39190611eef565b1015610f24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1b90611f64565b60405180910390fd5b8260015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610f81929190611f82565b602060405180830381865afa158015610f9c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fc09190611eef565b1015611001576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff890612019565b60405180910390fd5b5f6003826040516110129190611b29565b908152602001604051809103902090505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b815260040161108193929190612037565b6020604051808303815f875af115801561109d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110c19190611d48565b905080611103576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110fa906120b6565b60405180910390fd5b604051806060016040528086815260200185151581526020018481525060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f01556020820151816001015f6101000a81548160ff02191690831515021790555060408201518160020190816111999190612268565b509050505f8260010154036111ea5733825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b84826001015f8282546111fd9190611cda565b925050819055508160040133908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550831561128b5784826002015f82825461127f9190611cda565b925050819055506112a6565b84826003015f82825461129e9190611cda565b925050819055505b3373ffffffffffffffffffffffffffffffffffffffff167f56e5c3a64ee1d63cc76545ae78b97f7bb9e3f402463f7f9f86428f5154fc5eaf8686866040516112f0939291906116ea565b60405180910390a25050505050565b61130761140b565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611377575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161136e9190611735565b60405180910390fd5b61138081611492565b50565b6003818051602081018201805184825260208301602085012081835280955050505050505f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611413611553565b73ffffffffffffffffffffffffffffffffffffffff16611431610254565b73ffffffffffffffffffffffffffffffffffffffff161461149057611454611553565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016114879190611735565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b50805461156690611abf565b5f825580601f106115775750611594565b601f0160209004905f5260205f20908101906115939190611597565b5b50565b5b808211156115ae575f815f905550600101611598565b5090565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115ec826115c3565b9050919050565b6115fc816115e2565b8114611606575f80fd5b50565b5f81359050611617816115f3565b92915050565b5f60208284031215611632576116316115bb565b5b5f61163f84828501611609565b91505092915050565b5f819050919050565b61165a81611648565b82525050565b5f8115159050919050565b61167481611660565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6116bc8261167a565b6116c68185611684565b93506116d6818560208601611694565b6116df816116a2565b840191505092915050565b5f6060820190506116fd5f830186611651565b61170a602083018561166b565b818103604083015261171c81846116b2565b9050949350505050565b61172f816115e2565b82525050565b5f6020820190506117485f830184611726565b92915050565b61175781611660565b8114611761575f80fd5b50565b5f813590506117728161174e565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6117b6826116a2565b810181811067ffffffffffffffff821117156117d5576117d4611780565b5b80604052505050565b5f6117e76115b2565b90506117f382826117ad565b919050565b5f67ffffffffffffffff82111561181257611811611780565b5b61181b826116a2565b9050602081019050919050565b828183375f83830152505050565b5f611848611843846117f8565b6117de565b9050828152602081018484840111156118645761186361177c565b5b61186f848285611828565b509392505050565b5f82601f83011261188b5761188a611778565b5b813561189b848260208601611836565b91505092915050565b5f80604083850312156118ba576118b96115bb565b5b5f6118c785828601611764565b925050602083013567ffffffffffffffff8111156118e8576118e76115bf565b5b6118f485828601611877565b9150509250929050565b61190781611648565b8114611911575f80fd5b50565b5f81359050611922816118fe565b92915050565b5f805f6060848603121561193f5761193e6115bb565b5b5f61194c86828701611914565b935050602061195d86828701611764565b925050604084013567ffffffffffffffff81111561197e5761197d6115bf565b5b61198a86828701611877565b9150509250925092565b5f602082840312156119a9576119a86115bb565b5b5f82013567ffffffffffffffff8111156119c6576119c56115bf565b5b6119d284828501611877565b91505092915050565b5f6080820190506119ee5f830187611726565b6119fb6020830186611651565b611a086040830185611651565b611a156060830184611651565b95945050505050565b5f819050919050565b5f611a41611a3c611a37846115c3565b611a1e565b6115c3565b9050919050565b5f611a5282611a27565b9050919050565b5f611a6382611a48565b9050919050565b611a7381611a59565b82525050565b5f602082019050611a8c5f830184611a6a565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ad657607f821691505b602082108103611ae957611ae8611a92565b5b50919050565b5f81905092915050565b5f611b038261167a565b611b0d8185611aef565b9350611b1d818560208601611694565b80840191505092915050565b5f611b348284611af9565b915081905092915050565b7f4e6f207374616b6520666f756e640000000000000000000000000000000000005f82015250565b5f611b73600e83611684565b9150611b7e82611b3f565b602082019050919050565b5f6020820190508181035f830152611ba081611b67565b9050919050565b7f506f7374204944206d69736d61746368000000000000000000000000000000005f82015250565b5f611bdb601083611684565b9150611be682611ba7565b602082019050919050565b5f6020820190508181035f830152611c0881611bcf565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611c4682611648565b9150611c5183611648565b9250828202611c5f81611648565b91508282048414831517611c7657611c75611c0f565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611cb482611648565b9150611cbf83611648565b925082611ccf57611cce611c7d565b5b828204905092915050565b5f611ce482611648565b9150611cef83611648565b9250828201905080821115611d0757611d06611c0f565b5b92915050565b5f604082019050611d205f830185611726565b611d2d6020830184611651565b9392505050565b5f81519050611d428161174e565b92915050565b5f60208284031215611d5d57611d5c6115bb565b5b5f611d6a84828501611d34565b91505092915050565b5f611d7d82611648565b9150611d8883611648565b9250828203905081811115611da057611d9f611c0f565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f602082019050611de65f830184611651565b92915050565b5f819050919050565b5f611e0f611e0a611e0584611dec565b611a1e565b611648565b9050919050565b611e1f81611df5565b82525050565b5f604082019050611e385f830185611726565b611e456020830184611e16565b9392505050565b5f604082019050611e5f5f830185611651565b611e6c6020830184611651565b9392505050565b7f43616e6e6f74207374616b6520300000000000000000000000000000000000005f82015250565b5f611ea7600e83611684565b9150611eb282611e73565b602082019050919050565b5f6020820190508181035f830152611ed481611e9b565b9050919050565b5f81519050611ee9816118fe565b92915050565b5f60208284031215611f0457611f036115bb565b5b5f611f1184828501611edb565b91505092915050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611f4e601483611684565b9150611f5982611f1a565b602082019050919050565b5f6020820190508181035f830152611f7b81611f42565b9050919050565b5f604082019050611f955f830185611726565b611fa26020830184611726565b9392505050565b7f436f6e7472616374206e6f7420617070726f76656420746f207472616e7366655f8201527f7220746f6b656e73000000000000000000000000000000000000000000000000602082015250565b5f612003602883611684565b915061200e82611fa9565b604082019050919050565b5f6020820190508181035f83015261203081611ff7565b9050919050565b5f60608201905061204a5f830186611726565b6120576020830185611726565b6120646040830184611651565b949350505050565b7f546f6b656e207472616e73666572206661696c656400000000000000000000005f82015250565b5f6120a0601583611684565b91506120ab8261206c565b602082019050919050565b5f6020820190508181035f8301526120cd81612094565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026121307fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826120f5565b61213a86836120f5565b95508019841693508086168417925050509392505050565b5f61216c61216761216284611648565b611a1e565b611648565b9050919050565b5f819050919050565b61218583612152565b61219961219182612173565b848454612101565b825550505050565b5f90565b6121ad6121a1565b6121b881848461217c565b505050565b5b818110156121db576121d05f826121a5565b6001810190506121be565b5050565b601f821115612220576121f1816120d4565b6121fa846120e6565b81016020851015612209578190505b61221d612215856120e6565b8301826121bd565b50505b505050565b5f82821c905092915050565b5f6122405f1984600802612225565b1980831691505092915050565b5f6122588383612231565b9150826002028217905092915050565b6122718261167a565b67ffffffffffffffff81111561228a57612289611780565b5b6122948254611abf565b61229f8282856121df565b5f60209050601f8311600181146122d0575f84156122be578287015190505b6122c8858261224d565b86555061232f565b601f1984166122de866120d4565b5f5b82811015612305578489015182556001820191506020850194506020810190506122e0565b86831015612322578489015161231e601f891682612231565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220a1a88c1ecb151e57d40212ea265b8bbf29268c7c2b00840f79204cd0bb3d3d8364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x25F8 CODESIZE SUB DUP1 PUSH2 0x25F8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x218 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0xF9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x27E JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E7 DUP3 PUSH2 0x1BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F7 DUP2 PUSH2 0x1DD JUMP JUMPDEST DUP2 EQ PUSH2 0x201 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x212 DUP2 PUSH2 0x1EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22E JUMPI PUSH2 0x22D PUSH2 0x1BA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23B DUP6 DUP3 DUP7 ADD PUSH2 0x204 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24C DUP6 DUP3 DUP7 ADD PUSH2 0x204 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x25F DUP2 PUSH2 0x1DD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x278 PUSH0 DUP4 ADD DUP5 PUSH2 0x256 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x236D DUP1 PUSH2 0x28B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC0497AC8 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC0497AC8 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xF8300FCA EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x16B JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xB7F5A5A3 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH2 0x241 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH2 0x254 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB SWAP2 SWAP1 PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x18A4 JUMP JUMPDEST PUSH2 0x27B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0xE07 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH2 0x12FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1994 JUMP JUMPDEST PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1C0 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1EC SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x237 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x237 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x21A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x249 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x252 PUSH0 PUSH2 0x1492 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x2F7 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x323 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x36E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x345 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x36E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x351 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH1 0x3 DUP4 PUSH1 0x40 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH0 DUP3 PUSH0 ADD MLOAD GT PUSH2 0x3DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x40 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x433 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42A SWAP1 PUSH2 0x1BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 ISZERO PUSH2 0x7B8 JUMPI PUSH0 PUSH1 0x64 PUSH1 0x5 DUP6 PUSH0 ADD MLOAD PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x1C3C JUMP JUMPDEST PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x1CAA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP8 PUSH0 ADD MLOAD PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E5 SWAP3 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x501 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x525 SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST POP PUSH0 DUP2 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x537 SWAP2 SWAP1 PUSH2 0x1D73 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP5 PUSH1 0x4 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x7B0 JUMPI PUSH0 DUP6 PUSH1 0x4 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x561 JUMPI PUSH2 0x560 PUSH2 0x1DA6 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x607 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x633 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x67E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x655 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x67E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x661 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD ISZERO PUSH2 0x7A1 JUMPI PUSH0 DUP8 PUSH1 0x2 ADD SLOAD DUP6 DUP4 PUSH0 ADD MLOAD PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0x1C3C JUMP JUMPDEST PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x1CAA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x710 SWAP3 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x72C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x750 SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x53B JUMP JUMPDEST POP POP POP PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x836 SWAP3 SWAP2 SWAP1 PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x852 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x876 SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP3 PUSH1 0x4 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xA7E JUMPI PUSH0 DUP4 PUSH1 0x4 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x89F JUMPI PUSH2 0x89E PUSH2 0x1DA6 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x945 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x971 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9BC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x993 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9BC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x99F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD ISZERO PUSH2 0xA6F JUMPI PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 PUSH0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP3 SWAP2 SWAP1 PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA49 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA6D SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST POP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x879 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP3 PUSH1 0x4 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xCF9 JUMPI PUSH0 DUP4 PUSH1 0x4 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAA7 JUMPI PUSH2 0xAA6 PUSH2 0x1DA6 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xB4D SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB79 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBC4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB9B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBC4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBA7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0xCEA JUMPI PUSH0 DUP6 PUSH1 0x3 ADD SLOAD DUP7 PUSH1 0x3 ADD SLOAD DUP4 PUSH0 ADD MLOAD PUSH2 0xBF1 SWAP2 SWAP1 PUSH2 0x1C3C JUMP JUMPDEST PUSH2 0xBFB SWAP2 SWAP1 PUSH2 0x1CAA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC59 SWAP3 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC75 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC99 SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0xCE0 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xA81 JUMP JUMPDEST POP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD ISZERO PUSH2 0xD27 JUMPI DUP3 PUSH0 ADD MLOAD DUP3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD1B SWAP2 SWAP1 PUSH2 0x1D73 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD45 JUMP JUMPDEST DUP3 PUSH0 ADD MLOAD DUP3 PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD3D SWAP2 SWAP1 PUSH2 0x1D73 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 PUSH2 0xDAB SWAP2 SWAP1 PUSH2 0x155A JUMP JUMPDEST POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E DUP5 PUSH0 ADD MLOAD DUP4 PUSH1 0x40 MLOAD PUSH2 0xDF8 SWAP3 SWAP2 SWAP1 PUSH2 0x1E4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0xE49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE40 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA4 SWAP2 SWAP1 PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEBF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEE3 SWAP2 SWAP1 PUSH2 0x1EEF JUMP JUMPDEST LT ISZERO PUSH2 0xF24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1B SWAP1 PUSH2 0x1F64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF81 SWAP3 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF9C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFC0 SWAP2 SWAP1 PUSH2 0x1EEF JUMP JUMPDEST LT ISZERO PUSH2 0x1001 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF8 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1012 SWAP2 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1081 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2037 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x109D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10C1 SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1103 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FA SWAP1 PUSH2 0x20B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1199 SWAP2 SWAP1 PUSH2 0x2268 JUMP JUMPDEST POP SWAP1 POP POP PUSH0 DUP3 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x11EA JUMPI CALLER DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP5 DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11FD SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 ADD CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x128B JUMPI DUP5 DUP3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x127F SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12A6 JUMP JUMPDEST DUP5 DUP3 PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x129E SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x56E5C3A64EE1D63CC76545AE78B97F7BB9E3F402463F7F9F86428F5154FC5EAF DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x12F0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1307 PUSH2 0x140B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1377 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136E SWAP2 SWAP1 PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1380 DUP2 PUSH2 0x1492 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1413 PUSH2 0x1553 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1431 PUSH2 0x254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1490 JUMPI PUSH2 0x1454 PUSH2 0x1553 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1487 SWAP2 SWAP1 PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x1566 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST PUSH0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1577 JUMPI POP PUSH2 0x1594 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1593 SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x15AE JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1598 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15EC DUP3 PUSH2 0x15C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15FC DUP2 PUSH2 0x15E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1606 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1617 DUP2 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1632 JUMPI PUSH2 0x1631 PUSH2 0x15BB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x163F DUP5 DUP3 DUP6 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x165A DUP2 PUSH2 0x1648 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1674 DUP2 PUSH2 0x1660 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16BC DUP3 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x16C6 DUP2 DUP6 PUSH2 0x1684 JUMP JUMPDEST SWAP4 POP PUSH2 0x16D6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1694 JUMP JUMPDEST PUSH2 0x16DF DUP2 PUSH2 0x16A2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x16FD PUSH0 DUP4 ADD DUP7 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x170A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x166B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x171C DUP2 DUP5 PUSH2 0x16B2 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x172F DUP2 PUSH2 0x15E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1748 PUSH0 DUP4 ADD DUP5 PUSH2 0x1726 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1757 DUP2 PUSH2 0x1660 JUMP JUMPDEST DUP2 EQ PUSH2 0x1761 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1772 DUP2 PUSH2 0x174E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x17B6 DUP3 PUSH2 0x16A2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17D5 JUMPI PUSH2 0x17D4 PUSH2 0x1780 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17E7 PUSH2 0x15B2 JUMP JUMPDEST SWAP1 POP PUSH2 0x17F3 DUP3 DUP3 PUSH2 0x17AD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1812 JUMPI PUSH2 0x1811 PUSH2 0x1780 JUMP JUMPDEST JUMPDEST PUSH2 0x181B DUP3 PUSH2 0x16A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1848 PUSH2 0x1843 DUP5 PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0x17DE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1864 JUMPI PUSH2 0x1863 PUSH2 0x177C JUMP JUMPDEST JUMPDEST PUSH2 0x186F DUP5 DUP3 DUP6 PUSH2 0x1828 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x188B JUMPI PUSH2 0x188A PUSH2 0x1778 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x189B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1836 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18BA JUMPI PUSH2 0x18B9 PUSH2 0x15BB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18C7 DUP6 DUP3 DUP7 ADD PUSH2 0x1764 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18E8 JUMPI PUSH2 0x18E7 PUSH2 0x15BF JUMP JUMPDEST JUMPDEST PUSH2 0x18F4 DUP6 DUP3 DUP7 ADD PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1907 DUP2 PUSH2 0x1648 JUMP JUMPDEST DUP2 EQ PUSH2 0x1911 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1922 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x193F JUMPI PUSH2 0x193E PUSH2 0x15BB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x194C DUP7 DUP3 DUP8 ADD PUSH2 0x1914 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x195D DUP7 DUP3 DUP8 ADD PUSH2 0x1764 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x197E JUMPI PUSH2 0x197D PUSH2 0x15BF JUMP JUMPDEST JUMPDEST PUSH2 0x198A DUP7 DUP3 DUP8 ADD PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A9 JUMPI PUSH2 0x19A8 PUSH2 0x15BB JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19C6 JUMPI PUSH2 0x19C5 PUSH2 0x15BF JUMP JUMPDEST JUMPDEST PUSH2 0x19D2 DUP5 DUP3 DUP6 ADD PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x19EE PUSH0 DUP4 ADD DUP8 PUSH2 0x1726 JUMP JUMPDEST PUSH2 0x19FB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x1A08 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x1A15 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A41 PUSH2 0x1A3C PUSH2 0x1A37 DUP5 PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0x15C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A52 DUP3 PUSH2 0x1A27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A63 DUP3 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A73 DUP2 PUSH2 0x1A59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A8C PUSH0 DUP4 ADD DUP5 PUSH2 0x1A6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1AD6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AE9 JUMPI PUSH2 0x1AE8 PUSH2 0x1A92 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B03 DUP3 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x1B0D DUP2 DUP6 PUSH2 0x1AEF JUMP JUMPDEST SWAP4 POP PUSH2 0x1B1D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1694 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B34 DUP3 DUP5 PUSH2 0x1AF9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207374616B6520666F756E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B73 PUSH1 0xE DUP4 PUSH2 0x1684 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7E DUP3 PUSH2 0x1B3F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BA0 DUP2 PUSH2 0x1B67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506F7374204944206D69736D6174636800000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BDB PUSH1 0x10 DUP4 PUSH2 0x1684 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE6 DUP3 PUSH2 0x1BA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C08 DUP2 PUSH2 0x1BCF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C46 DUP3 PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C51 DUP4 PUSH2 0x1648 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C5F DUP2 PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1C76 JUMPI PUSH2 0x1C75 PUSH2 0x1C0F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CB4 DUP3 PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CBF DUP4 PUSH2 0x1648 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1CCF JUMPI PUSH2 0x1CCE PUSH2 0x1C7D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE4 DUP3 PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEF DUP4 PUSH2 0x1648 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D07 JUMPI PUSH2 0x1D06 PUSH2 0x1C0F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D20 PUSH0 DUP4 ADD DUP6 PUSH2 0x1726 JUMP JUMPDEST PUSH2 0x1D2D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D42 DUP2 PUSH2 0x174E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D5D JUMPI PUSH2 0x1D5C PUSH2 0x15BB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D6A DUP5 DUP3 DUP6 ADD PUSH2 0x1D34 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D7D DUP3 PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D88 DUP4 PUSH2 0x1648 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1DA0 JUMPI PUSH2 0x1D9F PUSH2 0x1C0F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DE6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E0F PUSH2 0x1E0A PUSH2 0x1E05 DUP5 PUSH2 0x1DEC JUMP JUMPDEST PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0x1648 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E1F DUP2 PUSH2 0x1DF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E38 PUSH0 DUP4 ADD DUP6 PUSH2 0x1726 JUMP JUMPDEST PUSH2 0x1E45 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E16 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E5F PUSH0 DUP4 ADD DUP6 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x1E6C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA7 PUSH1 0xE DUP4 PUSH2 0x1684 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB2 DUP3 PUSH2 0x1E73 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ED4 DUP2 PUSH2 0x1E9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EE9 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F04 JUMPI PUSH2 0x1F03 PUSH2 0x15BB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F11 DUP5 DUP3 DUP6 ADD PUSH2 0x1EDB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F4E PUSH1 0x14 DUP4 PUSH2 0x1684 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F59 DUP3 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F7B DUP2 PUSH2 0x1F42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F95 PUSH0 DUP4 ADD DUP6 PUSH2 0x1726 JUMP JUMPDEST PUSH2 0x1FA2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1726 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206E6F7420617070726F76656420746F207472616E736665 PUSH0 DUP3 ADD MSTORE PUSH32 0x7220746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2003 PUSH1 0x28 DUP4 PUSH2 0x1684 JUMP JUMPDEST SWAP2 POP PUSH2 0x200E DUP3 PUSH2 0x1FA9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2030 DUP2 PUSH2 0x1FF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x204A PUSH0 DUP4 ADD DUP7 PUSH2 0x1726 JUMP JUMPDEST PUSH2 0x2057 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1726 JUMP JUMPDEST PUSH2 0x2064 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20A0 PUSH1 0x15 DUP4 PUSH2 0x1684 JUMP JUMPDEST SWAP2 POP PUSH2 0x20AB DUP3 PUSH2 0x206C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20CD DUP2 PUSH2 0x2094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2130 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x20F5 JUMP JUMPDEST PUSH2 0x213A DUP7 DUP4 PUSH2 0x20F5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x216C PUSH2 0x2167 PUSH2 0x2162 DUP5 PUSH2 0x1648 JUMP JUMPDEST PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0x1648 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2185 DUP4 PUSH2 0x2152 JUMP JUMPDEST PUSH2 0x2199 PUSH2 0x2191 DUP3 PUSH2 0x2173 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2101 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x21AD PUSH2 0x21A1 JUMP JUMPDEST PUSH2 0x21B8 DUP2 DUP5 DUP5 PUSH2 0x217C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x21DB JUMPI PUSH2 0x21D0 PUSH0 DUP3 PUSH2 0x21A5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21BE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2220 JUMPI PUSH2 0x21F1 DUP2 PUSH2 0x20D4 JUMP JUMPDEST PUSH2 0x21FA DUP5 PUSH2 0x20E6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2209 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x221D PUSH2 0x2215 DUP6 PUSH2 0x20E6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x21BD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2240 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2225 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2258 DUP4 DUP4 PUSH2 0x2231 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2271 DUP3 PUSH2 0x167A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x228A JUMPI PUSH2 0x2289 PUSH2 0x1780 JUMP JUMPDEST JUMPDEST PUSH2 0x2294 DUP3 SLOAD PUSH2 0x1ABF JUMP JUMPDEST PUSH2 0x229F DUP3 DUP3 DUP6 PUSH2 0x21DF JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x22D0 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x22BE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x22C8 DUP6 DUP3 PUSH2 0x224D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x232F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x22DE DUP7 PUSH2 0x20D4 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2305 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22E0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2322 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x231E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2231 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xA8 DUP13 0x1E 0xCB ISZERO 0x1E JUMPI 0xD4 MUL SLT 0xEA 0x26 JUMPDEST DUP12 0xBF 0x29 0x26 DUP13 PUSH29 0x2B00840F79204CD0BB3D3D8364736F6C634300081A0033000000000000 ",
							"sourceMap": "180:5337:6:-:0;;;1229:182;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1293:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1335:12:6::1;1318:5;;:30;;;;;;;;;;;;;;;;;;1229:182:::0;;180:5337;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;180:5337:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 5131,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 5459,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 5266,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 596,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@posts_971": {
									"entryPoint": 4995,
									"id": 971,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 577,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_1143": {
									"entryPoint": 3591,
									"id": 1143,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stakes_966": {
									"entryPoint": 393,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token_961": {
									"entryPoint": 5094,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 4863,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_1420": {
									"entryPoint": 635,
									"id": 1420,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 6198,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 6263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_boolt_string_memory_ptr": {
									"entryPoint": 6308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 6548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_boolt_string_memory_ptr": {
									"entryPoint": 6440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_Reputify_$1510_to_t_address_fromStack": {
									"entryPoint": 6762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 7702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_205c9abf3277d6f6ea53f405a0c4521e2370e038cb4c792c2a133737d9f8b562_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_98e81edf2b3f4fbb6d9b4dff4c46bf609d7be7b570e06ad4fbf58eced840fe4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 8066,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8247,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7717,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7437,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6619,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_Reputify_$1510__to_t_address__fromStack_reversed": {
									"entryPoint": 6777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_205c9abf3277d6f6ea53f405a0c4521e2370e038cb4c792c2a133737d9f8b562__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_98e81edf2b3f4fbb6d9b4dff4c46bf609d7be7b570e06ad4fbf58eced840fe4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool_t_string_memory_ptr__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5866,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7756,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5554,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 6136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8671,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 7660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_Reputify_$1510_to_t_address": {
									"entryPoint": 6745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 7669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6184,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5780,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 8781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 6686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7293,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6802,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7590,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6016,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6008,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6012,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5567,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5563,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_205c9abf3277d6f6ea53f405a0c4521e2370e038cb4c792c2a133737d9f8b562": {
									"entryPoint": 7079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab": {
									"entryPoint": 7795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 7962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4": {
									"entryPoint": 8300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a": {
									"entryPoint": 6975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_98e81edf2b3f4fbb6d9b4dff4c46bf609d7be7b570e06ad4fbf58eced840fe4b": {
									"entryPoint": 8105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8449,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8572,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8609,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:26000:8",
										"nodeType": "YulBlock",
										"src": "0:26000:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "748:87:8",
													"nodeType": "YulBlock",
													"src": "748:87:8",
													"statements": [
														{
															"nativeSrc": "758:29:8",
															"nodeType": "YulAssignment",
															"src": "758:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:8"
																},
																"nativeSrc": "767:20:8",
																"nodeType": "YulFunctionCall",
																"src": "767:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:8"
																},
																"nativeSrc": "796:33:8",
																"nodeType": "YulFunctionCall",
																"src": "796:33:8"
															},
															"nativeSrc": "796:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:8",
														"nodeType": "YulTypedName",
														"src": "726:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:8",
														"nodeType": "YulTypedName",
														"src": "734:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:8",
														"nodeType": "YulTypedName",
														"src": "742:5:8",
														"type": ""
													}
												],
												"src": "696:139:8"
											},
											{
												"body": {
													"nativeSrc": "907:263:8",
													"nodeType": "YulBlock",
													"src": "907:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:8",
																"nodeType": "YulBlock",
																"src": "953:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:8"
																			},
																			"nativeSrc": "955:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:8"
																		},
																		"nativeSrc": "955:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:8"
																		},
																		"nativeSrc": "924:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:8",
																		"nodeType": "YulLiteral",
																		"src": "949:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:8"
																},
																"nativeSrc": "920:32:8",
																"nodeType": "YulFunctionCall",
																"src": "920:32:8"
															},
															"nativeSrc": "917:119:8",
															"nodeType": "YulIf",
															"src": "917:119:8"
														},
														{
															"nativeSrc": "1046:117:8",
															"nodeType": "YulBlock",
															"src": "1046:117:8",
															"statements": [
																{
																	"nativeSrc": "1061:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:8",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:8"
																				},
																				"nativeSrc": "1121:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:8"
																		},
																		"nativeSrc": "1100:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:8",
														"nodeType": "YulTypedName",
														"src": "877:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:8",
														"nodeType": "YulTypedName",
														"src": "888:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:8",
														"nodeType": "YulTypedName",
														"src": "900:6:8",
														"type": ""
													}
												],
												"src": "841:329:8"
											},
											{
												"body": {
													"nativeSrc": "1221:32:8",
													"nodeType": "YulBlock",
													"src": "1221:32:8",
													"statements": [
														{
															"nativeSrc": "1231:16:8",
															"nodeType": "YulAssignment",
															"src": "1231:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:8",
																"nodeType": "YulIdentifier",
																"src": "1242:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:8",
														"nodeType": "YulTypedName",
														"src": "1203:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:8",
														"nodeType": "YulTypedName",
														"src": "1213:7:8",
														"type": ""
													}
												],
												"src": "1176:77:8"
											},
											{
												"body": {
													"nativeSrc": "1324:53:8",
													"nodeType": "YulBlock",
													"src": "1324:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:8"
																		},
																		"nativeSrc": "1346:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:8"
																},
																"nativeSrc": "1334:37:8",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:8"
															},
															"nativeSrc": "1334:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:8",
														"nodeType": "YulTypedName",
														"src": "1312:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:8",
														"nodeType": "YulTypedName",
														"src": "1319:3:8",
														"type": ""
													}
												],
												"src": "1259:118:8"
											},
											{
												"body": {
													"nativeSrc": "1425:48:8",
													"nodeType": "YulBlock",
													"src": "1425:48:8",
													"statements": [
														{
															"nativeSrc": "1435:32:8",
															"nodeType": "YulAssignment",
															"src": "1435:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1460:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1460:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1453:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1453:6:8"
																		},
																		"nativeSrc": "1453:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1453:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1446:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1446:6:8"
																},
																"nativeSrc": "1446:21:8",
																"nodeType": "YulFunctionCall",
																"src": "1446:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1435:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1435:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1383:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1407:5:8",
														"nodeType": "YulTypedName",
														"src": "1407:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1417:7:8",
														"nodeType": "YulTypedName",
														"src": "1417:7:8",
														"type": ""
													}
												],
												"src": "1383:90:8"
											},
											{
												"body": {
													"nativeSrc": "1538:50:8",
													"nodeType": "YulBlock",
													"src": "1538:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1555:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1555:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1575:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1575:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1560:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "1560:14:8"
																		},
																		"nativeSrc": "1560:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1560:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1548:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1548:6:8"
																},
																"nativeSrc": "1548:34:8",
																"nodeType": "YulFunctionCall",
																"src": "1548:34:8"
															},
															"nativeSrc": "1548:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "1548:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1479:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1526:5:8",
														"nodeType": "YulTypedName",
														"src": "1526:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1533:3:8",
														"nodeType": "YulTypedName",
														"src": "1533:3:8",
														"type": ""
													}
												],
												"src": "1479:109:8"
											},
											{
												"body": {
													"nativeSrc": "1653:40:8",
													"nodeType": "YulBlock",
													"src": "1653:40:8",
													"statements": [
														{
															"nativeSrc": "1664:22:8",
															"nodeType": "YulAssignment",
															"src": "1664:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1680:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1680:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1674:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1674:5:8"
																},
																"nativeSrc": "1674:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1674:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1664:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1664:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1594:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1636:5:8",
														"nodeType": "YulTypedName",
														"src": "1636:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1646:6:8",
														"nodeType": "YulTypedName",
														"src": "1646:6:8",
														"type": ""
													}
												],
												"src": "1594:99:8"
											},
											{
												"body": {
													"nativeSrc": "1795:73:8",
													"nodeType": "YulBlock",
													"src": "1795:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1812:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1812:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1817:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1805:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1805:6:8"
																},
																"nativeSrc": "1805:19:8",
																"nodeType": "YulFunctionCall",
																"src": "1805:19:8"
															},
															"nativeSrc": "1805:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "1805:19:8"
														},
														{
															"nativeSrc": "1833:29:8",
															"nodeType": "YulAssignment",
															"src": "1833:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1852:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1852:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1857:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1857:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1848:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1848:3:8"
																},
																"nativeSrc": "1848:14:8",
																"nodeType": "YulFunctionCall",
																"src": "1848:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1833:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "1833:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1699:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1767:3:8",
														"nodeType": "YulTypedName",
														"src": "1767:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1772:6:8",
														"nodeType": "YulTypedName",
														"src": "1772:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1783:11:8",
														"nodeType": "YulTypedName",
														"src": "1783:11:8",
														"type": ""
													}
												],
												"src": "1699:169:8"
											},
											{
												"body": {
													"nativeSrc": "1936:77:8",
													"nodeType": "YulBlock",
													"src": "1936:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1953:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1953:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1958:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1958:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1963:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1963:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1947:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1947:5:8"
																},
																"nativeSrc": "1947:23:8",
																"nodeType": "YulFunctionCall",
																"src": "1947:23:8"
															},
															"nativeSrc": "1947:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "1947:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1990:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1990:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1995:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1995:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1986:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1986:3:8"
																		},
																		"nativeSrc": "1986:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1986:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2004:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2004:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1979:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1979:6:8"
																},
																"nativeSrc": "1979:27:8",
																"nodeType": "YulFunctionCall",
																"src": "1979:27:8"
															},
															"nativeSrc": "1979:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "1979:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1874:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1918:3:8",
														"nodeType": "YulTypedName",
														"src": "1918:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1923:3:8",
														"nodeType": "YulTypedName",
														"src": "1923:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1928:6:8",
														"nodeType": "YulTypedName",
														"src": "1928:6:8",
														"type": ""
													}
												],
												"src": "1874:139:8"
											},
											{
												"body": {
													"nativeSrc": "2067:54:8",
													"nodeType": "YulBlock",
													"src": "2067:54:8",
													"statements": [
														{
															"nativeSrc": "2077:38:8",
															"nodeType": "YulAssignment",
															"src": "2077:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2095:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2095:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2102:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2102:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2091:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2091:3:8"
																		},
																		"nativeSrc": "2091:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2091:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2111:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2111:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2107:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2107:3:8"
																		},
																		"nativeSrc": "2107:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2107:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2087:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2087:3:8"
																},
																"nativeSrc": "2087:28:8",
																"nodeType": "YulFunctionCall",
																"src": "2087:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2077:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2019:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2050:5:8",
														"nodeType": "YulTypedName",
														"src": "2050:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2060:6:8",
														"nodeType": "YulTypedName",
														"src": "2060:6:8",
														"type": ""
													}
												],
												"src": "2019:102:8"
											},
											{
												"body": {
													"nativeSrc": "2219:285:8",
													"nodeType": "YulBlock",
													"src": "2219:285:8",
													"statements": [
														{
															"nativeSrc": "2229:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2229:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2276:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2276:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2243:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "2243:32:8"
																},
																"nativeSrc": "2243:39:8",
																"nodeType": "YulFunctionCall",
																"src": "2243:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2233:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2233:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2291:78:8",
															"nodeType": "YulAssignment",
															"src": "2291:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2357:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2357:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2362:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2362:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2298:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "2298:58:8"
																},
																"nativeSrc": "2298:71:8",
																"nodeType": "YulFunctionCall",
																"src": "2298:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2291:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2291:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2417:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2417:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2424:4:8",
																				"nodeType": "YulLiteral",
																				"src": "2424:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2413:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2413:3:8"
																		},
																		"nativeSrc": "2413:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2413:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2431:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2431:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2436:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2436:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2378:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "2378:34:8"
																},
																"nativeSrc": "2378:65:8",
																"nodeType": "YulFunctionCall",
																"src": "2378:65:8"
															},
															"nativeSrc": "2378:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "2378:65:8"
														},
														{
															"nativeSrc": "2452:46:8",
															"nodeType": "YulAssignment",
															"src": "2452:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2463:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2463:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2490:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2490:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2468:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "2468:21:8"
																		},
																		"nativeSrc": "2468:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2468:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2459:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2459:3:8"
																},
																"nativeSrc": "2459:39:8",
																"nodeType": "YulFunctionCall",
																"src": "2459:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2452:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2452:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2127:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2200:5:8",
														"nodeType": "YulTypedName",
														"src": "2200:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2207:3:8",
														"nodeType": "YulTypedName",
														"src": "2207:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2215:3:8",
														"nodeType": "YulTypedName",
														"src": "2215:3:8",
														"type": ""
													}
												],
												"src": "2127:377:8"
											},
											{
												"body": {
													"nativeSrc": "2678:353:8",
													"nodeType": "YulBlock",
													"src": "2678:353:8",
													"statements": [
														{
															"nativeSrc": "2688:26:8",
															"nodeType": "YulAssignment",
															"src": "2688:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2700:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2700:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2711:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2711:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2696:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2696:3:8"
																},
																"nativeSrc": "2696:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2696:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2688:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2688:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2768:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2768:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2781:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2781:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2792:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2792:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2777:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2777:3:8"
																		},
																		"nativeSrc": "2777:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2777:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2724:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "2724:43:8"
																},
																"nativeSrc": "2724:71:8",
																"nodeType": "YulFunctionCall",
																"src": "2724:71:8"
															},
															"nativeSrc": "2724:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "2724:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2843:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2843:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2856:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2856:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2867:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2867:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2852:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2852:3:8"
																		},
																		"nativeSrc": "2852:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2852:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2805:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "2805:37:8"
																},
																"nativeSrc": "2805:66:8",
																"nodeType": "YulFunctionCall",
																"src": "2805:66:8"
															},
															"nativeSrc": "2805:66:8",
															"nodeType": "YulExpressionStatement",
															"src": "2805:66:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2892:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2892:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2903:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2903:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2888:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2888:3:8"
																		},
																		"nativeSrc": "2888:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2888:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2912:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "2912:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2918:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2918:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2908:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2908:3:8"
																		},
																		"nativeSrc": "2908:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2908:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2881:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2881:6:8"
																},
																"nativeSrc": "2881:48:8",
																"nodeType": "YulFunctionCall",
																"src": "2881:48:8"
															},
															"nativeSrc": "2881:48:8",
															"nodeType": "YulExpressionStatement",
															"src": "2881:48:8"
														},
														{
															"nativeSrc": "2938:86:8",
															"nodeType": "YulAssignment",
															"src": "2938:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3010:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3010:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "3019:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3019:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2946:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "2946:63:8"
																},
																"nativeSrc": "2946:78:8",
																"nodeType": "YulFunctionCall",
																"src": "2946:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2938:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2938:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool_t_string_memory_ptr__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2510:521:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2634:9:8",
														"nodeType": "YulTypedName",
														"src": "2634:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2646:6:8",
														"nodeType": "YulTypedName",
														"src": "2646:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2654:6:8",
														"nodeType": "YulTypedName",
														"src": "2654:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2662:6:8",
														"nodeType": "YulTypedName",
														"src": "2662:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2673:4:8",
														"nodeType": "YulTypedName",
														"src": "2673:4:8",
														"type": ""
													}
												],
												"src": "2510:521:8"
											},
											{
												"body": {
													"nativeSrc": "3102:53:8",
													"nodeType": "YulBlock",
													"src": "3102:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3119:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3119:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3142:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3142:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3124:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3124:17:8"
																		},
																		"nativeSrc": "3124:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3124:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3112:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3112:6:8"
																},
																"nativeSrc": "3112:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3112:37:8"
															},
															"nativeSrc": "3112:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3112:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3037:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3090:5:8",
														"nodeType": "YulTypedName",
														"src": "3090:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3097:3:8",
														"nodeType": "YulTypedName",
														"src": "3097:3:8",
														"type": ""
													}
												],
												"src": "3037:118:8"
											},
											{
												"body": {
													"nativeSrc": "3259:124:8",
													"nodeType": "YulBlock",
													"src": "3259:124:8",
													"statements": [
														{
															"nativeSrc": "3269:26:8",
															"nodeType": "YulAssignment",
															"src": "3269:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3281:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3281:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3292:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3292:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3277:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3277:3:8"
																},
																"nativeSrc": "3277:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3277:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3269:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3269:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3349:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3349:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3362:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3362:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3373:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3373:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3358:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3358:3:8"
																		},
																		"nativeSrc": "3358:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3358:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3305:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3305:43:8"
																},
																"nativeSrc": "3305:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3305:71:8"
															},
															"nativeSrc": "3305:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3305:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3161:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3231:9:8",
														"nodeType": "YulTypedName",
														"src": "3231:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3243:6:8",
														"nodeType": "YulTypedName",
														"src": "3243:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3254:4:8",
														"nodeType": "YulTypedName",
														"src": "3254:4:8",
														"type": ""
													}
												],
												"src": "3161:222:8"
											},
											{
												"body": {
													"nativeSrc": "3429:76:8",
													"nodeType": "YulBlock",
													"src": "3429:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3483:16:8",
																"nodeType": "YulBlock",
																"src": "3483:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3492:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3492:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3495:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3495:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3485:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3485:6:8"
																			},
																			"nativeSrc": "3485:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3485:12:8"
																		},
																		"nativeSrc": "3485:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3485:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3452:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3452:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3474:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3474:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3459:14:8",
																					"nodeType": "YulIdentifier",
																					"src": "3459:14:8"
																				},
																				"nativeSrc": "3459:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3459:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3449:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "3449:2:8"
																		},
																		"nativeSrc": "3449:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3449:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3442:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3442:6:8"
																},
																"nativeSrc": "3442:40:8",
																"nodeType": "YulFunctionCall",
																"src": "3442:40:8"
															},
															"nativeSrc": "3439:60:8",
															"nodeType": "YulIf",
															"src": "3439:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3389:116:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3422:5:8",
														"nodeType": "YulTypedName",
														"src": "3422:5:8",
														"type": ""
													}
												],
												"src": "3389:116:8"
											},
											{
												"body": {
													"nativeSrc": "3560:84:8",
													"nodeType": "YulBlock",
													"src": "3560:84:8",
													"statements": [
														{
															"nativeSrc": "3570:29:8",
															"nodeType": "YulAssignment",
															"src": "3570:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3592:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3592:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3579:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3579:12:8"
																},
																"nativeSrc": "3579:20:8",
																"nodeType": "YulFunctionCall",
																"src": "3579:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3570:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3570:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3632:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3632:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3608:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "3608:23:8"
																},
																"nativeSrc": "3608:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3608:30:8"
															},
															"nativeSrc": "3608:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3608:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "3511:133:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3538:6:8",
														"nodeType": "YulTypedName",
														"src": "3538:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3546:3:8",
														"nodeType": "YulTypedName",
														"src": "3546:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3554:5:8",
														"nodeType": "YulTypedName",
														"src": "3554:5:8",
														"type": ""
													}
												],
												"src": "3511:133:8"
											},
											{
												"body": {
													"nativeSrc": "3739:28:8",
													"nodeType": "YulBlock",
													"src": "3739:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3756:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3756:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3759:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3759:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3749:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3749:6:8"
																},
																"nativeSrc": "3749:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3749:12:8"
															},
															"nativeSrc": "3749:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "3749:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "3650:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "3650:117:8"
											},
											{
												"body": {
													"nativeSrc": "3862:28:8",
													"nodeType": "YulBlock",
													"src": "3862:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3879:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3879:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3882:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3882:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3872:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3872:6:8"
																},
																"nativeSrc": "3872:12:8",
																"nodeType": "YulFunctionCall",
																"src": "3872:12:8"
															},
															"nativeSrc": "3872:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "3872:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "3773:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "3773:117:8"
											},
											{
												"body": {
													"nativeSrc": "3924:152:8",
													"nodeType": "YulBlock",
													"src": "3924:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3941:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3941:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3944:77:8",
																		"nodeType": "YulLiteral",
																		"src": "3944:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3934:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3934:6:8"
																},
																"nativeSrc": "3934:88:8",
																"nodeType": "YulFunctionCall",
																"src": "3934:88:8"
															},
															"nativeSrc": "3934:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "3934:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4038:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4038:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4041:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4041:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4031:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4031:6:8"
																},
																"nativeSrc": "4031:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4031:15:8"
															},
															"nativeSrc": "4031:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4031:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4062:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4062:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4065:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4065:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4055:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4055:6:8"
																},
																"nativeSrc": "4055:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4055:15:8"
															},
															"nativeSrc": "4055:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "4055:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3896:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "3896:180:8"
											},
											{
												"body": {
													"nativeSrc": "4125:238:8",
													"nodeType": "YulBlock",
													"src": "4125:238:8",
													"statements": [
														{
															"nativeSrc": "4135:58:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4135:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4157:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4157:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "4187:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "4187:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4165:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "4165:21:8"
																		},
																		"nativeSrc": "4165:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4165:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4153:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4153:3:8"
																},
																"nativeSrc": "4153:40:8",
																"nodeType": "YulFunctionCall",
																"src": "4153:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4139:10:8",
																	"nodeType": "YulTypedName",
																	"src": "4139:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4304:22:8",
																"nodeType": "YulBlock",
																"src": "4304:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4306:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4306:16:8"
																			},
																			"nativeSrc": "4306:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4306:18:8"
																		},
																		"nativeSrc": "4306:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4306:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4247:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "4247:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4259:18:8",
																				"nodeType": "YulLiteral",
																				"src": "4259:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4244:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "4244:2:8"
																		},
																		"nativeSrc": "4244:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4244:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4283:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "4283:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4295:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4295:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4280:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "4280:2:8"
																		},
																		"nativeSrc": "4280:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4280:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4241:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4241:2:8"
																},
																"nativeSrc": "4241:62:8",
																"nodeType": "YulFunctionCall",
																"src": "4241:62:8"
															},
															"nativeSrc": "4238:88:8",
															"nodeType": "YulIf",
															"src": "4238:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4342:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4342:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4346:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "4346:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4335:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4335:6:8"
																},
																"nativeSrc": "4335:22:8",
																"nodeType": "YulFunctionCall",
																"src": "4335:22:8"
															},
															"nativeSrc": "4335:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "4335:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "4082:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4111:6:8",
														"nodeType": "YulTypedName",
														"src": "4111:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "4119:4:8",
														"nodeType": "YulTypedName",
														"src": "4119:4:8",
														"type": ""
													}
												],
												"src": "4082:281:8"
											},
											{
												"body": {
													"nativeSrc": "4410:88:8",
													"nodeType": "YulBlock",
													"src": "4410:88:8",
													"statements": [
														{
															"nativeSrc": "4420:30:8",
															"nodeType": "YulAssignment",
															"src": "4420:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "4430:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "4430:18:8"
																},
																"nativeSrc": "4430:20:8",
																"nodeType": "YulFunctionCall",
																"src": "4430:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4420:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4420:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4479:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4479:6:8"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "4487:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "4459:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "4459:19:8"
																},
																"nativeSrc": "4459:33:8",
																"nodeType": "YulFunctionCall",
																"src": "4459:33:8"
															},
															"nativeSrc": "4459:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "4459:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "4369:129:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "4394:4:8",
														"nodeType": "YulTypedName",
														"src": "4394:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "4403:6:8",
														"nodeType": "YulTypedName",
														"src": "4403:6:8",
														"type": ""
													}
												],
												"src": "4369:129:8"
											},
											{
												"body": {
													"nativeSrc": "4571:241:8",
													"nodeType": "YulBlock",
													"src": "4571:241:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4676:22:8",
																"nodeType": "YulBlock",
																"src": "4676:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4678:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4678:16:8"
																			},
																			"nativeSrc": "4678:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4678:18:8"
																		},
																		"nativeSrc": "4678:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4678:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4648:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4648:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4656:18:8",
																		"nodeType": "YulLiteral",
																		"src": "4656:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4645:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4645:2:8"
																},
																"nativeSrc": "4645:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4645:30:8"
															},
															"nativeSrc": "4642:56:8",
															"nodeType": "YulIf",
															"src": "4642:56:8"
														},
														{
															"nativeSrc": "4708:37:8",
															"nodeType": "YulAssignment",
															"src": "4708:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4738:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4738:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "4716:21:8",
																	"nodeType": "YulIdentifier",
																	"src": "4716:21:8"
																},
																"nativeSrc": "4716:29:8",
																"nodeType": "YulFunctionCall",
																"src": "4716:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4708:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4708:4:8"
																}
															]
														},
														{
															"nativeSrc": "4782:23:8",
															"nodeType": "YulAssignment",
															"src": "4782:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "4794:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4794:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4800:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4800:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4790:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4790:3:8"
																},
																"nativeSrc": "4790:15:8",
																"nodeType": "YulFunctionCall",
																"src": "4790:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4782:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4782:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "4504:308:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "4555:6:8",
														"nodeType": "YulTypedName",
														"src": "4555:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "4566:4:8",
														"nodeType": "YulTypedName",
														"src": "4566:4:8",
														"type": ""
													}
												],
												"src": "4504:308:8"
											},
											{
												"body": {
													"nativeSrc": "4882:84:8",
													"nodeType": "YulBlock",
													"src": "4882:84:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4906:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4906:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "4911:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4911:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4916:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4916:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4893:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "4893:12:8"
																},
																"nativeSrc": "4893:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4893:30:8"
															},
															"nativeSrc": "4893:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4893:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4943:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4943:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4948:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4948:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4939:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4939:3:8"
																		},
																		"nativeSrc": "4939:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4939:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4957:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4957:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4932:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4932:6:8"
																},
																"nativeSrc": "4932:27:8",
																"nodeType": "YulFunctionCall",
																"src": "4932:27:8"
															},
															"nativeSrc": "4932:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "4932:27:8"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "4818:148:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4864:3:8",
														"nodeType": "YulTypedName",
														"src": "4864:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4869:3:8",
														"nodeType": "YulTypedName",
														"src": "4869:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4874:6:8",
														"nodeType": "YulTypedName",
														"src": "4874:6:8",
														"type": ""
													}
												],
												"src": "4818:148:8"
											},
											{
												"body": {
													"nativeSrc": "5056:341:8",
													"nodeType": "YulBlock",
													"src": "5056:341:8",
													"statements": [
														{
															"nativeSrc": "5066:75:8",
															"nodeType": "YulAssignment",
															"src": "5066:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5133:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5133:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "5091:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "5091:41:8"
																		},
																		"nativeSrc": "5091:49:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5091:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5075:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "5075:15:8"
																},
																"nativeSrc": "5075:66:8",
																"nodeType": "YulFunctionCall",
																"src": "5075:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5066:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5066:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5157:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5157:5:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5164:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5164:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5150:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5150:6:8"
																},
																"nativeSrc": "5150:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5150:21:8"
															},
															"nativeSrc": "5150:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "5150:21:8"
														},
														{
															"nativeSrc": "5180:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5180:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5195:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "5195:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5202:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5202:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5191:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5191:3:8"
																},
																"nativeSrc": "5191:16:8",
																"nodeType": "YulFunctionCall",
																"src": "5191:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "5184:3:8",
																	"nodeType": "YulTypedName",
																	"src": "5184:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5245:83:8",
																"nodeType": "YulBlock",
																"src": "5245:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "5247:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5247:77:8"
																			},
																			"nativeSrc": "5247:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5247:79:8"
																		},
																		"nativeSrc": "5247:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5247:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "5226:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5226:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5231:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5231:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5222:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5222:3:8"
																		},
																		"nativeSrc": "5222:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5222:16:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5240:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5240:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5219:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5219:2:8"
																},
																"nativeSrc": "5219:25:8",
																"nodeType": "YulFunctionCall",
																"src": "5219:25:8"
															},
															"nativeSrc": "5216:112:8",
															"nodeType": "YulIf",
															"src": "5216:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5374:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5374:3:8"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "5379:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5379:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5384:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5384:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "5337:36:8",
																	"nodeType": "YulIdentifier",
																	"src": "5337:36:8"
																},
																"nativeSrc": "5337:54:8",
																"nodeType": "YulFunctionCall",
																"src": "5337:54:8"
															},
															"nativeSrc": "5337:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "5337:54:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "4972:425:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5029:3:8",
														"nodeType": "YulTypedName",
														"src": "5029:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5034:6:8",
														"nodeType": "YulTypedName",
														"src": "5034:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5042:3:8",
														"nodeType": "YulTypedName",
														"src": "5042:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5050:5:8",
														"nodeType": "YulTypedName",
														"src": "5050:5:8",
														"type": ""
													}
												],
												"src": "4972:425:8"
											},
											{
												"body": {
													"nativeSrc": "5479:278:8",
													"nodeType": "YulBlock",
													"src": "5479:278:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5528:83:8",
																"nodeType": "YulBlock",
																"src": "5528:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5530:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5530:77:8"
																			},
																			"nativeSrc": "5530:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5530:79:8"
																		},
																		"nativeSrc": "5530:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5530:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5507:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5507:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5515:4:8",
																						"nodeType": "YulLiteral",
																						"src": "5515:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5503:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5503:3:8"
																				},
																				"nativeSrc": "5503:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5503:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5522:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5522:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5499:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5499:3:8"
																		},
																		"nativeSrc": "5499:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5499:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5492:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5492:6:8"
																},
																"nativeSrc": "5492:35:8",
																"nodeType": "YulFunctionCall",
																"src": "5492:35:8"
															},
															"nativeSrc": "5489:122:8",
															"nodeType": "YulIf",
															"src": "5489:122:8"
														},
														{
															"nativeSrc": "5620:34:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5620:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5647:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5647:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5634:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "5634:12:8"
																},
																"nativeSrc": "5634:20:8",
																"nodeType": "YulFunctionCall",
																"src": "5634:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5624:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5624:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5663:88:8",
															"nodeType": "YulAssignment",
															"src": "5663:88:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5724:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5724:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5732:4:8",
																				"nodeType": "YulLiteral",
																				"src": "5732:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5720:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5720:3:8"
																		},
																		"nativeSrc": "5720:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5720:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5739:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5739:6:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5747:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5747:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "5672:47:8",
																	"nodeType": "YulIdentifier",
																	"src": "5672:47:8"
																},
																"nativeSrc": "5672:79:8",
																"nodeType": "YulFunctionCall",
																"src": "5672:79:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5663:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5663:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "5417:340:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5457:6:8",
														"nodeType": "YulTypedName",
														"src": "5457:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5465:3:8",
														"nodeType": "YulTypedName",
														"src": "5465:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5473:5:8",
														"nodeType": "YulTypedName",
														"src": "5473:5:8",
														"type": ""
													}
												],
												"src": "5417:340:8"
											},
											{
												"body": {
													"nativeSrc": "5853:558:8",
													"nodeType": "YulBlock",
													"src": "5853:558:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5899:83:8",
																"nodeType": "YulBlock",
																"src": "5899:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5901:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5901:77:8"
																			},
																			"nativeSrc": "5901:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5901:79:8"
																		},
																		"nativeSrc": "5901:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5901:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5874:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5874:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5883:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5883:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5870:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5870:3:8"
																		},
																		"nativeSrc": "5870:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5870:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5895:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5895:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5866:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5866:3:8"
																},
																"nativeSrc": "5866:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5866:32:8"
															},
															"nativeSrc": "5863:119:8",
															"nodeType": "YulIf",
															"src": "5863:119:8"
														},
														{
															"nativeSrc": "5992:114:8",
															"nodeType": "YulBlock",
															"src": "5992:114:8",
															"statements": [
																{
																	"nativeSrc": "6007:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6007:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6021:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6021:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6011:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6011:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6036:60:8",
																	"nodeType": "YulAssignment",
																	"src": "6036:60:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6068:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6068:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6079:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6079:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6064:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6064:3:8"
																				},
																				"nativeSrc": "6064:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6064:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6088:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6088:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6046:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6046:17:8"
																		},
																		"nativeSrc": "6046:50:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6046:50:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6036:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6036:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6116:288:8",
															"nodeType": "YulBlock",
															"src": "6116:288:8",
															"statements": [
																{
																	"nativeSrc": "6131:46:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6131:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6162:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6162:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6173:2:8",
																						"nodeType": "YulLiteral",
																						"src": "6173:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6158:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6158:3:8"
																				},
																				"nativeSrc": "6158:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6158:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6145:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "6145:12:8"
																		},
																		"nativeSrc": "6145:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6145:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6135:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6135:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6224:83:8",
																		"nodeType": "YulBlock",
																		"src": "6224:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6226:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "6226:77:8"
																					},
																					"nativeSrc": "6226:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6226:79:8"
																				},
																				"nativeSrc": "6226:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6226:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6196:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6196:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6204:18:8",
																				"nodeType": "YulLiteral",
																				"src": "6204:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6193:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6193:2:8"
																		},
																		"nativeSrc": "6193:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6193:30:8"
																	},
																	"nativeSrc": "6190:117:8",
																	"nodeType": "YulIf",
																	"src": "6190:117:8"
																},
																{
																	"nativeSrc": "6321:73:8",
																	"nodeType": "YulAssignment",
																	"src": "6321:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6366:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6366:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6377:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6377:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6362:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6362:3:8"
																				},
																				"nativeSrc": "6362:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6362:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6386:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6386:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "6331:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "6331:30:8"
																		},
																		"nativeSrc": "6331:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6331:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6321:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6321:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_boolt_string_memory_ptr",
												"nativeSrc": "5763:648:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5815:9:8",
														"nodeType": "YulTypedName",
														"src": "5815:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5826:7:8",
														"nodeType": "YulTypedName",
														"src": "5826:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5838:6:8",
														"nodeType": "YulTypedName",
														"src": "5838:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5846:6:8",
														"nodeType": "YulTypedName",
														"src": "5846:6:8",
														"type": ""
													}
												],
												"src": "5763:648:8"
											},
											{
												"body": {
													"nativeSrc": "6460:79:8",
													"nodeType": "YulBlock",
													"src": "6460:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6517:16:8",
																"nodeType": "YulBlock",
																"src": "6517:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6526:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6526:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6529:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6529:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6519:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6519:6:8"
																			},
																			"nativeSrc": "6519:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6519:12:8"
																		},
																		"nativeSrc": "6519:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6519:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6483:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6483:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6508:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "6508:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6490:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "6490:17:8"
																				},
																				"nativeSrc": "6490:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6490:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6480:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6480:2:8"
																		},
																		"nativeSrc": "6480:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6480:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6473:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6473:6:8"
																},
																"nativeSrc": "6473:43:8",
																"nodeType": "YulFunctionCall",
																"src": "6473:43:8"
															},
															"nativeSrc": "6470:63:8",
															"nodeType": "YulIf",
															"src": "6470:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "6417:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6453:5:8",
														"nodeType": "YulTypedName",
														"src": "6453:5:8",
														"type": ""
													}
												],
												"src": "6417:122:8"
											},
											{
												"body": {
													"nativeSrc": "6597:87:8",
													"nodeType": "YulBlock",
													"src": "6597:87:8",
													"statements": [
														{
															"nativeSrc": "6607:29:8",
															"nodeType": "YulAssignment",
															"src": "6607:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6629:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6629:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6616:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "6616:12:8"
																},
																"nativeSrc": "6616:20:8",
																"nodeType": "YulFunctionCall",
																"src": "6616:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6607:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "6607:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6672:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6672:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "6645:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "6645:26:8"
																},
																"nativeSrc": "6645:33:8",
																"nodeType": "YulFunctionCall",
																"src": "6645:33:8"
															},
															"nativeSrc": "6645:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "6645:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "6545:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6575:6:8",
														"nodeType": "YulTypedName",
														"src": "6575:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6583:3:8",
														"nodeType": "YulTypedName",
														"src": "6583:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6591:5:8",
														"nodeType": "YulTypedName",
														"src": "6591:5:8",
														"type": ""
													}
												],
												"src": "6545:139:8"
											},
											{
												"body": {
													"nativeSrc": "6797:686:8",
													"nodeType": "YulBlock",
													"src": "6797:686:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6843:83:8",
																"nodeType": "YulBlock",
																"src": "6843:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6845:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6845:77:8"
																			},
																			"nativeSrc": "6845:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6845:79:8"
																		},
																		"nativeSrc": "6845:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6845:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6818:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6818:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6827:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6827:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6814:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6814:3:8"
																		},
																		"nativeSrc": "6814:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6814:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6839:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6839:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6810:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6810:3:8"
																},
																"nativeSrc": "6810:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6810:32:8"
															},
															"nativeSrc": "6807:119:8",
															"nodeType": "YulIf",
															"src": "6807:119:8"
														},
														{
															"nativeSrc": "6936:117:8",
															"nodeType": "YulBlock",
															"src": "6936:117:8",
															"statements": [
																{
																	"nativeSrc": "6951:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6951:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6965:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6965:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6955:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6955:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6980:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6980:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7015:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7015:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7026:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7026:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7011:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7011:3:8"
																				},
																				"nativeSrc": "7011:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7011:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7035:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7035:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6990:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6990:20:8"
																		},
																		"nativeSrc": "6990:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6990:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6980:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6980:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7063:115:8",
															"nodeType": "YulBlock",
															"src": "7063:115:8",
															"statements": [
																{
																	"nativeSrc": "7078:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7078:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7092:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7092:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7082:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7082:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7108:60:8",
																	"nodeType": "YulAssignment",
																	"src": "7108:60:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7140:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7140:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7151:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7151:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7136:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7136:3:8"
																				},
																				"nativeSrc": "7136:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7136:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7160:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7160:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "7118:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "7118:17:8"
																		},
																		"nativeSrc": "7118:50:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7118:50:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7108:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7108:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7188:288:8",
															"nodeType": "YulBlock",
															"src": "7188:288:8",
															"statements": [
																{
																	"nativeSrc": "7203:46:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7203:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7234:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7234:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7245:2:8",
																						"nodeType": "YulLiteral",
																						"src": "7245:2:8",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7230:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7230:3:8"
																				},
																				"nativeSrc": "7230:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7230:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7217:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "7217:12:8"
																		},
																		"nativeSrc": "7217:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7217:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7207:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7207:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7296:83:8",
																		"nodeType": "YulBlock",
																		"src": "7296:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7298:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "7298:77:8"
																					},
																					"nativeSrc": "7298:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7298:79:8"
																				},
																				"nativeSrc": "7298:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "7298:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7268:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7268:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7276:18:8",
																				"nodeType": "YulLiteral",
																				"src": "7276:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7265:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7265:2:8"
																		},
																		"nativeSrc": "7265:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7265:30:8"
																	},
																	"nativeSrc": "7262:117:8",
																	"nodeType": "YulIf",
																	"src": "7262:117:8"
																},
																{
																	"nativeSrc": "7393:73:8",
																	"nodeType": "YulAssignment",
																	"src": "7393:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7438:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7438:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7449:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7449:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7434:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7434:3:8"
																				},
																				"nativeSrc": "7434:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7434:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7458:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7458:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7403:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "7403:30:8"
																		},
																		"nativeSrc": "7403:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7403:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7393:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7393:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_boolt_string_memory_ptr",
												"nativeSrc": "6690:793:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6751:9:8",
														"nodeType": "YulTypedName",
														"src": "6751:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6762:7:8",
														"nodeType": "YulTypedName",
														"src": "6762:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6774:6:8",
														"nodeType": "YulTypedName",
														"src": "6774:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6782:6:8",
														"nodeType": "YulTypedName",
														"src": "6782:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6790:6:8",
														"nodeType": "YulTypedName",
														"src": "6790:6:8",
														"type": ""
													}
												],
												"src": "6690:793:8"
											},
											{
												"body": {
													"nativeSrc": "7565:433:8",
													"nodeType": "YulBlock",
													"src": "7565:433:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7611:83:8",
																"nodeType": "YulBlock",
																"src": "7611:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7613:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7613:77:8"
																			},
																			"nativeSrc": "7613:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7613:79:8"
																		},
																		"nativeSrc": "7613:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7613:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7586:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7586:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7595:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7595:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7582:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7582:3:8"
																		},
																		"nativeSrc": "7582:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7582:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7607:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7607:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7578:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7578:3:8"
																},
																"nativeSrc": "7578:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7578:32:8"
															},
															"nativeSrc": "7575:119:8",
															"nodeType": "YulIf",
															"src": "7575:119:8"
														},
														{
															"nativeSrc": "7704:287:8",
															"nodeType": "YulBlock",
															"src": "7704:287:8",
															"statements": [
																{
																	"nativeSrc": "7719:45:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7719:45:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7750:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7750:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7761:1:8",
																						"nodeType": "YulLiteral",
																						"src": "7761:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7746:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7746:3:8"
																				},
																				"nativeSrc": "7746:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7746:17:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7733:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "7733:12:8"
																		},
																		"nativeSrc": "7733:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7733:31:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7723:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7723:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7811:83:8",
																		"nodeType": "YulBlock",
																		"src": "7811:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7813:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "7813:77:8"
																					},
																					"nativeSrc": "7813:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7813:79:8"
																				},
																				"nativeSrc": "7813:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "7813:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7783:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7783:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7791:18:8",
																				"nodeType": "YulLiteral",
																				"src": "7791:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7780:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7780:2:8"
																		},
																		"nativeSrc": "7780:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7780:30:8"
																	},
																	"nativeSrc": "7777:117:8",
																	"nodeType": "YulIf",
																	"src": "7777:117:8"
																},
																{
																	"nativeSrc": "7908:73:8",
																	"nodeType": "YulAssignment",
																	"src": "7908:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7953:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7953:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7964:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7964:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7949:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7949:3:8"
																				},
																				"nativeSrc": "7949:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7949:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7973:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7973:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7918:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "7918:30:8"
																		},
																		"nativeSrc": "7918:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7918:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7908:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7908:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "7489:509:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7535:9:8",
														"nodeType": "YulTypedName",
														"src": "7535:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7546:7:8",
														"nodeType": "YulTypedName",
														"src": "7546:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7558:6:8",
														"nodeType": "YulTypedName",
														"src": "7558:6:8",
														"type": ""
													}
												],
												"src": "7489:509:8"
											},
											{
												"body": {
													"nativeSrc": "8186:371:8",
													"nodeType": "YulBlock",
													"src": "8186:371:8",
													"statements": [
														{
															"nativeSrc": "8196:27:8",
															"nodeType": "YulAssignment",
															"src": "8196:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8208:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8208:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8219:3:8",
																		"nodeType": "YulLiteral",
																		"src": "8219:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8204:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8204:3:8"
																},
																"nativeSrc": "8204:19:8",
																"nodeType": "YulFunctionCall",
																"src": "8204:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8196:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8196:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8277:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8277:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8290:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8290:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8301:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8301:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8286:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8286:3:8"
																		},
																		"nativeSrc": "8286:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8286:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8233:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8233:43:8"
																},
																"nativeSrc": "8233:71:8",
																"nodeType": "YulFunctionCall",
																"src": "8233:71:8"
															},
															"nativeSrc": "8233:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "8233:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8358:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8358:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8371:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8371:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8382:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8382:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8367:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8367:3:8"
																		},
																		"nativeSrc": "8367:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8367:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8314:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8314:43:8"
																},
																"nativeSrc": "8314:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8314:72:8"
															},
															"nativeSrc": "8314:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8314:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8440:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8440:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8453:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8453:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8464:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8464:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8449:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8449:3:8"
																		},
																		"nativeSrc": "8449:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8449:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8396:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8396:43:8"
																},
																"nativeSrc": "8396:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8396:72:8"
															},
															"nativeSrc": "8396:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8396:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8522:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8522:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8535:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8535:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8546:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8546:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8531:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8531:3:8"
																		},
																		"nativeSrc": "8531:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8531:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8478:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8478:43:8"
																},
																"nativeSrc": "8478:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8478:72:8"
															},
															"nativeSrc": "8478:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8478:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8004:553:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8134:9:8",
														"nodeType": "YulTypedName",
														"src": "8134:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8146:6:8",
														"nodeType": "YulTypedName",
														"src": "8146:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8154:6:8",
														"nodeType": "YulTypedName",
														"src": "8154:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8162:6:8",
														"nodeType": "YulTypedName",
														"src": "8162:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8170:6:8",
														"nodeType": "YulTypedName",
														"src": "8170:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8181:4:8",
														"nodeType": "YulTypedName",
														"src": "8181:4:8",
														"type": ""
													}
												],
												"src": "8004:553:8"
											},
											{
												"body": {
													"nativeSrc": "8595:28:8",
													"nodeType": "YulBlock",
													"src": "8595:28:8",
													"statements": [
														{
															"nativeSrc": "8605:12:8",
															"nodeType": "YulAssignment",
															"src": "8605:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "8612:5:8",
																"nodeType": "YulIdentifier",
																"src": "8612:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8605:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8605:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "8563:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8581:5:8",
														"nodeType": "YulTypedName",
														"src": "8581:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "8591:3:8",
														"nodeType": "YulTypedName",
														"src": "8591:3:8",
														"type": ""
													}
												],
												"src": "8563:60:8"
											},
											{
												"body": {
													"nativeSrc": "8689:82:8",
													"nodeType": "YulBlock",
													"src": "8689:82:8",
													"statements": [
														{
															"nativeSrc": "8699:66:8",
															"nodeType": "YulAssignment",
															"src": "8699:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8757:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "8757:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "8739:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "8739:17:8"
																				},
																				"nativeSrc": "8739:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8739:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "8730:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "8730:8:8"
																		},
																		"nativeSrc": "8730:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8730:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "8712:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8712:17:8"
																},
																"nativeSrc": "8712:53:8",
																"nodeType": "YulFunctionCall",
																"src": "8712:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8699:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "8699:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "8629:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8669:5:8",
														"nodeType": "YulTypedName",
														"src": "8669:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8679:9:8",
														"nodeType": "YulTypedName",
														"src": "8679:9:8",
														"type": ""
													}
												],
												"src": "8629:142:8"
											},
											{
												"body": {
													"nativeSrc": "8837:66:8",
													"nodeType": "YulBlock",
													"src": "8837:66:8",
													"statements": [
														{
															"nativeSrc": "8847:50:8",
															"nodeType": "YulAssignment",
															"src": "8847:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8891:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8891:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "8860:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "8860:30:8"
																},
																"nativeSrc": "8860:37:8",
																"nodeType": "YulFunctionCall",
																"src": "8860:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8847:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "8847:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "8777:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8817:5:8",
														"nodeType": "YulTypedName",
														"src": "8817:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8827:9:8",
														"nodeType": "YulTypedName",
														"src": "8827:9:8",
														"type": ""
													}
												],
												"src": "8777:126:8"
											},
											{
												"body": {
													"nativeSrc": "8986:66:8",
													"nodeType": "YulBlock",
													"src": "8986:66:8",
													"statements": [
														{
															"nativeSrc": "8996:50:8",
															"nodeType": "YulAssignment",
															"src": "8996:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9040:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9040:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "9009:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "9009:30:8"
																},
																"nativeSrc": "9009:37:8",
																"nodeType": "YulFunctionCall",
																"src": "9009:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8996:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "8996:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_Reputify_$1510_to_t_address",
												"nativeSrc": "8909:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8966:5:8",
														"nodeType": "YulTypedName",
														"src": "8966:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8976:9:8",
														"nodeType": "YulTypedName",
														"src": "8976:9:8",
														"type": ""
													}
												],
												"src": "8909:143:8"
											},
											{
												"body": {
													"nativeSrc": "9140:83:8",
													"nodeType": "YulBlock",
													"src": "9140:83:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9157:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9157:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9210:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9210:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_Reputify_$1510_to_t_address",
																			"nativeSrc": "9162:47:8",
																			"nodeType": "YulIdentifier",
																			"src": "9162:47:8"
																		},
																		"nativeSrc": "9162:54:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9162:54:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9150:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9150:6:8"
																},
																"nativeSrc": "9150:67:8",
																"nodeType": "YulFunctionCall",
																"src": "9150:67:8"
															},
															"nativeSrc": "9150:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "9150:67:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_Reputify_$1510_to_t_address_fromStack",
												"nativeSrc": "9058:165:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9128:5:8",
														"nodeType": "YulTypedName",
														"src": "9128:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9135:3:8",
														"nodeType": "YulTypedName",
														"src": "9135:3:8",
														"type": ""
													}
												],
												"src": "9058:165:8"
											},
											{
												"body": {
													"nativeSrc": "9344:141:8",
													"nodeType": "YulBlock",
													"src": "9344:141:8",
													"statements": [
														{
															"nativeSrc": "9354:26:8",
															"nodeType": "YulAssignment",
															"src": "9354:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9366:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9366:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9377:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9377:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9362:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9362:3:8"
																},
																"nativeSrc": "9362:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9362:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9354:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9354:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9451:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9451:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9464:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9464:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9475:1:8",
																				"nodeType": "YulLiteral",
																				"src": "9475:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9460:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9460:3:8"
																		},
																		"nativeSrc": "9460:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9460:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_Reputify_$1510_to_t_address_fromStack",
																	"nativeSrc": "9390:60:8",
																	"nodeType": "YulIdentifier",
																	"src": "9390:60:8"
																},
																"nativeSrc": "9390:88:8",
																"nodeType": "YulFunctionCall",
																"src": "9390:88:8"
															},
															"nativeSrc": "9390:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "9390:88:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_Reputify_$1510__to_t_address__fromStack_reversed",
												"nativeSrc": "9229:256:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9316:9:8",
														"nodeType": "YulTypedName",
														"src": "9316:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9328:6:8",
														"nodeType": "YulTypedName",
														"src": "9328:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9339:4:8",
														"nodeType": "YulTypedName",
														"src": "9339:4:8",
														"type": ""
													}
												],
												"src": "9229:256:8"
											},
											{
												"body": {
													"nativeSrc": "9519:152:8",
													"nodeType": "YulBlock",
													"src": "9519:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9536:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9536:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9539:77:8",
																		"nodeType": "YulLiteral",
																		"src": "9539:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9529:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9529:6:8"
																},
																"nativeSrc": "9529:88:8",
																"nodeType": "YulFunctionCall",
																"src": "9529:88:8"
															},
															"nativeSrc": "9529:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "9529:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9633:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9633:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9636:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9636:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9626:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9626:6:8"
																},
																"nativeSrc": "9626:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9626:15:8"
															},
															"nativeSrc": "9626:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9626:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9657:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9657:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9660:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9660:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9650:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9650:6:8"
																},
																"nativeSrc": "9650:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9650:15:8"
															},
															"nativeSrc": "9650:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9650:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9491:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "9491:180:8"
											},
											{
												"body": {
													"nativeSrc": "9728:269:8",
													"nodeType": "YulBlock",
													"src": "9728:269:8",
													"statements": [
														{
															"nativeSrc": "9738:22:8",
															"nodeType": "YulAssignment",
															"src": "9738:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9752:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9752:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9758:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9758:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9748:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9748:3:8"
																},
																"nativeSrc": "9748:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9748:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9738:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9738:6:8"
																}
															]
														},
														{
															"nativeSrc": "9769:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9769:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9799:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9799:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9805:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9805:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9795:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9795:3:8"
																},
																"nativeSrc": "9795:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9795:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9773:18:8",
																	"nodeType": "YulTypedName",
																	"src": "9773:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9846:51:8",
																"nodeType": "YulBlock",
																"src": "9846:51:8",
																"statements": [
																	{
																		"nativeSrc": "9860:27:8",
																		"nodeType": "YulAssignment",
																		"src": "9860:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9874:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9874:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9882:4:8",
																					"nodeType": "YulLiteral",
																					"src": "9882:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9870:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9870:3:8"
																			},
																			"nativeSrc": "9870:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9870:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9860:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9860:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9826:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "9826:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9819:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9819:6:8"
																},
																"nativeSrc": "9819:26:8",
																"nodeType": "YulFunctionCall",
																"src": "9819:26:8"
															},
															"nativeSrc": "9816:81:8",
															"nodeType": "YulIf",
															"src": "9816:81:8"
														},
														{
															"body": {
																"nativeSrc": "9949:42:8",
																"nodeType": "YulBlock",
																"src": "9949:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9963:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9963:16:8"
																			},
																			"nativeSrc": "9963:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9963:18:8"
																		},
																		"nativeSrc": "9963:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9963:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9913:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "9913:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9936:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9936:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9944:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9944:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9933:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9933:2:8"
																		},
																		"nativeSrc": "9933:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9933:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9910:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9910:2:8"
																},
																"nativeSrc": "9910:38:8",
																"nodeType": "YulFunctionCall",
																"src": "9910:38:8"
															},
															"nativeSrc": "9907:84:8",
															"nodeType": "YulIf",
															"src": "9907:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9677:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9712:4:8",
														"nodeType": "YulTypedName",
														"src": "9712:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9721:6:8",
														"nodeType": "YulTypedName",
														"src": "9721:6:8",
														"type": ""
													}
												],
												"src": "9677:320:8"
											},
											{
												"body": {
													"nativeSrc": "10117:34:8",
													"nodeType": "YulBlock",
													"src": "10117:34:8",
													"statements": [
														{
															"nativeSrc": "10127:18:8",
															"nodeType": "YulAssignment",
															"src": "10127:18:8",
															"value": {
																"name": "pos",
																"nativeSrc": "10142:3:8",
																"nodeType": "YulIdentifier",
																"src": "10142:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10127:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "10127:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10003:148:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10089:3:8",
														"nodeType": "YulTypedName",
														"src": "10089:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10094:6:8",
														"nodeType": "YulTypedName",
														"src": "10094:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10105:11:8",
														"nodeType": "YulTypedName",
														"src": "10105:11:8",
														"type": ""
													}
												],
												"src": "10003:148:8"
											},
											{
												"body": {
													"nativeSrc": "10267:280:8",
													"nodeType": "YulBlock",
													"src": "10267:280:8",
													"statements": [
														{
															"nativeSrc": "10277:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "10277:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10324:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10324:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "10291:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "10291:32:8"
																},
																"nativeSrc": "10291:39:8",
																"nodeType": "YulFunctionCall",
																"src": "10291:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10281:6:8",
																	"nodeType": "YulTypedName",
																	"src": "10281:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10339:96:8",
															"nodeType": "YulAssignment",
															"src": "10339:96:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10423:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10423:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10428:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10428:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "10346:76:8",
																	"nodeType": "YulIdentifier",
																	"src": "10346:76:8"
																},
																"nativeSrc": "10346:89:8",
																"nodeType": "YulFunctionCall",
																"src": "10346:89:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10339:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10339:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10483:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "10483:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10490:4:8",
																				"nodeType": "YulLiteral",
																				"src": "10490:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10479:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10479:3:8"
																		},
																		"nativeSrc": "10479:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10479:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10497:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10497:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10502:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10502:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "10444:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "10444:34:8"
																},
																"nativeSrc": "10444:65:8",
																"nodeType": "YulFunctionCall",
																"src": "10444:65:8"
															},
															"nativeSrc": "10444:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "10444:65:8"
														},
														{
															"nativeSrc": "10518:23:8",
															"nodeType": "YulAssignment",
															"src": "10518:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10529:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10529:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10534:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10534:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10525:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10525:3:8"
																},
																"nativeSrc": "10525:16:8",
																"nodeType": "YulFunctionCall",
																"src": "10525:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10518:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10518:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10157:390:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10248:5:8",
														"nodeType": "YulTypedName",
														"src": "10248:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10255:3:8",
														"nodeType": "YulTypedName",
														"src": "10255:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10263:3:8",
														"nodeType": "YulTypedName",
														"src": "10263:3:8",
														"type": ""
													}
												],
												"src": "10157:390:8"
											},
											{
												"body": {
													"nativeSrc": "10689:139:8",
													"nodeType": "YulBlock",
													"src": "10689:139:8",
													"statements": [
														{
															"nativeSrc": "10700:102:8",
															"nodeType": "YulAssignment",
															"src": "10700:102:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10789:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10789:6:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10798:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10798:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "10707:81:8",
																	"nodeType": "YulIdentifier",
																	"src": "10707:81:8"
																},
																"nativeSrc": "10707:95:8",
																"nodeType": "YulFunctionCall",
																"src": "10707:95:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10700:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10700:3:8"
																}
															]
														},
														{
															"nativeSrc": "10812:10:8",
															"nodeType": "YulAssignment",
															"src": "10812:10:8",
															"value": {
																"name": "pos",
																"nativeSrc": "10819:3:8",
																"nodeType": "YulIdentifier",
																"src": "10819:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10812:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10812:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10553:275:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10668:3:8",
														"nodeType": "YulTypedName",
														"src": "10668:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10674:6:8",
														"nodeType": "YulTypedName",
														"src": "10674:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10685:3:8",
														"nodeType": "YulTypedName",
														"src": "10685:3:8",
														"type": ""
													}
												],
												"src": "10553:275:8"
											},
											{
												"body": {
													"nativeSrc": "10940:58:8",
													"nodeType": "YulBlock",
													"src": "10940:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10962:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10962:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10970:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10970:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10958:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10958:3:8"
																		},
																		"nativeSrc": "10958:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10958:14:8"
																	},
																	{
																		"hexValue": "4e6f207374616b6520666f756e64",
																		"kind": "string",
																		"nativeSrc": "10974:16:8",
																		"nodeType": "YulLiteral",
																		"src": "10974:16:8",
																		"type": "",
																		"value": "No stake found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10951:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10951:6:8"
																},
																"nativeSrc": "10951:40:8",
																"nodeType": "YulFunctionCall",
																"src": "10951:40:8"
															},
															"nativeSrc": "10951:40:8",
															"nodeType": "YulExpressionStatement",
															"src": "10951:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
												"nativeSrc": "10834:164:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10932:6:8",
														"nodeType": "YulTypedName",
														"src": "10932:6:8",
														"type": ""
													}
												],
												"src": "10834:164:8"
											},
											{
												"body": {
													"nativeSrc": "11150:220:8",
													"nodeType": "YulBlock",
													"src": "11150:220:8",
													"statements": [
														{
															"nativeSrc": "11160:74:8",
															"nodeType": "YulAssignment",
															"src": "11160:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11226:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11226:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11231:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11231:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11167:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "11167:58:8"
																},
																"nativeSrc": "11167:67:8",
																"nodeType": "YulFunctionCall",
																"src": "11167:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11160:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11160:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11332:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11332:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																	"nativeSrc": "11243:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "11243:88:8"
																},
																"nativeSrc": "11243:93:8",
																"nodeType": "YulFunctionCall",
																"src": "11243:93:8"
															},
															"nativeSrc": "11243:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "11243:93:8"
														},
														{
															"nativeSrc": "11345:19:8",
															"nodeType": "YulAssignment",
															"src": "11345:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11356:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11356:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11361:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11361:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11352:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11352:3:8"
																},
																"nativeSrc": "11352:12:8",
																"nodeType": "YulFunctionCall",
																"src": "11352:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11345:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11345:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11004:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11138:3:8",
														"nodeType": "YulTypedName",
														"src": "11138:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11146:3:8",
														"nodeType": "YulTypedName",
														"src": "11146:3:8",
														"type": ""
													}
												],
												"src": "11004:366:8"
											},
											{
												"body": {
													"nativeSrc": "11547:248:8",
													"nodeType": "YulBlock",
													"src": "11547:248:8",
													"statements": [
														{
															"nativeSrc": "11557:26:8",
															"nodeType": "YulAssignment",
															"src": "11557:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11569:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11569:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11580:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11580:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11565:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11565:3:8"
																},
																"nativeSrc": "11565:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11565:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11557:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11557:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11604:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11604:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11615:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11615:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11600:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11600:3:8"
																		},
																		"nativeSrc": "11600:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11600:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11623:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11623:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11629:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11629:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11619:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11619:3:8"
																		},
																		"nativeSrc": "11619:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11619:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11593:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11593:6:8"
																},
																"nativeSrc": "11593:47:8",
																"nodeType": "YulFunctionCall",
																"src": "11593:47:8"
															},
															"nativeSrc": "11593:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "11593:47:8"
														},
														{
															"nativeSrc": "11649:139:8",
															"nodeType": "YulAssignment",
															"src": "11649:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11783:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11783:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11657:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "11657:124:8"
																},
																"nativeSrc": "11657:131:8",
																"nodeType": "YulFunctionCall",
																"src": "11657:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11649:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11649:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11376:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11527:9:8",
														"nodeType": "YulTypedName",
														"src": "11527:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11542:4:8",
														"nodeType": "YulTypedName",
														"src": "11542:4:8",
														"type": ""
													}
												],
												"src": "11376:419:8"
											},
											{
												"body": {
													"nativeSrc": "11907:60:8",
													"nodeType": "YulBlock",
													"src": "11907:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11929:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "11929:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11937:1:8",
																				"nodeType": "YulLiteral",
																				"src": "11937:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11925:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11925:3:8"
																		},
																		"nativeSrc": "11925:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11925:14:8"
																	},
																	{
																		"hexValue": "506f7374204944206d69736d61746368",
																		"kind": "string",
																		"nativeSrc": "11941:18:8",
																		"nodeType": "YulLiteral",
																		"src": "11941:18:8",
																		"type": "",
																		"value": "Post ID mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11918:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11918:6:8"
																},
																"nativeSrc": "11918:42:8",
																"nodeType": "YulFunctionCall",
																"src": "11918:42:8"
															},
															"nativeSrc": "11918:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "11918:42:8"
														}
													]
												},
												"name": "store_literal_in_memory_205c9abf3277d6f6ea53f405a0c4521e2370e038cb4c792c2a133737d9f8b562",
												"nativeSrc": "11801:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11899:6:8",
														"nodeType": "YulTypedName",
														"src": "11899:6:8",
														"type": ""
													}
												],
												"src": "11801:166:8"
											},
											{
												"body": {
													"nativeSrc": "12119:220:8",
													"nodeType": "YulBlock",
													"src": "12119:220:8",
													"statements": [
														{
															"nativeSrc": "12129:74:8",
															"nodeType": "YulAssignment",
															"src": "12129:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12195:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12195:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12200:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12200:2:8",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12136:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "12136:58:8"
																},
																"nativeSrc": "12136:67:8",
																"nodeType": "YulFunctionCall",
																"src": "12136:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12129:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12129:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12301:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12301:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_205c9abf3277d6f6ea53f405a0c4521e2370e038cb4c792c2a133737d9f8b562",
																	"nativeSrc": "12212:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "12212:88:8"
																},
																"nativeSrc": "12212:93:8",
																"nodeType": "YulFunctionCall",
																"src": "12212:93:8"
															},
															"nativeSrc": "12212:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "12212:93:8"
														},
														{
															"nativeSrc": "12314:19:8",
															"nodeType": "YulAssignment",
															"src": "12314:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12325:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12325:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12330:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12330:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12321:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12321:3:8"
																},
																"nativeSrc": "12321:12:8",
																"nodeType": "YulFunctionCall",
																"src": "12321:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12314:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12314:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_205c9abf3277d6f6ea53f405a0c4521e2370e038cb4c792c2a133737d9f8b562_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11973:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12107:3:8",
														"nodeType": "YulTypedName",
														"src": "12107:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12115:3:8",
														"nodeType": "YulTypedName",
														"src": "12115:3:8",
														"type": ""
													}
												],
												"src": "11973:366:8"
											},
											{
												"body": {
													"nativeSrc": "12516:248:8",
													"nodeType": "YulBlock",
													"src": "12516:248:8",
													"statements": [
														{
															"nativeSrc": "12526:26:8",
															"nodeType": "YulAssignment",
															"src": "12526:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12538:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12538:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12549:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12549:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12534:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12534:3:8"
																},
																"nativeSrc": "12534:18:8",
																"nodeType": "YulFunctionCall",
																"src": "12534:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12526:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12526:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12573:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12573:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12584:1:8",
																				"nodeType": "YulLiteral",
																				"src": "12584:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12569:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12569:3:8"
																		},
																		"nativeSrc": "12569:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12569:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12592:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "12592:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12598:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12598:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12588:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12588:3:8"
																		},
																		"nativeSrc": "12588:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12588:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12562:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12562:6:8"
																},
																"nativeSrc": "12562:47:8",
																"nodeType": "YulFunctionCall",
																"src": "12562:47:8"
															},
															"nativeSrc": "12562:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "12562:47:8"
														},
														{
															"nativeSrc": "12618:139:8",
															"nodeType": "YulAssignment",
															"src": "12618:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12752:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12752:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_205c9abf3277d6f6ea53f405a0c4521e2370e038cb4c792c2a133737d9f8b562_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12626:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "12626:124:8"
																},
																"nativeSrc": "12626:131:8",
																"nodeType": "YulFunctionCall",
																"src": "12626:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12618:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12618:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_205c9abf3277d6f6ea53f405a0c4521e2370e038cb4c792c2a133737d9f8b562__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12345:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12496:9:8",
														"nodeType": "YulTypedName",
														"src": "12496:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12511:4:8",
														"nodeType": "YulTypedName",
														"src": "12511:4:8",
														"type": ""
													}
												],
												"src": "12345:419:8"
											},
											{
												"body": {
													"nativeSrc": "12798:152:8",
													"nodeType": "YulBlock",
													"src": "12798:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12815:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12815:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12818:77:8",
																		"nodeType": "YulLiteral",
																		"src": "12818:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12808:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12808:6:8"
																},
																"nativeSrc": "12808:88:8",
																"nodeType": "YulFunctionCall",
																"src": "12808:88:8"
															},
															"nativeSrc": "12808:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "12808:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12912:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12912:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12915:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12915:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12905:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12905:6:8"
																},
																"nativeSrc": "12905:15:8",
																"nodeType": "YulFunctionCall",
																"src": "12905:15:8"
															},
															"nativeSrc": "12905:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "12905:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12936:1:8",
																		"nodeType": "YulLiteral",
																		"src": "12936:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12939:4:8",
																		"nodeType": "YulLiteral",
																		"src": "12939:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12929:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12929:6:8"
																},
																"nativeSrc": "12929:15:8",
																"nodeType": "YulFunctionCall",
																"src": "12929:15:8"
															},
															"nativeSrc": "12929:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "12929:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12770:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "12770:180:8"
											},
											{
												"body": {
													"nativeSrc": "13004:362:8",
													"nodeType": "YulBlock",
													"src": "13004:362:8",
													"statements": [
														{
															"nativeSrc": "13014:25:8",
															"nodeType": "YulAssignment",
															"src": "13014:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13037:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13037:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13019:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13019:17:8"
																},
																"nativeSrc": "13019:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13019:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13014:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13014:1:8"
																}
															]
														},
														{
															"nativeSrc": "13048:25:8",
															"nodeType": "YulAssignment",
															"src": "13048:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13071:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13071:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13053:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13053:17:8"
																},
																"nativeSrc": "13053:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13053:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13048:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13048:1:8"
																}
															]
														},
														{
															"nativeSrc": "13082:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "13082:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13105:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13105:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13108:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13108:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "13101:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13101:3:8"
																},
																"nativeSrc": "13101:9:8",
																"nodeType": "YulFunctionCall",
																"src": "13101:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "13086:11:8",
																	"nodeType": "YulTypedName",
																	"src": "13086:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13119:41:8",
															"nodeType": "YulAssignment",
															"src": "13119:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "13148:11:8",
																		"nodeType": "YulIdentifier",
																		"src": "13148:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13130:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13130:17:8"
																},
																"nativeSrc": "13130:30:8",
																"nodeType": "YulFunctionCall",
																"src": "13130:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "13119:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "13119:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13337:22:8",
																"nodeType": "YulBlock",
																"src": "13337:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13339:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "13339:16:8"
																			},
																			"nativeSrc": "13339:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13339:18:8"
																		},
																		"nativeSrc": "13339:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "13339:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "13270:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "13270:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13263:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "13263:6:8"
																				},
																				"nativeSrc": "13263:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "13263:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "13293:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "13293:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "13300:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "13300:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "13309:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "13309:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "13296:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "13296:3:8"
																						},
																						"nativeSrc": "13296:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "13296:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "13290:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "13290:2:8"
																				},
																				"nativeSrc": "13290:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "13290:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "13243:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "13243:2:8"
																		},
																		"nativeSrc": "13243:83:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13243:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13223:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13223:6:8"
																},
																"nativeSrc": "13223:113:8",
																"nodeType": "YulFunctionCall",
																"src": "13223:113:8"
															},
															"nativeSrc": "13220:139:8",
															"nodeType": "YulIf",
															"src": "13220:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12956:410:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12987:1:8",
														"nodeType": "YulTypedName",
														"src": "12987:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12990:1:8",
														"nodeType": "YulTypedName",
														"src": "12990:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12996:7:8",
														"nodeType": "YulTypedName",
														"src": "12996:7:8",
														"type": ""
													}
												],
												"src": "12956:410:8"
											},
											{
												"body": {
													"nativeSrc": "13400:152:8",
													"nodeType": "YulBlock",
													"src": "13400:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13417:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13420:77:8",
																		"nodeType": "YulLiteral",
																		"src": "13420:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13410:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13410:6:8"
																},
																"nativeSrc": "13410:88:8",
																"nodeType": "YulFunctionCall",
																"src": "13410:88:8"
															},
															"nativeSrc": "13410:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "13410:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13514:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13514:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13517:4:8",
																		"nodeType": "YulLiteral",
																		"src": "13517:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13507:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13507:6:8"
																},
																"nativeSrc": "13507:15:8",
																"nodeType": "YulFunctionCall",
																"src": "13507:15:8"
															},
															"nativeSrc": "13507:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "13507:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13538:1:8",
																		"nodeType": "YulLiteral",
																		"src": "13538:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13541:4:8",
																		"nodeType": "YulLiteral",
																		"src": "13541:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13531:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13531:6:8"
																},
																"nativeSrc": "13531:15:8",
																"nodeType": "YulFunctionCall",
																"src": "13531:15:8"
															},
															"nativeSrc": "13531:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "13531:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "13372:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "13372:180:8"
											},
											{
												"body": {
													"nativeSrc": "13600:143:8",
													"nodeType": "YulBlock",
													"src": "13600:143:8",
													"statements": [
														{
															"nativeSrc": "13610:25:8",
															"nodeType": "YulAssignment",
															"src": "13610:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13633:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13633:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13615:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13615:17:8"
																},
																"nativeSrc": "13615:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13615:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13610:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13610:1:8"
																}
															]
														},
														{
															"nativeSrc": "13644:25:8",
															"nodeType": "YulAssignment",
															"src": "13644:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13667:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13667:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13649:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13649:17:8"
																},
																"nativeSrc": "13649:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13649:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13644:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13644:1:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13691:22:8",
																"nodeType": "YulBlock",
																"src": "13691:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "13693:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "13693:16:8"
																			},
																			"nativeSrc": "13693:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13693:18:8"
																		},
																		"nativeSrc": "13693:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "13693:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13688:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13688:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13681:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13681:6:8"
																},
																"nativeSrc": "13681:9:8",
																"nodeType": "YulFunctionCall",
																"src": "13681:9:8"
															},
															"nativeSrc": "13678:35:8",
															"nodeType": "YulIf",
															"src": "13678:35:8"
														},
														{
															"nativeSrc": "13723:14:8",
															"nodeType": "YulAssignment",
															"src": "13723:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13732:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13732:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13735:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13735:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13728:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13728:3:8"
																},
																"nativeSrc": "13728:9:8",
																"nodeType": "YulFunctionCall",
																"src": "13728:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "13723:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13723:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "13558:185:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13589:1:8",
														"nodeType": "YulTypedName",
														"src": "13589:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13592:1:8",
														"nodeType": "YulTypedName",
														"src": "13592:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13598:1:8",
														"nodeType": "YulTypedName",
														"src": "13598:1:8",
														"type": ""
													}
												],
												"src": "13558:185:8"
											},
											{
												"body": {
													"nativeSrc": "13793:147:8",
													"nodeType": "YulBlock",
													"src": "13793:147:8",
													"statements": [
														{
															"nativeSrc": "13803:25:8",
															"nodeType": "YulAssignment",
															"src": "13803:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13826:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13826:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13808:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13808:17:8"
																},
																"nativeSrc": "13808:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13808:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13803:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13803:1:8"
																}
															]
														},
														{
															"nativeSrc": "13837:25:8",
															"nodeType": "YulAssignment",
															"src": "13837:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13860:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13860:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13842:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "13842:17:8"
																},
																"nativeSrc": "13842:20:8",
																"nodeType": "YulFunctionCall",
																"src": "13842:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13837:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "13837:1:8"
																}
															]
														},
														{
															"nativeSrc": "13871:16:8",
															"nodeType": "YulAssignment",
															"src": "13871:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13882:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13882:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13885:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13885:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13878:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13878:3:8"
																},
																"nativeSrc": "13878:9:8",
																"nodeType": "YulFunctionCall",
																"src": "13878:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13871:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13871:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13911:22:8",
																"nodeType": "YulBlock",
																"src": "13911:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13913:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "13913:16:8"
																			},
																			"nativeSrc": "13913:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13913:18:8"
																		},
																		"nativeSrc": "13913:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "13913:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13903:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "13903:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13906:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13906:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13900:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "13900:2:8"
																},
																"nativeSrc": "13900:10:8",
																"nodeType": "YulFunctionCall",
																"src": "13900:10:8"
															},
															"nativeSrc": "13897:36:8",
															"nodeType": "YulIf",
															"src": "13897:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13749:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13780:1:8",
														"nodeType": "YulTypedName",
														"src": "13780:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13783:1:8",
														"nodeType": "YulTypedName",
														"src": "13783:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13789:3:8",
														"nodeType": "YulTypedName",
														"src": "13789:3:8",
														"type": ""
													}
												],
												"src": "13749:191:8"
											},
											{
												"body": {
													"nativeSrc": "14072:206:8",
													"nodeType": "YulBlock",
													"src": "14072:206:8",
													"statements": [
														{
															"nativeSrc": "14082:26:8",
															"nodeType": "YulAssignment",
															"src": "14082:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14094:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14094:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14105:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14105:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14090:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14090:3:8"
																},
																"nativeSrc": "14090:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14090:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14082:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14082:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14162:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14162:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14175:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14175:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14186:1:8",
																				"nodeType": "YulLiteral",
																				"src": "14186:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14171:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14171:3:8"
																		},
																		"nativeSrc": "14171:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14171:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14118:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14118:43:8"
																},
																"nativeSrc": "14118:71:8",
																"nodeType": "YulFunctionCall",
																"src": "14118:71:8"
															},
															"nativeSrc": "14118:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "14118:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14243:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14243:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14256:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14256:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14267:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14267:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14252:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14252:3:8"
																		},
																		"nativeSrc": "14252:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14252:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14199:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "14199:43:8"
																},
																"nativeSrc": "14199:72:8",
																"nodeType": "YulFunctionCall",
																"src": "14199:72:8"
															},
															"nativeSrc": "14199:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "14199:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13946:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14036:9:8",
														"nodeType": "YulTypedName",
														"src": "14036:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14048:6:8",
														"nodeType": "YulTypedName",
														"src": "14048:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14056:6:8",
														"nodeType": "YulTypedName",
														"src": "14056:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14067:4:8",
														"nodeType": "YulTypedName",
														"src": "14067:4:8",
														"type": ""
													}
												],
												"src": "13946:332:8"
											},
											{
												"body": {
													"nativeSrc": "14344:77:8",
													"nodeType": "YulBlock",
													"src": "14344:77:8",
													"statements": [
														{
															"nativeSrc": "14354:22:8",
															"nodeType": "YulAssignment",
															"src": "14354:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14369:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14369:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14363:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "14363:5:8"
																},
																"nativeSrc": "14363:13:8",
																"nodeType": "YulFunctionCall",
																"src": "14363:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14354:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "14354:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14409:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "14409:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "14385:23:8",
																	"nodeType": "YulIdentifier",
																	"src": "14385:23:8"
																},
																"nativeSrc": "14385:30:8",
																"nodeType": "YulFunctionCall",
																"src": "14385:30:8"
															},
															"nativeSrc": "14385:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "14385:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "14284:137:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14322:6:8",
														"nodeType": "YulTypedName",
														"src": "14322:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14330:3:8",
														"nodeType": "YulTypedName",
														"src": "14330:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14338:5:8",
														"nodeType": "YulTypedName",
														"src": "14338:5:8",
														"type": ""
													}
												],
												"src": "14284:137:8"
											},
											{
												"body": {
													"nativeSrc": "14501:271:8",
													"nodeType": "YulBlock",
													"src": "14501:271:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "14547:83:8",
																"nodeType": "YulBlock",
																"src": "14547:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14549:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "14549:77:8"
																			},
																			"nativeSrc": "14549:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14549:79:8"
																		},
																		"nativeSrc": "14549:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "14549:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14522:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "14522:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14531:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14531:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14518:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14518:3:8"
																		},
																		"nativeSrc": "14518:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14518:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14543:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14543:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14514:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14514:3:8"
																},
																"nativeSrc": "14514:32:8",
																"nodeType": "YulFunctionCall",
																"src": "14514:32:8"
															},
															"nativeSrc": "14511:119:8",
															"nodeType": "YulIf",
															"src": "14511:119:8"
														},
														{
															"nativeSrc": "14640:125:8",
															"nodeType": "YulBlock",
															"src": "14640:125:8",
															"statements": [
																{
																	"nativeSrc": "14655:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14655:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14669:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14669:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14659:6:8",
																			"nodeType": "YulTypedName",
																			"src": "14659:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14684:71:8",
																	"nodeType": "YulAssignment",
																	"src": "14684:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14727:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "14727:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14738:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "14738:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14723:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "14723:3:8"
																				},
																				"nativeSrc": "14723:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14723:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14747:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "14747:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "14694:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "14694:28:8"
																		},
																		"nativeSrc": "14694:61:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14694:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14684:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "14684:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "14427:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14471:9:8",
														"nodeType": "YulTypedName",
														"src": "14471:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14482:7:8",
														"nodeType": "YulTypedName",
														"src": "14482:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14494:6:8",
														"nodeType": "YulTypedName",
														"src": "14494:6:8",
														"type": ""
													}
												],
												"src": "14427:345:8"
											},
											{
												"body": {
													"nativeSrc": "14823:149:8",
													"nodeType": "YulBlock",
													"src": "14823:149:8",
													"statements": [
														{
															"nativeSrc": "14833:25:8",
															"nodeType": "YulAssignment",
															"src": "14833:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14856:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14856:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14838:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14838:17:8"
																},
																"nativeSrc": "14838:20:8",
																"nodeType": "YulFunctionCall",
																"src": "14838:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14833:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "14833:1:8"
																}
															]
														},
														{
															"nativeSrc": "14867:25:8",
															"nodeType": "YulAssignment",
															"src": "14867:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14890:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14890:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14872:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "14872:17:8"
																},
																"nativeSrc": "14872:20:8",
																"nodeType": "YulFunctionCall",
																"src": "14872:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14867:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "14867:1:8"
																}
															]
														},
														{
															"nativeSrc": "14901:17:8",
															"nodeType": "YulAssignment",
															"src": "14901:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14913:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14913:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14916:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14916:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14909:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14909:3:8"
																},
																"nativeSrc": "14909:9:8",
																"nodeType": "YulFunctionCall",
																"src": "14909:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14901:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14901:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14943:22:8",
																"nodeType": "YulBlock",
																"src": "14943:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14945:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "14945:16:8"
																			},
																			"nativeSrc": "14945:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14945:18:8"
																		},
																		"nativeSrc": "14945:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "14945:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14934:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14934:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14940:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "14940:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14931:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "14931:2:8"
																},
																"nativeSrc": "14931:11:8",
																"nodeType": "YulFunctionCall",
																"src": "14931:11:8"
															},
															"nativeSrc": "14928:37:8",
															"nodeType": "YulIf",
															"src": "14928:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14778:194:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14809:1:8",
														"nodeType": "YulTypedName",
														"src": "14809:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14812:1:8",
														"nodeType": "YulTypedName",
														"src": "14812:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14818:4:8",
														"nodeType": "YulTypedName",
														"src": "14818:4:8",
														"type": ""
													}
												],
												"src": "14778:194:8"
											},
											{
												"body": {
													"nativeSrc": "15006:152:8",
													"nodeType": "YulBlock",
													"src": "15006:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15023:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15023:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15026:77:8",
																		"nodeType": "YulLiteral",
																		"src": "15026:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15016:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15016:6:8"
																},
																"nativeSrc": "15016:88:8",
																"nodeType": "YulFunctionCall",
																"src": "15016:88:8"
															},
															"nativeSrc": "15016:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "15016:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15120:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15120:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15123:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15123:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15113:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15113:6:8"
																},
																"nativeSrc": "15113:15:8",
																"nodeType": "YulFunctionCall",
																"src": "15113:15:8"
															},
															"nativeSrc": "15113:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "15113:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15144:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15144:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15147:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15147:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15137:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15137:6:8"
																},
																"nativeSrc": "15137:15:8",
																"nodeType": "YulFunctionCall",
																"src": "15137:15:8"
															},
															"nativeSrc": "15137:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "15137:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "14978:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "14978:180:8"
											},
											{
												"body": {
													"nativeSrc": "15262:124:8",
													"nodeType": "YulBlock",
													"src": "15262:124:8",
													"statements": [
														{
															"nativeSrc": "15272:26:8",
															"nodeType": "YulAssignment",
															"src": "15272:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15284:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "15284:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15295:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15295:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15280:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15280:3:8"
																},
																"nativeSrc": "15280:18:8",
																"nodeType": "YulFunctionCall",
																"src": "15280:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15272:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15272:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15352:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "15352:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15365:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15365:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15376:1:8",
																				"nodeType": "YulLiteral",
																				"src": "15376:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15361:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15361:3:8"
																		},
																		"nativeSrc": "15361:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15361:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15308:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "15308:43:8"
																},
																"nativeSrc": "15308:71:8",
																"nodeType": "YulFunctionCall",
																"src": "15308:71:8"
															},
															"nativeSrc": "15308:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "15308:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "15164:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15234:9:8",
														"nodeType": "YulTypedName",
														"src": "15234:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15246:6:8",
														"nodeType": "YulTypedName",
														"src": "15246:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15257:4:8",
														"nodeType": "YulTypedName",
														"src": "15257:4:8",
														"type": ""
													}
												],
												"src": "15164:222:8"
											},
											{
												"body": {
													"nativeSrc": "15445:32:8",
													"nodeType": "YulBlock",
													"src": "15445:32:8",
													"statements": [
														{
															"nativeSrc": "15455:16:8",
															"nodeType": "YulAssignment",
															"src": "15455:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "15466:5:8",
																"nodeType": "YulIdentifier",
																"src": "15466:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15455:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "15455:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "15392:85:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15427:5:8",
														"nodeType": "YulTypedName",
														"src": "15427:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15437:7:8",
														"nodeType": "YulTypedName",
														"src": "15437:7:8",
														"type": ""
													}
												],
												"src": "15392:85:8"
											},
											{
												"body": {
													"nativeSrc": "15551:90:8",
													"nodeType": "YulBlock",
													"src": "15551:90:8",
													"statements": [
														{
															"nativeSrc": "15561:74:8",
															"nodeType": "YulAssignment",
															"src": "15561:74:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15627:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "15627:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "15601:25:8",
																					"nodeType": "YulIdentifier",
																					"src": "15601:25:8"
																				},
																				"nativeSrc": "15601:32:8",
																				"nodeType": "YulFunctionCall",
																				"src": "15601:32:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "15592:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "15592:8:8"
																		},
																		"nativeSrc": "15592:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15592:42:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15574:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "15574:17:8"
																},
																"nativeSrc": "15574:61:8",
																"nodeType": "YulFunctionCall",
																"src": "15574:61:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "15561:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "15561:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "15483:158:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15531:5:8",
														"nodeType": "YulTypedName",
														"src": "15531:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "15541:9:8",
														"nodeType": "YulTypedName",
														"src": "15541:9:8",
														"type": ""
													}
												],
												"src": "15483:158:8"
											},
											{
												"body": {
													"nativeSrc": "15720:74:8",
													"nodeType": "YulBlock",
													"src": "15720:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15737:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "15737:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15781:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "15781:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "15742:38:8",
																			"nodeType": "YulIdentifier",
																			"src": "15742:38:8"
																		},
																		"nativeSrc": "15742:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15742:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15730:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15730:6:8"
																},
																"nativeSrc": "15730:58:8",
																"nodeType": "YulFunctionCall",
																"src": "15730:58:8"
															},
															"nativeSrc": "15730:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "15730:58:8"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "15647:147:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15708:5:8",
														"nodeType": "YulTypedName",
														"src": "15708:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15715:3:8",
														"nodeType": "YulTypedName",
														"src": "15715:3:8",
														"type": ""
													}
												],
												"src": "15647:147:8"
											},
											{
												"body": {
													"nativeSrc": "15934:214:8",
													"nodeType": "YulBlock",
													"src": "15934:214:8",
													"statements": [
														{
															"nativeSrc": "15944:26:8",
															"nodeType": "YulAssignment",
															"src": "15944:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15956:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "15956:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15967:2:8",
																		"nodeType": "YulLiteral",
																		"src": "15967:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15952:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15952:3:8"
																},
																"nativeSrc": "15952:18:8",
																"nodeType": "YulFunctionCall",
																"src": "15952:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15944:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "15944:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16024:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16024:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16037:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16037:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16048:1:8",
																				"nodeType": "YulLiteral",
																				"src": "16048:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16033:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16033:3:8"
																		},
																		"nativeSrc": "16033:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16033:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15980:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "15980:43:8"
																},
																"nativeSrc": "15980:71:8",
																"nodeType": "YulFunctionCall",
																"src": "15980:71:8"
															},
															"nativeSrc": "15980:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "15980:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16113:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16113:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16126:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16126:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16137:2:8",
																				"nodeType": "YulLiteral",
																				"src": "16137:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16122:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16122:3:8"
																		},
																		"nativeSrc": "16122:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16122:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "16061:51:8",
																	"nodeType": "YulIdentifier",
																	"src": "16061:51:8"
																},
																"nativeSrc": "16061:80:8",
																"nodeType": "YulFunctionCall",
																"src": "16061:80:8"
															},
															"nativeSrc": "16061:80:8",
															"nodeType": "YulExpressionStatement",
															"src": "16061:80:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "15800:348:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15898:9:8",
														"nodeType": "YulTypedName",
														"src": "15898:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15910:6:8",
														"nodeType": "YulTypedName",
														"src": "15910:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15918:6:8",
														"nodeType": "YulTypedName",
														"src": "15918:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15929:4:8",
														"nodeType": "YulTypedName",
														"src": "15929:4:8",
														"type": ""
													}
												],
												"src": "15800:348:8"
											},
											{
												"body": {
													"nativeSrc": "16280:206:8",
													"nodeType": "YulBlock",
													"src": "16280:206:8",
													"statements": [
														{
															"nativeSrc": "16290:26:8",
															"nodeType": "YulAssignment",
															"src": "16290:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16302:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "16302:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16313:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16313:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16298:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16298:3:8"
																},
																"nativeSrc": "16298:18:8",
																"nodeType": "YulFunctionCall",
																"src": "16298:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16290:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "16290:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16370:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16370:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16383:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16383:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16394:1:8",
																				"nodeType": "YulLiteral",
																				"src": "16394:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16379:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16379:3:8"
																		},
																		"nativeSrc": "16379:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16379:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16326:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "16326:43:8"
																},
																"nativeSrc": "16326:71:8",
																"nodeType": "YulFunctionCall",
																"src": "16326:71:8"
															},
															"nativeSrc": "16326:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "16326:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16451:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16451:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16464:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16464:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16475:2:8",
																				"nodeType": "YulLiteral",
																				"src": "16475:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16460:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16460:3:8"
																		},
																		"nativeSrc": "16460:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16460:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16407:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "16407:43:8"
																},
																"nativeSrc": "16407:72:8",
																"nodeType": "YulFunctionCall",
																"src": "16407:72:8"
															},
															"nativeSrc": "16407:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "16407:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16154:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16244:9:8",
														"nodeType": "YulTypedName",
														"src": "16244:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16256:6:8",
														"nodeType": "YulTypedName",
														"src": "16256:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16264:6:8",
														"nodeType": "YulTypedName",
														"src": "16264:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16275:4:8",
														"nodeType": "YulTypedName",
														"src": "16275:4:8",
														"type": ""
													}
												],
												"src": "16154:332:8"
											},
											{
												"body": {
													"nativeSrc": "16598:58:8",
													"nodeType": "YulBlock",
													"src": "16598:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16620:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "16620:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16628:1:8",
																				"nodeType": "YulLiteral",
																				"src": "16628:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16616:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16616:3:8"
																		},
																		"nativeSrc": "16616:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16616:14:8"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b652030",
																		"kind": "string",
																		"nativeSrc": "16632:16:8",
																		"nodeType": "YulLiteral",
																		"src": "16632:16:8",
																		"type": "",
																		"value": "Cannot stake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16609:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16609:6:8"
																},
																"nativeSrc": "16609:40:8",
																"nodeType": "YulFunctionCall",
																"src": "16609:40:8"
															},
															"nativeSrc": "16609:40:8",
															"nodeType": "YulExpressionStatement",
															"src": "16609:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
												"nativeSrc": "16492:164:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16590:6:8",
														"nodeType": "YulTypedName",
														"src": "16590:6:8",
														"type": ""
													}
												],
												"src": "16492:164:8"
											},
											{
												"body": {
													"nativeSrc": "16808:220:8",
													"nodeType": "YulBlock",
													"src": "16808:220:8",
													"statements": [
														{
															"nativeSrc": "16818:74:8",
															"nodeType": "YulAssignment",
															"src": "16818:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16884:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16884:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16889:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16889:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16825:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "16825:58:8"
																},
																"nativeSrc": "16825:67:8",
																"nodeType": "YulFunctionCall",
																"src": "16825:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16818:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16818:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16990:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "16990:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																	"nativeSrc": "16901:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "16901:88:8"
																},
																"nativeSrc": "16901:93:8",
																"nodeType": "YulFunctionCall",
																"src": "16901:93:8"
															},
															"nativeSrc": "16901:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "16901:93:8"
														},
														{
															"nativeSrc": "17003:19:8",
															"nodeType": "YulAssignment",
															"src": "17003:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17014:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "17014:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17019:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17019:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17010:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17010:3:8"
																},
																"nativeSrc": "17010:12:8",
																"nodeType": "YulFunctionCall",
																"src": "17010:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17003:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17003:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16662:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16796:3:8",
														"nodeType": "YulTypedName",
														"src": "16796:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16804:3:8",
														"nodeType": "YulTypedName",
														"src": "16804:3:8",
														"type": ""
													}
												],
												"src": "16662:366:8"
											},
											{
												"body": {
													"nativeSrc": "17205:248:8",
													"nodeType": "YulBlock",
													"src": "17205:248:8",
													"statements": [
														{
															"nativeSrc": "17215:26:8",
															"nodeType": "YulAssignment",
															"src": "17215:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17227:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "17227:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17238:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17238:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17223:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17223:3:8"
																},
																"nativeSrc": "17223:18:8",
																"nodeType": "YulFunctionCall",
																"src": "17223:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17215:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17215:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17262:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17262:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17273:1:8",
																				"nodeType": "YulLiteral",
																				"src": "17273:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17258:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17258:3:8"
																		},
																		"nativeSrc": "17258:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17258:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17281:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "17281:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17287:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17287:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17277:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17277:3:8"
																		},
																		"nativeSrc": "17277:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17277:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17251:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17251:6:8"
																},
																"nativeSrc": "17251:47:8",
																"nodeType": "YulFunctionCall",
																"src": "17251:47:8"
															},
															"nativeSrc": "17251:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "17251:47:8"
														},
														{
															"nativeSrc": "17307:139:8",
															"nodeType": "YulAssignment",
															"src": "17307:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17441:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "17441:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17315:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "17315:124:8"
																},
																"nativeSrc": "17315:131:8",
																"nodeType": "YulFunctionCall",
																"src": "17315:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17307:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17307:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17034:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17185:9:8",
														"nodeType": "YulTypedName",
														"src": "17185:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17200:4:8",
														"nodeType": "YulTypedName",
														"src": "17200:4:8",
														"type": ""
													}
												],
												"src": "17034:419:8"
											},
											{
												"body": {
													"nativeSrc": "17522:80:8",
													"nodeType": "YulBlock",
													"src": "17522:80:8",
													"statements": [
														{
															"nativeSrc": "17532:22:8",
															"nodeType": "YulAssignment",
															"src": "17532:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17547:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "17547:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17541:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "17541:5:8"
																},
																"nativeSrc": "17541:13:8",
																"nodeType": "YulFunctionCall",
																"src": "17541:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17532:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "17532:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17590:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "17590:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "17563:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "17563:26:8"
																},
																"nativeSrc": "17563:33:8",
																"nodeType": "YulFunctionCall",
																"src": "17563:33:8"
															},
															"nativeSrc": "17563:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "17563:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "17459:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17500:6:8",
														"nodeType": "YulTypedName",
														"src": "17500:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17508:3:8",
														"nodeType": "YulTypedName",
														"src": "17508:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17516:5:8",
														"nodeType": "YulTypedName",
														"src": "17516:5:8",
														"type": ""
													}
												],
												"src": "17459:143:8"
											},
											{
												"body": {
													"nativeSrc": "17685:274:8",
													"nodeType": "YulBlock",
													"src": "17685:274:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "17731:83:8",
																"nodeType": "YulBlock",
																"src": "17731:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17733:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "17733:77:8"
																			},
																			"nativeSrc": "17733:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "17733:79:8"
																		},
																		"nativeSrc": "17733:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "17733:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17706:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "17706:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17715:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17715:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17702:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17702:3:8"
																		},
																		"nativeSrc": "17702:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17702:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17727:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17727:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17698:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17698:3:8"
																},
																"nativeSrc": "17698:32:8",
																"nodeType": "YulFunctionCall",
																"src": "17698:32:8"
															},
															"nativeSrc": "17695:119:8",
															"nodeType": "YulIf",
															"src": "17695:119:8"
														},
														{
															"nativeSrc": "17824:128:8",
															"nodeType": "YulBlock",
															"src": "17824:128:8",
															"statements": [
																{
																	"nativeSrc": "17839:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17839:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17853:1:8",
																		"nodeType": "YulLiteral",
																		"src": "17853:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17843:6:8",
																			"nodeType": "YulTypedName",
																			"src": "17843:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17868:74:8",
																	"nodeType": "YulAssignment",
																	"src": "17868:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17914:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "17914:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17925:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "17925:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17910:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "17910:3:8"
																				},
																				"nativeSrc": "17910:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "17910:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17934:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "17934:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "17878:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "17878:31:8"
																		},
																		"nativeSrc": "17878:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17878:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17868:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "17868:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "17608:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17655:9:8",
														"nodeType": "YulTypedName",
														"src": "17655:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17666:7:8",
														"nodeType": "YulTypedName",
														"src": "17666:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17678:6:8",
														"nodeType": "YulTypedName",
														"src": "17678:6:8",
														"type": ""
													}
												],
												"src": "17608:351:8"
											},
											{
												"body": {
													"nativeSrc": "18071:64:8",
													"nodeType": "YulBlock",
													"src": "18071:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18093:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "18093:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18101:1:8",
																				"nodeType": "YulLiteral",
																				"src": "18101:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18089:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18089:3:8"
																		},
																		"nativeSrc": "18089:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18089:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "18105:22:8",
																		"nodeType": "YulLiteral",
																		"src": "18105:22:8",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18082:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18082:6:8"
																},
																"nativeSrc": "18082:46:8",
																"nodeType": "YulFunctionCall",
																"src": "18082:46:8"
															},
															"nativeSrc": "18082:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "18082:46:8"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "17965:170:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18063:6:8",
														"nodeType": "YulTypedName",
														"src": "18063:6:8",
														"type": ""
													}
												],
												"src": "17965:170:8"
											},
											{
												"body": {
													"nativeSrc": "18287:220:8",
													"nodeType": "YulBlock",
													"src": "18287:220:8",
													"statements": [
														{
															"nativeSrc": "18297:74:8",
															"nodeType": "YulAssignment",
															"src": "18297:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18363:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18363:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18368:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18368:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18304:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "18304:58:8"
																},
																"nativeSrc": "18304:67:8",
																"nodeType": "YulFunctionCall",
																"src": "18304:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18297:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18297:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18469:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18469:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "18380:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "18380:88:8"
																},
																"nativeSrc": "18380:93:8",
																"nodeType": "YulFunctionCall",
																"src": "18380:93:8"
															},
															"nativeSrc": "18380:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "18380:93:8"
														},
														{
															"nativeSrc": "18482:19:8",
															"nodeType": "YulAssignment",
															"src": "18482:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18493:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "18493:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18498:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18498:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18489:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18489:3:8"
																},
																"nativeSrc": "18489:12:8",
																"nodeType": "YulFunctionCall",
																"src": "18489:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18482:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18482:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18141:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18275:3:8",
														"nodeType": "YulTypedName",
														"src": "18275:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18283:3:8",
														"nodeType": "YulTypedName",
														"src": "18283:3:8",
														"type": ""
													}
												],
												"src": "18141:366:8"
											},
											{
												"body": {
													"nativeSrc": "18684:248:8",
													"nodeType": "YulBlock",
													"src": "18684:248:8",
													"statements": [
														{
															"nativeSrc": "18694:26:8",
															"nodeType": "YulAssignment",
															"src": "18694:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18706:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "18706:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18717:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18717:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18702:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18702:3:8"
																},
																"nativeSrc": "18702:18:8",
																"nodeType": "YulFunctionCall",
																"src": "18702:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18694:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18694:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18741:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18741:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18752:1:8",
																				"nodeType": "YulLiteral",
																				"src": "18752:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18737:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18737:3:8"
																		},
																		"nativeSrc": "18737:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18737:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18760:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "18760:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18766:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18766:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18756:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18756:3:8"
																		},
																		"nativeSrc": "18756:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18756:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18730:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18730:6:8"
																},
																"nativeSrc": "18730:47:8",
																"nodeType": "YulFunctionCall",
																"src": "18730:47:8"
															},
															"nativeSrc": "18730:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "18730:47:8"
														},
														{
															"nativeSrc": "18786:139:8",
															"nodeType": "YulAssignment",
															"src": "18786:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18920:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "18920:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18794:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "18794:124:8"
																},
																"nativeSrc": "18794:131:8",
																"nodeType": "YulFunctionCall",
																"src": "18794:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18786:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18786:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18513:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18664:9:8",
														"nodeType": "YulTypedName",
														"src": "18664:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18679:4:8",
														"nodeType": "YulTypedName",
														"src": "18679:4:8",
														"type": ""
													}
												],
												"src": "18513:419:8"
											},
											{
												"body": {
													"nativeSrc": "19064:206:8",
													"nodeType": "YulBlock",
													"src": "19064:206:8",
													"statements": [
														{
															"nativeSrc": "19074:26:8",
															"nodeType": "YulAssignment",
															"src": "19074:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19086:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "19086:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19097:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19097:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19082:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19082:3:8"
																},
																"nativeSrc": "19082:18:8",
																"nodeType": "YulFunctionCall",
																"src": "19082:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19074:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "19074:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19154:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "19154:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19167:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19167:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19178:1:8",
																				"nodeType": "YulLiteral",
																				"src": "19178:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19163:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19163:3:8"
																		},
																		"nativeSrc": "19163:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19163:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19110:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "19110:43:8"
																},
																"nativeSrc": "19110:71:8",
																"nodeType": "YulFunctionCall",
																"src": "19110:71:8"
															},
															"nativeSrc": "19110:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "19110:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19235:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "19235:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19248:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "19248:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19259:2:8",
																				"nodeType": "YulLiteral",
																				"src": "19259:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19244:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19244:3:8"
																		},
																		"nativeSrc": "19244:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19244:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19191:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "19191:43:8"
																},
																"nativeSrc": "19191:72:8",
																"nodeType": "YulFunctionCall",
																"src": "19191:72:8"
															},
															"nativeSrc": "19191:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "19191:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "18938:332:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19028:9:8",
														"nodeType": "YulTypedName",
														"src": "19028:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19040:6:8",
														"nodeType": "YulTypedName",
														"src": "19040:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19048:6:8",
														"nodeType": "YulTypedName",
														"src": "19048:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19059:4:8",
														"nodeType": "YulTypedName",
														"src": "19059:4:8",
														"type": ""
													}
												],
												"src": "18938:332:8"
											},
											{
												"body": {
													"nativeSrc": "19382:121:8",
													"nodeType": "YulBlock",
													"src": "19382:121:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19404:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "19404:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19412:1:8",
																				"nodeType": "YulLiteral",
																				"src": "19412:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19400:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19400:3:8"
																		},
																		"nativeSrc": "19400:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19400:14:8"
																	},
																	{
																		"hexValue": "436f6e7472616374206e6f7420617070726f76656420746f207472616e736665",
																		"kind": "string",
																		"nativeSrc": "19416:34:8",
																		"nodeType": "YulLiteral",
																		"src": "19416:34:8",
																		"type": "",
																		"value": "Contract not approved to transfe"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19393:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19393:6:8"
																},
																"nativeSrc": "19393:58:8",
																"nodeType": "YulFunctionCall",
																"src": "19393:58:8"
															},
															"nativeSrc": "19393:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "19393:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19472:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "19472:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19480:2:8",
																				"nodeType": "YulLiteral",
																				"src": "19480:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19468:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19468:3:8"
																		},
																		"nativeSrc": "19468:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19468:15:8"
																	},
																	{
																		"hexValue": "7220746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "19485:10:8",
																		"nodeType": "YulLiteral",
																		"src": "19485:10:8",
																		"type": "",
																		"value": "r tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19461:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "19461:6:8"
																},
																"nativeSrc": "19461:35:8",
																"nodeType": "YulFunctionCall",
																"src": "19461:35:8"
															},
															"nativeSrc": "19461:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "19461:35:8"
														}
													]
												},
												"name": "store_literal_in_memory_98e81edf2b3f4fbb6d9b4dff4c46bf609d7be7b570e06ad4fbf58eced840fe4b",
												"nativeSrc": "19276:227:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19374:6:8",
														"nodeType": "YulTypedName",
														"src": "19374:6:8",
														"type": ""
													}
												],
												"src": "19276:227:8"
											},
											{
												"body": {
													"nativeSrc": "19655:220:8",
													"nodeType": "YulBlock",
													"src": "19655:220:8",
													"statements": [
														{
															"nativeSrc": "19665:74:8",
															"nodeType": "YulAssignment",
															"src": "19665:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19731:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19731:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19736:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19736:2:8",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19672:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "19672:58:8"
																},
																"nativeSrc": "19672:67:8",
																"nodeType": "YulFunctionCall",
																"src": "19672:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19665:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19665:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19837:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19837:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_98e81edf2b3f4fbb6d9b4dff4c46bf609d7be7b570e06ad4fbf58eced840fe4b",
																	"nativeSrc": "19748:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "19748:88:8"
																},
																"nativeSrc": "19748:93:8",
																"nodeType": "YulFunctionCall",
																"src": "19748:93:8"
															},
															"nativeSrc": "19748:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "19748:93:8"
														},
														{
															"nativeSrc": "19850:19:8",
															"nodeType": "YulAssignment",
															"src": "19850:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19861:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "19861:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19866:2:8",
																		"nodeType": "YulLiteral",
																		"src": "19866:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19857:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19857:3:8"
																},
																"nativeSrc": "19857:12:8",
																"nodeType": "YulFunctionCall",
																"src": "19857:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19850:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19850:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_98e81edf2b3f4fbb6d9b4dff4c46bf609d7be7b570e06ad4fbf58eced840fe4b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19509:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19643:3:8",
														"nodeType": "YulTypedName",
														"src": "19643:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19651:3:8",
														"nodeType": "YulTypedName",
														"src": "19651:3:8",
														"type": ""
													}
												],
												"src": "19509:366:8"
											},
											{
												"body": {
													"nativeSrc": "20052:248:8",
													"nodeType": "YulBlock",
													"src": "20052:248:8",
													"statements": [
														{
															"nativeSrc": "20062:26:8",
															"nodeType": "YulAssignment",
															"src": "20062:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20074:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "20074:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20085:2:8",
																		"nodeType": "YulLiteral",
																		"src": "20085:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20070:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20070:3:8"
																},
																"nativeSrc": "20070:18:8",
																"nodeType": "YulFunctionCall",
																"src": "20070:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20062:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "20062:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20109:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20109:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20120:1:8",
																				"nodeType": "YulLiteral",
																				"src": "20120:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20105:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20105:3:8"
																		},
																		"nativeSrc": "20105:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20105:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20128:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "20128:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20134:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20134:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20124:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20124:3:8"
																		},
																		"nativeSrc": "20124:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20124:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20098:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "20098:6:8"
																},
																"nativeSrc": "20098:47:8",
																"nodeType": "YulFunctionCall",
																"src": "20098:47:8"
															},
															"nativeSrc": "20098:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "20098:47:8"
														},
														{
															"nativeSrc": "20154:139:8",
															"nodeType": "YulAssignment",
															"src": "20154:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20288:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "20288:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_98e81edf2b3f4fbb6d9b4dff4c46bf609d7be7b570e06ad4fbf58eced840fe4b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20162:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "20162:124:8"
																},
																"nativeSrc": "20162:131:8",
																"nodeType": "YulFunctionCall",
																"src": "20162:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20154:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "20154:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_98e81edf2b3f4fbb6d9b4dff4c46bf609d7be7b570e06ad4fbf58eced840fe4b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19881:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20032:9:8",
														"nodeType": "YulTypedName",
														"src": "20032:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20047:4:8",
														"nodeType": "YulTypedName",
														"src": "20047:4:8",
														"type": ""
													}
												],
												"src": "19881:419:8"
											},
											{
												"body": {
													"nativeSrc": "20460:288:8",
													"nodeType": "YulBlock",
													"src": "20460:288:8",
													"statements": [
														{
															"nativeSrc": "20470:26:8",
															"nodeType": "YulAssignment",
															"src": "20470:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20482:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "20482:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20493:2:8",
																		"nodeType": "YulLiteral",
																		"src": "20493:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20478:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "20478:3:8"
																},
																"nativeSrc": "20478:18:8",
																"nodeType": "YulFunctionCall",
																"src": "20478:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20470:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "20470:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20550:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20550:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20563:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20563:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20574:1:8",
																				"nodeType": "YulLiteral",
																				"src": "20574:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20559:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20559:3:8"
																		},
																		"nativeSrc": "20559:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20559:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20506:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "20506:43:8"
																},
																"nativeSrc": "20506:71:8",
																"nodeType": "YulFunctionCall",
																"src": "20506:71:8"
															},
															"nativeSrc": "20506:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "20506:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20631:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20631:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20644:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20644:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20655:2:8",
																				"nodeType": "YulLiteral",
																				"src": "20655:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20640:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20640:3:8"
																		},
																		"nativeSrc": "20640:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20640:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20587:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "20587:43:8"
																},
																"nativeSrc": "20587:72:8",
																"nodeType": "YulFunctionCall",
																"src": "20587:72:8"
															},
															"nativeSrc": "20587:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "20587:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20713:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "20713:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20726:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "20726:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20737:2:8",
																				"nodeType": "YulLiteral",
																				"src": "20737:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20722:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20722:3:8"
																		},
																		"nativeSrc": "20722:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20722:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20669:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "20669:43:8"
																},
																"nativeSrc": "20669:72:8",
																"nodeType": "YulFunctionCall",
																"src": "20669:72:8"
															},
															"nativeSrc": "20669:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "20669:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "20306:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20416:9:8",
														"nodeType": "YulTypedName",
														"src": "20416:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20428:6:8",
														"nodeType": "YulTypedName",
														"src": "20428:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20436:6:8",
														"nodeType": "YulTypedName",
														"src": "20436:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20444:6:8",
														"nodeType": "YulTypedName",
														"src": "20444:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20455:4:8",
														"nodeType": "YulTypedName",
														"src": "20455:4:8",
														"type": ""
													}
												],
												"src": "20306:442:8"
											},
											{
												"body": {
													"nativeSrc": "20860:65:8",
													"nodeType": "YulBlock",
													"src": "20860:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20882:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "20882:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20890:1:8",
																				"nodeType": "YulLiteral",
																				"src": "20890:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20878:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "20878:3:8"
																		},
																		"nativeSrc": "20878:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "20878:14:8"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "20894:23:8",
																		"nodeType": "YulLiteral",
																		"src": "20894:23:8",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20871:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "20871:6:8"
																},
																"nativeSrc": "20871:47:8",
																"nodeType": "YulFunctionCall",
																"src": "20871:47:8"
															},
															"nativeSrc": "20871:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "20871:47:8"
														}
													]
												},
												"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
												"nativeSrc": "20754:171:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20852:6:8",
														"nodeType": "YulTypedName",
														"src": "20852:6:8",
														"type": ""
													}
												],
												"src": "20754:171:8"
											},
											{
												"body": {
													"nativeSrc": "21077:220:8",
													"nodeType": "YulBlock",
													"src": "21077:220:8",
													"statements": [
														{
															"nativeSrc": "21087:74:8",
															"nodeType": "YulAssignment",
															"src": "21087:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21153:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21153:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21158:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21158:2:8",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21094:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "21094:58:8"
																},
																"nativeSrc": "21094:67:8",
																"nodeType": "YulFunctionCall",
																"src": "21094:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21087:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21087:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21259:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21259:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																	"nativeSrc": "21170:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "21170:88:8"
																},
																"nativeSrc": "21170:93:8",
																"nodeType": "YulFunctionCall",
																"src": "21170:93:8"
															},
															"nativeSrc": "21170:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "21170:93:8"
														},
														{
															"nativeSrc": "21272:19:8",
															"nodeType": "YulAssignment",
															"src": "21272:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21283:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21283:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21288:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21288:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21279:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21279:3:8"
																},
																"nativeSrc": "21279:12:8",
																"nodeType": "YulFunctionCall",
																"src": "21279:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21272:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21272:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20931:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21065:3:8",
														"nodeType": "YulTypedName",
														"src": "21065:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21073:3:8",
														"nodeType": "YulTypedName",
														"src": "21073:3:8",
														"type": ""
													}
												],
												"src": "20931:366:8"
											},
											{
												"body": {
													"nativeSrc": "21474:248:8",
													"nodeType": "YulBlock",
													"src": "21474:248:8",
													"statements": [
														{
															"nativeSrc": "21484:26:8",
															"nodeType": "YulAssignment",
															"src": "21484:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21496:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "21496:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21507:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21507:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21492:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21492:3:8"
																},
																"nativeSrc": "21492:18:8",
																"nodeType": "YulFunctionCall",
																"src": "21492:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21484:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "21484:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21531:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "21531:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21542:1:8",
																				"nodeType": "YulLiteral",
																				"src": "21542:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21527:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "21527:3:8"
																		},
																		"nativeSrc": "21527:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21527:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21550:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "21550:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21556:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "21556:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21546:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "21546:3:8"
																		},
																		"nativeSrc": "21546:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21546:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21520:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "21520:6:8"
																},
																"nativeSrc": "21520:47:8",
																"nodeType": "YulFunctionCall",
																"src": "21520:47:8"
															},
															"nativeSrc": "21520:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "21520:47:8"
														},
														{
															"nativeSrc": "21576:139:8",
															"nodeType": "YulAssignment",
															"src": "21576:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21710:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "21710:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21584:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "21584:124:8"
																},
																"nativeSrc": "21584:131:8",
																"nodeType": "YulFunctionCall",
																"src": "21584:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21576:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "21576:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21303:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21454:9:8",
														"nodeType": "YulTypedName",
														"src": "21454:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21469:4:8",
														"nodeType": "YulTypedName",
														"src": "21469:4:8",
														"type": ""
													}
												],
												"src": "21303:419:8"
											},
											{
												"body": {
													"nativeSrc": "21782:87:8",
													"nodeType": "YulBlock",
													"src": "21782:87:8",
													"statements": [
														{
															"nativeSrc": "21792:11:8",
															"nodeType": "YulAssignment",
															"src": "21792:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "21800:3:8",
																"nodeType": "YulIdentifier",
																"src": "21800:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "21792:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "21792:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21820:1:8",
																		"nodeType": "YulLiteral",
																		"src": "21820:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "21823:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "21823:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21813:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "21813:6:8"
																},
																"nativeSrc": "21813:14:8",
																"nodeType": "YulFunctionCall",
																"src": "21813:14:8"
															},
															"nativeSrc": "21813:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "21813:14:8"
														},
														{
															"nativeSrc": "21836:26:8",
															"nodeType": "YulAssignment",
															"src": "21836:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21854:1:8",
																		"nodeType": "YulLiteral",
																		"src": "21854:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21857:4:8",
																		"nodeType": "YulLiteral",
																		"src": "21857:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "21844:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "21844:9:8"
																},
																"nativeSrc": "21844:18:8",
																"nodeType": "YulFunctionCall",
																"src": "21844:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "21836:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "21836:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "21728:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "21769:3:8",
														"nodeType": "YulTypedName",
														"src": "21769:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "21777:4:8",
														"nodeType": "YulTypedName",
														"src": "21777:4:8",
														"type": ""
													}
												],
												"src": "21728:141:8"
											},
											{
												"body": {
													"nativeSrc": "21919:49:8",
													"nodeType": "YulBlock",
													"src": "21919:49:8",
													"statements": [
														{
															"nativeSrc": "21929:33:8",
															"nodeType": "YulAssignment",
															"src": "21929:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21947:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "21947:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21954:2:8",
																				"nodeType": "YulLiteral",
																				"src": "21954:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21943:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "21943:3:8"
																		},
																		"nativeSrc": "21943:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "21943:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21959:2:8",
																		"nodeType": "YulLiteral",
																		"src": "21959:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "21939:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "21939:3:8"
																},
																"nativeSrc": "21939:23:8",
																"nodeType": "YulFunctionCall",
																"src": "21939:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "21929:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "21929:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "21875:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21902:5:8",
														"nodeType": "YulTypedName",
														"src": "21902:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "21912:6:8",
														"nodeType": "YulTypedName",
														"src": "21912:6:8",
														"type": ""
													}
												],
												"src": "21875:93:8"
											},
											{
												"body": {
													"nativeSrc": "22027:54:8",
													"nodeType": "YulBlock",
													"src": "22027:54:8",
													"statements": [
														{
															"nativeSrc": "22037:37:8",
															"nodeType": "YulAssignment",
															"src": "22037:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "22062:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "22062:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "22068:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "22068:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "22058:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22058:3:8"
																},
																"nativeSrc": "22058:16:8",
																"nodeType": "YulFunctionCall",
																"src": "22058:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "22037:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "22037:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "21974:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "22002:4:8",
														"nodeType": "YulTypedName",
														"src": "22002:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "22008:5:8",
														"nodeType": "YulTypedName",
														"src": "22008:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "22018:8:8",
														"nodeType": "YulTypedName",
														"src": "22018:8:8",
														"type": ""
													}
												],
												"src": "21974:107:8"
											},
											{
												"body": {
													"nativeSrc": "22163:317:8",
													"nodeType": "YulBlock",
													"src": "22163:317:8",
													"statements": [
														{
															"nativeSrc": "22173:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "22173:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "22194:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "22194:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22206:1:8",
																		"nodeType": "YulLiteral",
																		"src": "22206:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "22190:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22190:3:8"
																},
																"nativeSrc": "22190:18:8",
																"nodeType": "YulFunctionCall",
																"src": "22190:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "22177:9:8",
																	"nodeType": "YulTypedName",
																	"src": "22177:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22217:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "22217:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "22248:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "22248:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22259:66:8",
																		"nodeType": "YulLiteral",
																		"src": "22259:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "22229:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "22229:18:8"
																},
																"nativeSrc": "22229:97:8",
																"nodeType": "YulFunctionCall",
																"src": "22229:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "22221:4:8",
																	"nodeType": "YulTypedName",
																	"src": "22221:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22335:51:8",
															"nodeType": "YulAssignment",
															"src": "22335:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "22366:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "22366:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "22377:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "22377:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "22347:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "22347:18:8"
																},
																"nativeSrc": "22347:39:8",
																"nodeType": "YulFunctionCall",
																"src": "22347:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "22335:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "22335:8:8"
																}
															]
														},
														{
															"nativeSrc": "22395:30:8",
															"nodeType": "YulAssignment",
															"src": "22395:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22408:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "22408:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "22419:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "22419:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "22415:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "22415:3:8"
																		},
																		"nativeSrc": "22415:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "22415:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "22404:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22404:3:8"
																},
																"nativeSrc": "22404:21:8",
																"nodeType": "YulFunctionCall",
																"src": "22404:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "22395:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "22395:5:8"
																}
															]
														},
														{
															"nativeSrc": "22434:40:8",
															"nodeType": "YulAssignment",
															"src": "22434:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22447:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "22447:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "22458:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "22458:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "22468:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "22468:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "22454:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "22454:3:8"
																		},
																		"nativeSrc": "22454:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "22454:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "22444:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "22444:2:8"
																},
																"nativeSrc": "22444:30:8",
																"nodeType": "YulFunctionCall",
																"src": "22444:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22434:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "22434:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "22087:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22124:5:8",
														"nodeType": "YulTypedName",
														"src": "22124:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "22131:10:8",
														"nodeType": "YulTypedName",
														"src": "22131:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "22143:8:8",
														"nodeType": "YulTypedName",
														"src": "22143:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "22156:6:8",
														"nodeType": "YulTypedName",
														"src": "22156:6:8",
														"type": ""
													}
												],
												"src": "22087:393:8"
											},
											{
												"body": {
													"nativeSrc": "22546:82:8",
													"nodeType": "YulBlock",
													"src": "22546:82:8",
													"statements": [
														{
															"nativeSrc": "22556:66:8",
															"nodeType": "YulAssignment",
															"src": "22556:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "22614:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "22614:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "22596:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "22596:17:8"
																				},
																				"nativeSrc": "22596:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "22596:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "22587:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "22587:8:8"
																		},
																		"nativeSrc": "22587:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "22587:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22569:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "22569:17:8"
																},
																"nativeSrc": "22569:53:8",
																"nodeType": "YulFunctionCall",
																"src": "22569:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "22556:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "22556:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "22486:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22526:5:8",
														"nodeType": "YulTypedName",
														"src": "22526:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "22536:9:8",
														"nodeType": "YulTypedName",
														"src": "22536:9:8",
														"type": ""
													}
												],
												"src": "22486:142:8"
											},
											{
												"body": {
													"nativeSrc": "22681:28:8",
													"nodeType": "YulBlock",
													"src": "22681:28:8",
													"statements": [
														{
															"nativeSrc": "22691:12:8",
															"nodeType": "YulAssignment",
															"src": "22691:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "22698:5:8",
																"nodeType": "YulIdentifier",
																"src": "22698:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "22691:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "22691:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "22634:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22667:5:8",
														"nodeType": "YulTypedName",
														"src": "22667:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "22677:3:8",
														"nodeType": "YulTypedName",
														"src": "22677:3:8",
														"type": ""
													}
												],
												"src": "22634:75:8"
											},
											{
												"body": {
													"nativeSrc": "22791:193:8",
													"nodeType": "YulBlock",
													"src": "22791:193:8",
													"statements": [
														{
															"nativeSrc": "22801:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "22801:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "22856:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "22856:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "22825:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "22825:30:8"
																},
																"nativeSrc": "22825:39:8",
																"nodeType": "YulFunctionCall",
																"src": "22825:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "22805:16:8",
																	"nodeType": "YulTypedName",
																	"src": "22805:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "22880:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "22880:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "22920:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "22920:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "22914:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "22914:5:8"
																				},
																				"nativeSrc": "22914:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "22914:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "22927:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "22927:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "22959:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "22959:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "22935:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "22935:23:8"
																				},
																				"nativeSrc": "22935:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "22935:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "22886:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "22886:27:8"
																		},
																		"nativeSrc": "22886:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "22886:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "22873:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "22873:6:8"
																},
																"nativeSrc": "22873:105:8",
																"nodeType": "YulFunctionCall",
																"src": "22873:105:8"
															},
															"nativeSrc": "22873:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "22873:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "22715:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "22768:4:8",
														"nodeType": "YulTypedName",
														"src": "22768:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "22774:6:8",
														"nodeType": "YulTypedName",
														"src": "22774:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "22782:7:8",
														"nodeType": "YulTypedName",
														"src": "22782:7:8",
														"type": ""
													}
												],
												"src": "22715:269:8"
											},
											{
												"body": {
													"nativeSrc": "23039:24:8",
													"nodeType": "YulBlock",
													"src": "23039:24:8",
													"statements": [
														{
															"nativeSrc": "23049:8:8",
															"nodeType": "YulAssignment",
															"src": "23049:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "23056:1:8",
																"nodeType": "YulLiteral",
																"src": "23056:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23049:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "23049:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "22990:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "23035:3:8",
														"nodeType": "YulTypedName",
														"src": "23035:3:8",
														"type": ""
													}
												],
												"src": "22990:73:8"
											},
											{
												"body": {
													"nativeSrc": "23122:136:8",
													"nodeType": "YulBlock",
													"src": "23122:136:8",
													"statements": [
														{
															"nativeSrc": "23132:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "23132:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "23146:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "23146:30:8"
																},
																"nativeSrc": "23146:32:8",
																"nodeType": "YulFunctionCall",
																"src": "23146:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "23136:6:8",
																	"nodeType": "YulTypedName",
																	"src": "23136:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23231:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "23231:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "23237:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "23237:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "23245:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "23245:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "23187:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "23187:43:8"
																},
																"nativeSrc": "23187:65:8",
																"nodeType": "YulFunctionCall",
																"src": "23187:65:8"
															},
															"nativeSrc": "23187:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "23187:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "23069:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "23108:4:8",
														"nodeType": "YulTypedName",
														"src": "23108:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "23114:6:8",
														"nodeType": "YulTypedName",
														"src": "23114:6:8",
														"type": ""
													}
												],
												"src": "23069:189:8"
											},
											{
												"body": {
													"nativeSrc": "23314:136:8",
													"nodeType": "YulBlock",
													"src": "23314:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "23381:63:8",
																"nodeType": "YulBlock",
																"src": "23381:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "23425:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "23425:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23432:1:8",
																					"nodeType": "YulLiteral",
																					"src": "23432:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "23395:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "23395:29:8"
																			},
																			"nativeSrc": "23395:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "23395:39:8"
																		},
																		"nativeSrc": "23395:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "23395:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "23334:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "23334:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "23341:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "23341:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "23331:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "23331:2:8"
																},
																"nativeSrc": "23331:14:8",
																"nodeType": "YulFunctionCall",
																"src": "23331:14:8"
															},
															"nativeSrc": "23324:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "23346:26:8",
																"nodeType": "YulBlock",
																"src": "23346:26:8",
																"statements": [
																	{
																		"nativeSrc": "23348:22:8",
																		"nodeType": "YulAssignment",
																		"src": "23348:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "23361:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "23361:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23368:1:8",
																					"nodeType": "YulLiteral",
																					"src": "23368:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "23357:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "23357:3:8"
																			},
																			"nativeSrc": "23357:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "23357:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "23348:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "23348:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "23328:2:8",
																"nodeType": "YulBlock",
																"src": "23328:2:8",
																"statements": []
															},
															"src": "23324:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "23264:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "23302:5:8",
														"nodeType": "YulTypedName",
														"src": "23302:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23309:3:8",
														"nodeType": "YulTypedName",
														"src": "23309:3:8",
														"type": ""
													}
												],
												"src": "23264:186:8"
											},
											{
												"body": {
													"nativeSrc": "23535:464:8",
													"nodeType": "YulBlock",
													"src": "23535:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "23561:431:8",
																"nodeType": "YulBlock",
																"src": "23561:431:8",
																"statements": [
																	{
																		"nativeSrc": "23575:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "23575:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "23623:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "23623:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "23591:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "23591:31:8"
																			},
																			"nativeSrc": "23591:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "23591:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "23579:8:8",
																				"nodeType": "YulTypedName",
																				"src": "23579:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "23642:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "23642:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "23665:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "23665:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "23693:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "23693:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "23675:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "23675:17:8"
																					},
																					"nativeSrc": "23675:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "23675:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "23661:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "23661:3:8"
																			},
																			"nativeSrc": "23661:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "23661:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "23646:11:8",
																				"nodeType": "YulTypedName",
																				"src": "23646:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "23862:27:8",
																			"nodeType": "YulBlock",
																			"src": "23862:27:8",
																			"statements": [
																				{
																					"nativeSrc": "23864:23:8",
																					"nodeType": "YulAssignment",
																					"src": "23864:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "23879:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "23879:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "23864:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "23864:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "23846:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "23846:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23858:2:8",
																					"nodeType": "YulLiteral",
																					"src": "23858:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "23843:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "23843:2:8"
																			},
																			"nativeSrc": "23843:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "23843:18:8"
																		},
																		"nativeSrc": "23840:49:8",
																		"nodeType": "YulIf",
																		"src": "23840:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "23931:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "23931:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "23948:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "23948:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "23976:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "23976:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "23958:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "23958:17:8"
																							},
																							"nativeSrc": "23958:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "23958:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "23944:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "23944:3:8"
																					},
																					"nativeSrc": "23944:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "23944:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "23902:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "23902:28:8"
																			},
																			"nativeSrc": "23902:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "23902:80:8"
																		},
																		"nativeSrc": "23902:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "23902:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "23552:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "23552:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "23557:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23549:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "23549:2:8"
																},
																"nativeSrc": "23549:11:8",
																"nodeType": "YulFunctionCall",
																"src": "23549:11:8"
															},
															"nativeSrc": "23546:446:8",
															"nodeType": "YulIf",
															"src": "23546:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "23456:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "23511:5:8",
														"nodeType": "YulTypedName",
														"src": "23511:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "23518:3:8",
														"nodeType": "YulTypedName",
														"src": "23518:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "23523:10:8",
														"nodeType": "YulTypedName",
														"src": "23523:10:8",
														"type": ""
													}
												],
												"src": "23456:543:8"
											},
											{
												"body": {
													"nativeSrc": "24068:54:8",
													"nodeType": "YulBlock",
													"src": "24068:54:8",
													"statements": [
														{
															"nativeSrc": "24078:37:8",
															"nodeType": "YulAssignment",
															"src": "24078:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "24103:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "24103:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "24109:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "24109:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "24099:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "24099:3:8"
																},
																"nativeSrc": "24099:16:8",
																"nodeType": "YulFunctionCall",
																"src": "24099:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "24078:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "24078:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "24005:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "24043:4:8",
														"nodeType": "YulTypedName",
														"src": "24043:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "24049:5:8",
														"nodeType": "YulTypedName",
														"src": "24049:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "24059:8:8",
														"nodeType": "YulTypedName",
														"src": "24059:8:8",
														"type": ""
													}
												],
												"src": "24005:117:8"
											},
											{
												"body": {
													"nativeSrc": "24179:118:8",
													"nodeType": "YulBlock",
													"src": "24179:118:8",
													"statements": [
														{
															"nativeSrc": "24189:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "24189:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "24238:1:8",
																						"nodeType": "YulLiteral",
																						"src": "24238:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "24241:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "24241:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "24234:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "24234:3:8"
																				},
																				"nativeSrc": "24234:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "24234:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "24253:1:8",
																						"nodeType": "YulLiteral",
																						"src": "24253:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "24249:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "24249:3:8"
																				},
																				"nativeSrc": "24249:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "24249:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "24205:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "24205:28:8"
																		},
																		"nativeSrc": "24205:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "24205:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "24201:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "24201:3:8"
																},
																"nativeSrc": "24201:56:8",
																"nodeType": "YulFunctionCall",
																"src": "24201:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "24193:4:8",
																	"nodeType": "YulTypedName",
																	"src": "24193:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24266:25:8",
															"nodeType": "YulAssignment",
															"src": "24266:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24280:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "24280:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "24286:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "24286:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "24276:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "24276:3:8"
																},
																"nativeSrc": "24276:15:8",
																"nodeType": "YulFunctionCall",
																"src": "24276:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "24266:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "24266:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "24128:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "24156:4:8",
														"nodeType": "YulTypedName",
														"src": "24156:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "24162:5:8",
														"nodeType": "YulTypedName",
														"src": "24162:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "24172:6:8",
														"nodeType": "YulTypedName",
														"src": "24172:6:8",
														"type": ""
													}
												],
												"src": "24128:169:8"
											},
											{
												"body": {
													"nativeSrc": "24383:214:8",
													"nodeType": "YulBlock",
													"src": "24383:214:8",
													"statements": [
														{
															"nativeSrc": "24516:37:8",
															"nodeType": "YulAssignment",
															"src": "24516:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24543:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "24543:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "24549:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "24549:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "24524:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "24524:18:8"
																},
																"nativeSrc": "24524:29:8",
																"nodeType": "YulFunctionCall",
																"src": "24524:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "24516:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "24516:4:8"
																}
															]
														},
														{
															"nativeSrc": "24562:29:8",
															"nodeType": "YulAssignment",
															"src": "24562:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24573:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "24573:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "24583:1:8",
																				"nodeType": "YulLiteral",
																				"src": "24583:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "24586:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "24586:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "24579:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "24579:3:8"
																		},
																		"nativeSrc": "24579:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "24579:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "24570:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "24570:2:8"
																},
																"nativeSrc": "24570:21:8",
																"nodeType": "YulFunctionCall",
																"src": "24570:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "24562:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "24562:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "24302:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "24364:4:8",
														"nodeType": "YulTypedName",
														"src": "24364:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "24370:3:8",
														"nodeType": "YulTypedName",
														"src": "24370:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "24378:4:8",
														"nodeType": "YulTypedName",
														"src": "24378:4:8",
														"type": ""
													}
												],
												"src": "24302:295:8"
											},
											{
												"body": {
													"nativeSrc": "24694:1303:8",
													"nodeType": "YulBlock",
													"src": "24694:1303:8",
													"statements": [
														{
															"nativeSrc": "24705:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "24705:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "24752:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "24752:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "24719:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "24719:32:8"
																},
																"nativeSrc": "24719:37:8",
																"nodeType": "YulFunctionCall",
																"src": "24719:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "24709:6:8",
																	"nodeType": "YulTypedName",
																	"src": "24709:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "24841:22:8",
																"nodeType": "YulBlock",
																"src": "24841:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "24843:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "24843:16:8"
																			},
																			"nativeSrc": "24843:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "24843:18:8"
																		},
																		"nativeSrc": "24843:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "24843:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "24813:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "24813:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24821:18:8",
																		"nodeType": "YulLiteral",
																		"src": "24821:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "24810:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "24810:2:8"
																},
																"nativeSrc": "24810:30:8",
																"nodeType": "YulFunctionCall",
																"src": "24810:30:8"
															},
															"nativeSrc": "24807:56:8",
															"nodeType": "YulIf",
															"src": "24807:56:8"
														},
														{
															"nativeSrc": "24873:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "24873:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "24919:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "24919:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "24913:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "24913:5:8"
																		},
																		"nativeSrc": "24913:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "24913:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "24887:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "24887:25:8"
																},
																"nativeSrc": "24887:38:8",
																"nodeType": "YulFunctionCall",
																"src": "24887:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "24877:6:8",
																	"nodeType": "YulTypedName",
																	"src": "24877:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "25018:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "25018:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "25024:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "25024:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "25032:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "25032:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "24972:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "24972:45:8"
																},
																"nativeSrc": "24972:67:8",
																"nodeType": "YulFunctionCall",
																"src": "24972:67:8"
															},
															"nativeSrc": "24972:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "24972:67:8"
														},
														{
															"nativeSrc": "25049:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "25049:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "25066:1:8",
																"nodeType": "YulLiteral",
																"src": "25066:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "25053:9:8",
																	"nodeType": "YulTypedName",
																	"src": "25053:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25077:17:8",
															"nodeType": "YulAssignment",
															"src": "25077:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "25090:4:8",
																"nodeType": "YulLiteral",
																"src": "25090:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "25077:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "25077:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "25141:611:8",
																		"nodeType": "YulBlock",
																		"src": "25141:611:8",
																		"statements": [
																			{
																				"nativeSrc": "25155:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25155:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "25174:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "25174:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "25186:4:8",
																									"nodeType": "YulLiteral",
																									"src": "25186:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "25182:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "25182:3:8"
																							},
																							"nativeSrc": "25182:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "25182:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "25170:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "25170:3:8"
																					},
																					"nativeSrc": "25170:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "25170:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "25159:7:8",
																						"nodeType": "YulTypedName",
																						"src": "25159:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "25206:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25206:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25252:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "25252:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "25220:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "25220:31:8"
																					},
																					"nativeSrc": "25220:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "25220:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "25210:6:8",
																						"nodeType": "YulTypedName",
																						"src": "25210:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "25270:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25270:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "25279:1:8",
																					"nodeType": "YulLiteral",
																					"src": "25279:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "25274:1:8",
																						"nodeType": "YulTypedName",
																						"src": "25274:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "25338:163:8",
																					"nodeType": "YulBlock",
																					"src": "25338:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25363:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "25363:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "25381:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "25381:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "25386:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "25386:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "25377:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "25377:3:8"
																												},
																												"nativeSrc": "25377:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "25377:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "25371:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "25371:5:8"
																										},
																										"nativeSrc": "25371:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "25371:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "25356:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "25356:6:8"
																								},
																								"nativeSrc": "25356:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "25356:42:8"
																							},
																							"nativeSrc": "25356:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "25356:42:8"
																						},
																						{
																							"nativeSrc": "25415:24:8",
																							"nodeType": "YulAssignment",
																							"src": "25415:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25429:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "25429:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25437:1:8",
																										"nodeType": "YulLiteral",
																										"src": "25437:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25425:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "25425:3:8"
																								},
																								"nativeSrc": "25425:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "25425:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "25415:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "25415:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "25456:31:8",
																							"nodeType": "YulAssignment",
																							"src": "25456:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "25473:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "25473:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25484:2:8",
																										"nodeType": "YulLiteral",
																										"src": "25484:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25469:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "25469:3:8"
																								},
																								"nativeSrc": "25469:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "25469:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "25456:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "25456:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "25304:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "25304:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "25307:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "25307:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "25301:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "25301:2:8"
																					},
																					"nativeSrc": "25301:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "25301:14:8"
																				},
																				"nativeSrc": "25293:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "25316:21:8",
																					"nodeType": "YulBlock",
																					"src": "25316:21:8",
																					"statements": [
																						{
																							"nativeSrc": "25318:17:8",
																							"nodeType": "YulAssignment",
																							"src": "25318:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "25327:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "25327:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25330:4:8",
																										"nodeType": "YulLiteral",
																										"src": "25330:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25323:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "25323:3:8"
																								},
																								"nativeSrc": "25323:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "25323:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "25318:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "25318:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "25297:3:8",
																					"nodeType": "YulBlock",
																					"src": "25297:3:8",
																					"statements": []
																				},
																				"src": "25293:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "25537:156:8",
																					"nodeType": "YulBlock",
																					"src": "25537:156:8",
																					"statements": [
																						{
																							"nativeSrc": "25555:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "25555:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "25582:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "25582:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "25587:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "25587:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "25578:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "25578:3:8"
																										},
																										"nativeSrc": "25578:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "25578:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "25572:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "25572:5:8"
																								},
																								"nativeSrc": "25572:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "25572:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "25559:9:8",
																									"nodeType": "YulTypedName",
																									"src": "25559:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25622:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "25622:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "25649:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "25649:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "25664:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "25664:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "25672:4:8",
																														"nodeType": "YulLiteral",
																														"src": "25672:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "25660:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "25660:3:8"
																												},
																												"nativeSrc": "25660:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "25660:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "25630:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "25630:18:8"
																										},
																										"nativeSrc": "25630:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "25630:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "25615:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "25615:6:8"
																								},
																								"nativeSrc": "25615:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "25615:64:8"
																							},
																							"nativeSrc": "25615:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "25615:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "25520:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "25520:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "25529:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "25529:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "25517:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "25517:2:8"
																					},
																					"nativeSrc": "25517:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "25517:19:8"
																				},
																				"nativeSrc": "25514:179:8",
																				"nodeType": "YulIf",
																				"src": "25514:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25713:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "25713:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "25727:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "25727:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "25735:1:8",
																											"nodeType": "YulLiteral",
																											"src": "25735:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "25723:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "25723:3:8"
																									},
																									"nativeSrc": "25723:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "25723:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "25739:1:8",
																									"nodeType": "YulLiteral",
																									"src": "25739:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "25719:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "25719:3:8"
																							},
																							"nativeSrc": "25719:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "25719:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "25706:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "25706:6:8"
																					},
																					"nativeSrc": "25706:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "25706:36:8"
																				},
																				"nativeSrc": "25706:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "25706:36:8"
																			}
																		]
																	},
																	"nativeSrc": "25134:618:8",
																	"nodeType": "YulCase",
																	"src": "25134:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "25139:1:8",
																		"nodeType": "YulLiteral",
																		"src": "25139:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "25769:222:8",
																		"nodeType": "YulBlock",
																		"src": "25769:222:8",
																		"statements": [
																			{
																				"nativeSrc": "25783:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25783:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "25796:1:8",
																					"nodeType": "YulLiteral",
																					"src": "25796:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "25787:5:8",
																						"nodeType": "YulTypedName",
																						"src": "25787:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "25820:67:8",
																					"nodeType": "YulBlock",
																					"src": "25820:67:8",
																					"statements": [
																						{
																							"nativeSrc": "25838:35:8",
																							"nodeType": "YulAssignment",
																							"src": "25838:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "25857:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "25857:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "25862:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "25862:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "25853:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "25853:3:8"
																										},
																										"nativeSrc": "25853:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "25853:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "25847:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "25847:5:8"
																								},
																								"nativeSrc": "25847:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "25847:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "25838:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "25838:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "25813:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "25813:6:8"
																				},
																				"nativeSrc": "25810:77:8",
																				"nodeType": "YulIf",
																				"src": "25810:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25907:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "25907:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "25966:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "25966:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "25973:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "25973:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "25913:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "25913:52:8"
																							},
																							"nativeSrc": "25913:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "25913:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "25900:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "25900:6:8"
																					},
																					"nativeSrc": "25900:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "25900:81:8"
																				},
																				"nativeSrc": "25900:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "25900:81:8"
																			}
																		]
																	},
																	"nativeSrc": "25761:230:8",
																	"nodeType": "YulCase",
																	"src": "25761:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "25114:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "25114:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25122:2:8",
																		"nodeType": "YulLiteral",
																		"src": "25122:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25111:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "25111:2:8"
																},
																"nativeSrc": "25111:14:8",
																"nodeType": "YulFunctionCall",
																"src": "25111:14:8"
															},
															"nativeSrc": "25104:887:8",
															"nodeType": "YulSwitch",
															"src": "25104:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "24602:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "24683:4:8",
														"nodeType": "YulTypedName",
														"src": "24683:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "24689:3:8",
														"nodeType": "YulTypedName",
														"src": "24689:3:8",
														"type": ""
													}
												],
												"src": "24602:1395:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool_t_string_memory_ptr__to_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_boolt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_boolt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Reputify_$1510_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_Reputify_$1510_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Reputify_$1510_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_Reputify_$1510__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Reputify_$1510_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a(memPtr) {\n\n        mstore(add(memPtr, 0), \"No stake found\")\n\n    }\n\n    function abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_205c9abf3277d6f6ea53f405a0c4521e2370e038cb4c792c2a133737d9f8b562(memPtr) {\n\n        mstore(add(memPtr, 0), \"Post ID mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_205c9abf3277d6f6ea53f405a0c4521e2370e038cb4c792c2a133737d9f8b562_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_205c9abf3277d6f6ea53f405a0c4521e2370e038cb4c792c2a133737d9f8b562(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_205c9abf3277d6f6ea53f405a0c4521e2370e038cb4c792c2a133737d9f8b562__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_205c9abf3277d6f6ea53f405a0c4521e2370e038cb4c792c2a133737d9f8b562_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_98e81edf2b3f4fbb6d9b4dff4c46bf609d7be7b570e06ad4fbf58eced840fe4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract not approved to transfe\")\n\n        mstore(add(memPtr, 32), \"r tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_98e81edf2b3f4fbb6d9b4dff4c46bf609d7be7b570e06ad4fbf58eced840fe4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_98e81edf2b3f4fbb6d9b4dff4c46bf609d7be7b570e06ad4fbf58eced840fe4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_98e81edf2b3f4fbb6d9b4dff4c46bf609d7be7b570e06ad4fbf58eced840fe4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_98e81edf2b3f4fbb6d9b4dff4c46bf609d7be7b570e06ad4fbf58eced840fe4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC0497AC8 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xC0497AC8 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xF8300FCA EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x16B JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xB7F5A5A3 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x9F SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH2 0x189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC4 PUSH2 0x241 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH2 0x254 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB SWAP2 SWAP1 PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x18A4 JUMP JUMPDEST PUSH2 0x27B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH2 0xE07 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x161D JUMP JUMPDEST PUSH2 0x12FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1994 JUMP JUMPDEST PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x1C0 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1EC SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x237 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x20E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x237 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x21A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x249 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x252 PUSH0 PUSH2 0x1492 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x2F7 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x323 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x36E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x345 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x36E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x351 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH1 0x3 DUP4 PUSH1 0x40 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH0 DUP3 PUSH0 ADD MLOAD GT PUSH2 0x3DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP1 PUSH2 0x1B89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP3 PUSH1 0x40 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ PUSH2 0x433 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42A SWAP1 PUSH2 0x1BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 ISZERO PUSH2 0x7B8 JUMPI PUSH0 PUSH1 0x64 PUSH1 0x5 DUP6 PUSH0 ADD MLOAD PUSH2 0x44D SWAP2 SWAP1 PUSH2 0x1C3C JUMP JUMPDEST PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x1CAA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP8 PUSH0 ADD MLOAD PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E5 SWAP3 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x501 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x525 SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST POP PUSH0 DUP2 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x537 SWAP2 SWAP1 PUSH2 0x1D73 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP5 PUSH1 0x4 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x7B0 JUMPI PUSH0 DUP6 PUSH1 0x4 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x561 JUMPI PUSH2 0x560 PUSH2 0x1DA6 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x607 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x633 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x67E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x655 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x67E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x661 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD ISZERO PUSH2 0x7A1 JUMPI PUSH0 DUP8 PUSH1 0x2 ADD SLOAD DUP6 DUP4 PUSH0 ADD MLOAD PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0x1C3C JUMP JUMPDEST PUSH2 0x6B2 SWAP2 SWAP1 PUSH2 0x1CAA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x710 SWAP3 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x72C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x750 SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x53B JUMP JUMPDEST POP POP POP PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x836 SWAP3 SWAP2 SWAP1 PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x852 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x876 SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP3 PUSH1 0x4 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xA7E JUMPI PUSH0 DUP4 PUSH1 0x4 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x89F JUMPI PUSH2 0x89E PUSH2 0x1DA6 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x945 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x971 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9BC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x993 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9BC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x99F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD ISZERO PUSH2 0xA6F JUMPI PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 PUSH0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP3 SWAP2 SWAP1 PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA49 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA6D SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST POP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x879 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP3 PUSH1 0x4 ADD DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xCF9 JUMPI PUSH0 DUP4 PUSH1 0x4 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAA7 JUMPI PUSH2 0xAA6 PUSH2 0x1DA6 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xB4D SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB79 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBC4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB9B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBC4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBA7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH2 0xCEA JUMPI PUSH0 DUP6 PUSH1 0x3 ADD SLOAD DUP7 PUSH1 0x3 ADD SLOAD DUP4 PUSH0 ADD MLOAD PUSH2 0xBF1 SWAP2 SWAP1 PUSH2 0x1C3C JUMP JUMPDEST PUSH2 0xBFB SWAP2 SWAP1 PUSH2 0x1CAA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC59 SWAP3 SWAP2 SWAP1 PUSH2 0x1D0D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC75 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC99 SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0xCE0 SWAP2 SWAP1 PUSH2 0x1DD3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xA81 JUMP JUMPDEST POP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD ISZERO PUSH2 0xD27 JUMPI DUP3 PUSH0 ADD MLOAD DUP3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD1B SWAP2 SWAP1 PUSH2 0x1D73 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD45 JUMP JUMPDEST DUP3 PUSH0 ADD MLOAD DUP3 PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD3D SWAP2 SWAP1 PUSH2 0x1D73 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 PUSH2 0xDAB SWAP2 SWAP1 PUSH2 0x155A JUMP JUMPDEST POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E DUP5 PUSH0 ADD MLOAD DUP4 PUSH1 0x40 MLOAD PUSH2 0xDF8 SWAP3 SWAP2 SWAP1 PUSH2 0x1E4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0xE49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE40 SWAP1 PUSH2 0x1EBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEA4 SWAP2 SWAP1 PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEBF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEE3 SWAP2 SWAP1 PUSH2 0x1EEF JUMP JUMPDEST LT ISZERO PUSH2 0xF24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1B SWAP1 PUSH2 0x1F64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF81 SWAP3 SWAP2 SWAP1 PUSH2 0x1F82 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF9C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFC0 SWAP2 SWAP1 PUSH2 0x1EEF JUMP JUMPDEST LT ISZERO PUSH2 0x1001 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF8 SWAP1 PUSH2 0x2019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1012 SWAP2 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1081 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2037 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x109D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10C1 SWAP2 SWAP1 PUSH2 0x1D48 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1103 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10FA SWAP1 PUSH2 0x20B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1199 SWAP2 SWAP1 PUSH2 0x2268 JUMP JUMPDEST POP SWAP1 POP POP PUSH0 DUP3 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x11EA JUMPI CALLER DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP5 DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11FD SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 ADD CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x128B JUMPI DUP5 DUP3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x127F SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12A6 JUMP JUMPDEST DUP5 DUP3 PUSH1 0x3 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x129E SWAP2 SWAP1 PUSH2 0x1CDA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x56E5C3A64EE1D63CC76545AE78B97F7BB9E3F402463F7F9F86428F5154FC5EAF DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x12F0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1307 PUSH2 0x140B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1377 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136E SWAP2 SWAP1 PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1380 DUP2 PUSH2 0x1492 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP3 ADD DUP1 MLOAD DUP5 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP6 ADD KECCAK256 DUP2 DUP4 MSTORE DUP1 SWAP6 POP POP POP POP POP POP PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1413 PUSH2 0x1553 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1431 PUSH2 0x254 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1490 JUMPI PUSH2 0x1454 PUSH2 0x1553 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1487 SWAP2 SWAP1 PUSH2 0x1735 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x1566 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST PUSH0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1577 JUMPI POP PUSH2 0x1594 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1593 SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x15AE JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1598 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15EC DUP3 PUSH2 0x15C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15FC DUP2 PUSH2 0x15E2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1606 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1617 DUP2 PUSH2 0x15F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1632 JUMPI PUSH2 0x1631 PUSH2 0x15BB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x163F DUP5 DUP3 DUP6 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x165A DUP2 PUSH2 0x1648 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1674 DUP2 PUSH2 0x1660 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16BC DUP3 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x16C6 DUP2 DUP6 PUSH2 0x1684 JUMP JUMPDEST SWAP4 POP PUSH2 0x16D6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1694 JUMP JUMPDEST PUSH2 0x16DF DUP2 PUSH2 0x16A2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x16FD PUSH0 DUP4 ADD DUP7 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x170A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x166B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x171C DUP2 DUP5 PUSH2 0x16B2 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x172F DUP2 PUSH2 0x15E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1748 PUSH0 DUP4 ADD DUP5 PUSH2 0x1726 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1757 DUP2 PUSH2 0x1660 JUMP JUMPDEST DUP2 EQ PUSH2 0x1761 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1772 DUP2 PUSH2 0x174E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x17B6 DUP3 PUSH2 0x16A2 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17D5 JUMPI PUSH2 0x17D4 PUSH2 0x1780 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x17E7 PUSH2 0x15B2 JUMP JUMPDEST SWAP1 POP PUSH2 0x17F3 DUP3 DUP3 PUSH2 0x17AD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1812 JUMPI PUSH2 0x1811 PUSH2 0x1780 JUMP JUMPDEST JUMPDEST PUSH2 0x181B DUP3 PUSH2 0x16A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1848 PUSH2 0x1843 DUP5 PUSH2 0x17F8 JUMP JUMPDEST PUSH2 0x17DE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1864 JUMPI PUSH2 0x1863 PUSH2 0x177C JUMP JUMPDEST JUMPDEST PUSH2 0x186F DUP5 DUP3 DUP6 PUSH2 0x1828 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x188B JUMPI PUSH2 0x188A PUSH2 0x1778 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x189B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1836 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18BA JUMPI PUSH2 0x18B9 PUSH2 0x15BB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18C7 DUP6 DUP3 DUP7 ADD PUSH2 0x1764 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18E8 JUMPI PUSH2 0x18E7 PUSH2 0x15BF JUMP JUMPDEST JUMPDEST PUSH2 0x18F4 DUP6 DUP3 DUP7 ADD PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1907 DUP2 PUSH2 0x1648 JUMP JUMPDEST DUP2 EQ PUSH2 0x1911 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1922 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x193F JUMPI PUSH2 0x193E PUSH2 0x15BB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x194C DUP7 DUP3 DUP8 ADD PUSH2 0x1914 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x195D DUP7 DUP3 DUP8 ADD PUSH2 0x1764 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x197E JUMPI PUSH2 0x197D PUSH2 0x15BF JUMP JUMPDEST JUMPDEST PUSH2 0x198A DUP7 DUP3 DUP8 ADD PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19A9 JUMPI PUSH2 0x19A8 PUSH2 0x15BB JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19C6 JUMPI PUSH2 0x19C5 PUSH2 0x15BF JUMP JUMPDEST JUMPDEST PUSH2 0x19D2 DUP5 DUP3 DUP6 ADD PUSH2 0x1877 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x19EE PUSH0 DUP4 ADD DUP8 PUSH2 0x1726 JUMP JUMPDEST PUSH2 0x19FB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x1A08 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x1A15 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A41 PUSH2 0x1A3C PUSH2 0x1A37 DUP5 PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0x15C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A52 DUP3 PUSH2 0x1A27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A63 DUP3 PUSH2 0x1A48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A73 DUP2 PUSH2 0x1A59 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A8C PUSH0 DUP4 ADD DUP5 PUSH2 0x1A6A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1AD6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AE9 JUMPI PUSH2 0x1AE8 PUSH2 0x1A92 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B03 DUP3 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x1B0D DUP2 DUP6 PUSH2 0x1AEF JUMP JUMPDEST SWAP4 POP PUSH2 0x1B1D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1694 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B34 DUP3 DUP5 PUSH2 0x1AF9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207374616B6520666F756E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B73 PUSH1 0xE DUP4 PUSH2 0x1684 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7E DUP3 PUSH2 0x1B3F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1BA0 DUP2 PUSH2 0x1B67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506F7374204944206D69736D6174636800000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BDB PUSH1 0x10 DUP4 PUSH2 0x1684 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE6 DUP3 PUSH2 0x1BA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C08 DUP2 PUSH2 0x1BCF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1C46 DUP3 PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C51 DUP4 PUSH2 0x1648 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1C5F DUP2 PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1C76 JUMPI PUSH2 0x1C75 PUSH2 0x1C0F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CB4 DUP3 PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CBF DUP4 PUSH2 0x1648 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1CCF JUMPI PUSH2 0x1CCE PUSH2 0x1C7D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1CE4 DUP3 PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CEF DUP4 PUSH2 0x1648 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D07 JUMPI PUSH2 0x1D06 PUSH2 0x1C0F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D20 PUSH0 DUP4 ADD DUP6 PUSH2 0x1726 JUMP JUMPDEST PUSH2 0x1D2D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D42 DUP2 PUSH2 0x174E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D5D JUMPI PUSH2 0x1D5C PUSH2 0x15BB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D6A DUP5 DUP3 DUP6 ADD PUSH2 0x1D34 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D7D DUP3 PUSH2 0x1648 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D88 DUP4 PUSH2 0x1648 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1DA0 JUMPI PUSH2 0x1D9F PUSH2 0x1C0F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DE6 PUSH0 DUP4 ADD DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E0F PUSH2 0x1E0A PUSH2 0x1E05 DUP5 PUSH2 0x1DEC JUMP JUMPDEST PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0x1648 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E1F DUP2 PUSH2 0x1DF5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E38 PUSH0 DUP4 ADD DUP6 PUSH2 0x1726 JUMP JUMPDEST PUSH2 0x1E45 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E16 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E5F PUSH0 DUP4 ADD DUP6 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0x1E6C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA7 PUSH1 0xE DUP4 PUSH2 0x1684 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB2 DUP3 PUSH2 0x1E73 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ED4 DUP2 PUSH2 0x1E9B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EE9 DUP2 PUSH2 0x18FE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F04 JUMPI PUSH2 0x1F03 PUSH2 0x15BB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F11 DUP5 DUP3 DUP6 ADD PUSH2 0x1EDB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F4E PUSH1 0x14 DUP4 PUSH2 0x1684 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F59 DUP3 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F7B DUP2 PUSH2 0x1F42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F95 PUSH0 DUP4 ADD DUP6 PUSH2 0x1726 JUMP JUMPDEST PUSH2 0x1FA2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1726 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206E6F7420617070726F76656420746F207472616E736665 PUSH0 DUP3 ADD MSTORE PUSH32 0x7220746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2003 PUSH1 0x28 DUP4 PUSH2 0x1684 JUMP JUMPDEST SWAP2 POP PUSH2 0x200E DUP3 PUSH2 0x1FA9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2030 DUP2 PUSH2 0x1FF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x204A PUSH0 DUP4 ADD DUP7 PUSH2 0x1726 JUMP JUMPDEST PUSH2 0x2057 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1726 JUMP JUMPDEST PUSH2 0x2064 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1651 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20A0 PUSH1 0x15 DUP4 PUSH2 0x1684 JUMP JUMPDEST SWAP2 POP PUSH2 0x20AB DUP3 PUSH2 0x206C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20CD DUP2 PUSH2 0x2094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2130 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x20F5 JUMP JUMPDEST PUSH2 0x213A DUP7 DUP4 PUSH2 0x20F5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x216C PUSH2 0x2167 PUSH2 0x2162 DUP5 PUSH2 0x1648 JUMP JUMPDEST PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0x1648 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2185 DUP4 PUSH2 0x2152 JUMP JUMPDEST PUSH2 0x2199 PUSH2 0x2191 DUP3 PUSH2 0x2173 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2101 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x21AD PUSH2 0x21A1 JUMP JUMPDEST PUSH2 0x21B8 DUP2 DUP5 DUP5 PUSH2 0x217C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x21DB JUMPI PUSH2 0x21D0 PUSH0 DUP3 PUSH2 0x21A5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21BE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2220 JUMPI PUSH2 0x21F1 DUP2 PUSH2 0x20D4 JUMP JUMPDEST PUSH2 0x21FA DUP5 PUSH2 0x20E6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2209 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x221D PUSH2 0x2215 DUP6 PUSH2 0x20E6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x21BD JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2240 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2225 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2258 DUP4 DUP4 PUSH2 0x2231 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2271 DUP3 PUSH2 0x167A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x228A JUMPI PUSH2 0x2289 PUSH2 0x1780 JUMP JUMPDEST JUMPDEST PUSH2 0x2294 DUP3 SLOAD PUSH2 0x1ABF JUMP JUMPDEST PUSH2 0x229F DUP3 DUP3 DUP6 PUSH2 0x21DF JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x22D0 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x22BE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x22C8 DUP6 DUP3 PUSH2 0x224D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x232F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x22DE DUP7 PUSH2 0x20D4 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2305 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22E0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2322 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x231E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2231 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xA8 DUP13 0x1E 0xCB ISZERO 0x1E JUMPI 0xD4 MUL SLT 0xEA 0x26 JUMPDEST DUP12 0xBF 0x29 0x26 DUP13 PUSH29 0x2B00840F79204CD0BB3D3D8364736F6C634300081A0033000000000000 ",
							"sourceMap": "180:5337:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;879:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2675:2839:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1454:1172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;925:36:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;806:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;879:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2675:2839:6:-;2758:22;2783:6;:18;2790:10;2783:18;;;;;;;;;;;;;;;2758:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2812:17;2832:5;2838:6;2832:13;;;;;;:::i;:::-;;;;;;;;;;;;;2812:33;;2885:1;2866:9;:16;;;:20;2858:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;2978:6;2962:24;;;;;;2940:9;:16;;;2924:34;;;;;;:62;2916:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;3020:14;3055:17;3051:2111;;;3127:18;3173:3;3168:1;3149:9;:16;;;:20;;;;:::i;:::-;3148:28;;;;:::i;:::-;3127:49;;3311:5;;;;;;;;;;;:14;;;3326:4;:19;;;;;;;;;;;;3366:10;3347:9;:16;;;:29;;;;:::i;:::-;3311:66;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3465:23;3517:10;3491:4;:23;;;:36;;;;:::i;:::-;3465:62;;3547:9;3542:494;3566:4;:12;;:19;;;;3562:1;:23;3542:494;;;3611:21;3635:4;:12;;3648:1;3635:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3611:39;;3669:22;3694:6;:21;3701:13;3694:21;;;;;;;;;;;;;;;3669:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3738:9;:20;;;3734:287;;;3783:20;3845:4;:23;;;3826:15;3807:9;:16;;;:34;;;;:::i;:::-;3806:62;;;;:::i;:::-;3783:85;;3891:5;;;;;;;;;;;:14;;;3906:13;3921:12;3891:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3973:13;3962:39;;;3988:12;3962:39;;;;;;:::i;:::-;;;;;;;;3760:261;3734:287;3592:444;;3587:3;;;;;;;3542:494;;;;3074:973;;3051:2111;;;4108:5;;;;;;;;;;;:14;;;4123:4;:19;;;;;;;;;;;;4144:1;4108:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4256:9;4251:329;4275:4;:12;;:19;;;;4271:1;:23;4251:329;;;4320:21;4344:4;:12;;4357:1;4344:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4320:39;;4378:22;4403:6;:21;4410:13;4403:21;;;;;;;;;;;;;;;4378:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4447:9;:20;;;4443:122;;;4492:5;;;;;;;;;;;:14;;;4507:13;4522:1;4492:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4443:122;4301:279;;4296:3;;;;;;;4251:329;;;;4653:9;4648:503;4672:4;:12;;:19;;;;4668:1;:23;4648:503;;;4717:21;4741:4;:12;;4754:1;4741:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4717:39;;4775:22;4800:6;:21;4807:13;4800:21;;;;;;;;;;;;;;;4775:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4845:9;:20;;;4840:296;;4890:20;4960:4;:23;;;4933:4;:23;;;4914:9;:16;;;:42;;;;:::i;:::-;4913:70;;;;:::i;:::-;4890:93;;5006:5;;;;;;;;;;;:14;;;5021:13;5036:12;5006:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5088:13;5077:39;;;5103:12;5077:39;;;;;;:::i;:::-;;;;;;;;4867:269;4840:296;4698:453;;4693:3;;;;;;;4648:503;;;;3051:2111;5213:9;:20;;;5209:172;;;5277:9;:16;;;5250:4;:23;;;:43;;;;;;;:::i;:::-;;;;;;;;5209:172;;;5353:9;:16;;;5326:4;:23;;;:43;;;;;;;:::i;:::-;;;;;;;;5209:172;5400:6;:18;5407:10;5400:18;;;;;;;;;;;;;;;;5393:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;5469:10;5460:46;;;5481:9;:16;;;5499:6;5460:46;;;;;;;:::i;:::-;;;;;;;;2747:2767;;;2675:2839;;:::o;1454:1172::-;1561:1;1552:6;:10;1544:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;1631:6;1600:5;;;;;;;;;;;:15;;;1616:10;1600:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;1592:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1727:6;1681:5;;;;;;;;;;;:15;;;1697:10;1717:4;1681:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;1673:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;1791:17;1811:5;1817:6;1811:13;;;;;;:::i;:::-;;;;;;;;;;;;;1791:33;;1896:12;1911:5;;;;;;;;;;;:18;;;1930:10;1950:4;1957:6;1911:53;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:68;;1983:7;1975:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2086:33;;;;;;;;2092:6;2086:33;;;;2100:10;2086:33;;;;;;2112:6;2086:33;;;2065:6;:18;2072:10;2065:18;;;;;;;;;;;;;;;:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2198:1;2178:4;:16;;;:21;2174:128;;2238:10;2216:4;:19;;;:32;;;;;;;;;;;;;;;;;;2174:128;2334:6;2314:4;:16;;;:26;;;;;;;:::i;:::-;;;;;;;;2351:4;:12;;2369:10;2351:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2417:10;2413:142;;;2471:6;2444:4;:23;;;:33;;;;;;;:::i;:::-;;;;;;;;2413:142;;;2537:6;2510:4;:23;;;:33;;;;;;;:::i;:::-;;;;;;;;2413:142;2579:10;2572:46;;;2591:6;2599:10;2611:6;2572:46;;;;;;;;:::i;:::-;;;;;;;;1533:1093;;1454:1172;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;925:36:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;806:21::-;;;;;;;;;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:8:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:90::-;1417:7;1460:5;1453:13;1446:21;1435:32;;1383:90;;;:::o;1479:109::-;1560:21;1575:5;1560:21;:::i;:::-;1555:3;1548:34;1479:109;;:::o;1594:99::-;1646:6;1680:5;1674:12;1664:22;;1594:99;;;:::o;1699:169::-;1783:11;1817:6;1812:3;1805:19;1857:4;1852:3;1848:14;1833:29;;1699:169;;;;:::o;1874:139::-;1963:6;1958:3;1953;1947:23;2004:1;1995:6;1990:3;1986:16;1979:27;1874:139;;;:::o;2019:102::-;2060:6;2111:2;2107:7;2102:2;2095:5;2091:14;2087:28;2077:38;;2019:102;;;:::o;2127:377::-;2215:3;2243:39;2276:5;2243:39;:::i;:::-;2298:71;2362:6;2357:3;2298:71;:::i;:::-;2291:78;;2378:65;2436:6;2431:3;2424:4;2417:5;2413:16;2378:65;:::i;:::-;2468:29;2490:6;2468:29;:::i;:::-;2463:3;2459:39;2452:46;;2219:285;2127:377;;;;:::o;2510:521::-;2673:4;2711:2;2700:9;2696:18;2688:26;;2724:71;2792:1;2781:9;2777:17;2768:6;2724:71;:::i;:::-;2805:66;2867:2;2856:9;2852:18;2843:6;2805:66;:::i;:::-;2918:9;2912:4;2908:20;2903:2;2892:9;2888:18;2881:48;2946:78;3019:4;3010:6;2946:78;:::i;:::-;2938:86;;2510:521;;;;;;:::o;3037:118::-;3124:24;3142:5;3124:24;:::i;:::-;3119:3;3112:37;3037:118;;:::o;3161:222::-;3254:4;3292:2;3281:9;3277:18;3269:26;;3305:71;3373:1;3362:9;3358:17;3349:6;3305:71;:::i;:::-;3161:222;;;;:::o;3389:116::-;3459:21;3474:5;3459:21;:::i;:::-;3452:5;3449:32;3439:60;;3495:1;3492;3485:12;3439:60;3389:116;:::o;3511:133::-;3554:5;3592:6;3579:20;3570:29;;3608:30;3632:5;3608:30;:::i;:::-;3511:133;;;;:::o;3650:117::-;3759:1;3756;3749:12;3773:117;3882:1;3879;3872:12;3896:180;3944:77;3941:1;3934:88;4041:4;4038:1;4031:15;4065:4;4062:1;4055:15;4082:281;4165:27;4187:4;4165:27;:::i;:::-;4157:6;4153:40;4295:6;4283:10;4280:22;4259:18;4247:10;4244:34;4241:62;4238:88;;;4306:18;;:::i;:::-;4238:88;4346:10;4342:2;4335:22;4125:238;4082:281;;:::o;4369:129::-;4403:6;4430:20;;:::i;:::-;4420:30;;4459:33;4487:4;4479:6;4459:33;:::i;:::-;4369:129;;;:::o;4504:308::-;4566:4;4656:18;4648:6;4645:30;4642:56;;;4678:18;;:::i;:::-;4642:56;4716:29;4738:6;4716:29;:::i;:::-;4708:37;;4800:4;4794;4790:15;4782:23;;4504:308;;;:::o;4818:148::-;4916:6;4911:3;4906;4893:30;4957:1;4948:6;4943:3;4939:16;4932:27;4818:148;;;:::o;4972:425::-;5050:5;5075:66;5091:49;5133:6;5091:49;:::i;:::-;5075:66;:::i;:::-;5066:75;;5164:6;5157:5;5150:21;5202:4;5195:5;5191:16;5240:3;5231:6;5226:3;5222:16;5219:25;5216:112;;;5247:79;;:::i;:::-;5216:112;5337:54;5384:6;5379:3;5374;5337:54;:::i;:::-;5056:341;4972:425;;;;;:::o;5417:340::-;5473:5;5522:3;5515:4;5507:6;5503:17;5499:27;5489:122;;5530:79;;:::i;:::-;5489:122;5647:6;5634:20;5672:79;5747:3;5739:6;5732:4;5724:6;5720:17;5672:79;:::i;:::-;5663:88;;5479:278;5417:340;;;;:::o;5763:648::-;5838:6;5846;5895:2;5883:9;5874:7;5870:23;5866:32;5863:119;;;5901:79;;:::i;:::-;5863:119;6021:1;6046:50;6088:7;6079:6;6068:9;6064:22;6046:50;:::i;:::-;6036:60;;5992:114;6173:2;6162:9;6158:18;6145:32;6204:18;6196:6;6193:30;6190:117;;;6226:79;;:::i;:::-;6190:117;6331:63;6386:7;6377:6;6366:9;6362:22;6331:63;:::i;:::-;6321:73;;6116:288;5763:648;;;;;:::o;6417:122::-;6490:24;6508:5;6490:24;:::i;:::-;6483:5;6480:35;6470:63;;6529:1;6526;6519:12;6470:63;6417:122;:::o;6545:139::-;6591:5;6629:6;6616:20;6607:29;;6645:33;6672:5;6645:33;:::i;:::-;6545:139;;;;:::o;6690:793::-;6774:6;6782;6790;6839:2;6827:9;6818:7;6814:23;6810:32;6807:119;;;6845:79;;:::i;:::-;6807:119;6965:1;6990:53;7035:7;7026:6;7015:9;7011:22;6990:53;:::i;:::-;6980:63;;6936:117;7092:2;7118:50;7160:7;7151:6;7140:9;7136:22;7118:50;:::i;:::-;7108:60;;7063:115;7245:2;7234:9;7230:18;7217:32;7276:18;7268:6;7265:30;7262:117;;;7298:79;;:::i;:::-;7262:117;7403:63;7458:7;7449:6;7438:9;7434:22;7403:63;:::i;:::-;7393:73;;7188:288;6690:793;;;;;:::o;7489:509::-;7558:6;7607:2;7595:9;7586:7;7582:23;7578:32;7575:119;;;7613:79;;:::i;:::-;7575:119;7761:1;7750:9;7746:17;7733:31;7791:18;7783:6;7780:30;7777:117;;;7813:79;;:::i;:::-;7777:117;7918:63;7973:7;7964:6;7953:9;7949:22;7918:63;:::i;:::-;7908:73;;7704:287;7489:509;;;;:::o;8004:553::-;8181:4;8219:3;8208:9;8204:19;8196:27;;8233:71;8301:1;8290:9;8286:17;8277:6;8233:71;:::i;:::-;8314:72;8382:2;8371:9;8367:18;8358:6;8314:72;:::i;:::-;8396;8464:2;8453:9;8449:18;8440:6;8396:72;:::i;:::-;8478;8546:2;8535:9;8531:18;8522:6;8478:72;:::i;:::-;8004:553;;;;;;;:::o;8563:60::-;8591:3;8612:5;8605:12;;8563:60;;;:::o;8629:142::-;8679:9;8712:53;8730:34;8739:24;8757:5;8739:24;:::i;:::-;8730:34;:::i;:::-;8712:53;:::i;:::-;8699:66;;8629:142;;;:::o;8777:126::-;8827:9;8860:37;8891:5;8860:37;:::i;:::-;8847:50;;8777:126;;;:::o;8909:143::-;8976:9;9009:37;9040:5;9009:37;:::i;:::-;8996:50;;8909:143;;;:::o;9058:165::-;9162:54;9210:5;9162:54;:::i;:::-;9157:3;9150:67;9058:165;;:::o;9229:256::-;9339:4;9377:2;9366:9;9362:18;9354:26;;9390:88;9475:1;9464:9;9460:17;9451:6;9390:88;:::i;:::-;9229:256;;;;:::o;9491:180::-;9539:77;9536:1;9529:88;9636:4;9633:1;9626:15;9660:4;9657:1;9650:15;9677:320;9721:6;9758:1;9752:4;9748:12;9738:22;;9805:1;9799:4;9795:12;9826:18;9816:81;;9882:4;9874:6;9870:17;9860:27;;9816:81;9944:2;9936:6;9933:14;9913:18;9910:38;9907:84;;9963:18;;:::i;:::-;9907:84;9728:269;9677:320;;;:::o;10003:148::-;10105:11;10142:3;10127:18;;10003:148;;;;:::o;10157:390::-;10263:3;10291:39;10324:5;10291:39;:::i;:::-;10346:89;10428:6;10423:3;10346:89;:::i;:::-;10339:96;;10444:65;10502:6;10497:3;10490:4;10483:5;10479:16;10444:65;:::i;:::-;10534:6;10529:3;10525:16;10518:23;;10267:280;10157:390;;;;:::o;10553:275::-;10685:3;10707:95;10798:3;10789:6;10707:95;:::i;:::-;10700:102;;10819:3;10812:10;;10553:275;;;;:::o;10834:164::-;10974:16;10970:1;10962:6;10958:14;10951:40;10834:164;:::o;11004:366::-;11146:3;11167:67;11231:2;11226:3;11167:67;:::i;:::-;11160:74;;11243:93;11332:3;11243:93;:::i;:::-;11361:2;11356:3;11352:12;11345:19;;11004:366;;;:::o;11376:419::-;11542:4;11580:2;11569:9;11565:18;11557:26;;11629:9;11623:4;11619:20;11615:1;11604:9;11600:17;11593:47;11657:131;11783:4;11657:131;:::i;:::-;11649:139;;11376:419;;;:::o;11801:166::-;11941:18;11937:1;11929:6;11925:14;11918:42;11801:166;:::o;11973:366::-;12115:3;12136:67;12200:2;12195:3;12136:67;:::i;:::-;12129:74;;12212:93;12301:3;12212:93;:::i;:::-;12330:2;12325:3;12321:12;12314:19;;11973:366;;;:::o;12345:419::-;12511:4;12549:2;12538:9;12534:18;12526:26;;12598:9;12592:4;12588:20;12584:1;12573:9;12569:17;12562:47;12626:131;12752:4;12626:131;:::i;:::-;12618:139;;12345:419;;;:::o;12770:180::-;12818:77;12815:1;12808:88;12915:4;12912:1;12905:15;12939:4;12936:1;12929:15;12956:410;12996:7;13019:20;13037:1;13019:20;:::i;:::-;13014:25;;13053:20;13071:1;13053:20;:::i;:::-;13048:25;;13108:1;13105;13101:9;13130:30;13148:11;13130:30;:::i;:::-;13119:41;;13309:1;13300:7;13296:15;13293:1;13290:22;13270:1;13263:9;13243:83;13220:139;;13339:18;;:::i;:::-;13220:139;13004:362;12956:410;;;;:::o;13372:180::-;13420:77;13417:1;13410:88;13517:4;13514:1;13507:15;13541:4;13538:1;13531:15;13558:185;13598:1;13615:20;13633:1;13615:20;:::i;:::-;13610:25;;13649:20;13667:1;13649:20;:::i;:::-;13644:25;;13688:1;13678:35;;13693:18;;:::i;:::-;13678:35;13735:1;13732;13728:9;13723:14;;13558:185;;;;:::o;13749:191::-;13789:3;13808:20;13826:1;13808:20;:::i;:::-;13803:25;;13842:20;13860:1;13842:20;:::i;:::-;13837:25;;13885:1;13882;13878:9;13871:16;;13906:3;13903:1;13900:10;13897:36;;;13913:18;;:::i;:::-;13897:36;13749:191;;;;:::o;13946:332::-;14067:4;14105:2;14094:9;14090:18;14082:26;;14118:71;14186:1;14175:9;14171:17;14162:6;14118:71;:::i;:::-;14199:72;14267:2;14256:9;14252:18;14243:6;14199:72;:::i;:::-;13946:332;;;;;:::o;14284:137::-;14338:5;14369:6;14363:13;14354:22;;14385:30;14409:5;14385:30;:::i;:::-;14284:137;;;;:::o;14427:345::-;14494:6;14543:2;14531:9;14522:7;14518:23;14514:32;14511:119;;;14549:79;;:::i;:::-;14511:119;14669:1;14694:61;14747:7;14738:6;14727:9;14723:22;14694:61;:::i;:::-;14684:71;;14640:125;14427:345;;;;:::o;14778:194::-;14818:4;14838:20;14856:1;14838:20;:::i;:::-;14833:25;;14872:20;14890:1;14872:20;:::i;:::-;14867:25;;14916:1;14913;14909:9;14901:17;;14940:1;14934:4;14931:11;14928:37;;;14945:18;;:::i;:::-;14928:37;14778:194;;;;:::o;14978:180::-;15026:77;15023:1;15016:88;15123:4;15120:1;15113:15;15147:4;15144:1;15137:15;15164:222;15257:4;15295:2;15284:9;15280:18;15272:26;;15308:71;15376:1;15365:9;15361:17;15352:6;15308:71;:::i;:::-;15164:222;;;;:::o;15392:85::-;15437:7;15466:5;15455:16;;15392:85;;;:::o;15483:158::-;15541:9;15574:61;15592:42;15601:32;15627:5;15601:32;:::i;:::-;15592:42;:::i;:::-;15574:61;:::i;:::-;15561:74;;15483:158;;;:::o;15647:147::-;15742:45;15781:5;15742:45;:::i;:::-;15737:3;15730:58;15647:147;;:::o;15800:348::-;15929:4;15967:2;15956:9;15952:18;15944:26;;15980:71;16048:1;16037:9;16033:17;16024:6;15980:71;:::i;:::-;16061:80;16137:2;16126:9;16122:18;16113:6;16061:80;:::i;:::-;15800:348;;;;;:::o;16154:332::-;16275:4;16313:2;16302:9;16298:18;16290:26;;16326:71;16394:1;16383:9;16379:17;16370:6;16326:71;:::i;:::-;16407:72;16475:2;16464:9;16460:18;16451:6;16407:72;:::i;:::-;16154:332;;;;;:::o;16492:164::-;16632:16;16628:1;16620:6;16616:14;16609:40;16492:164;:::o;16662:366::-;16804:3;16825:67;16889:2;16884:3;16825:67;:::i;:::-;16818:74;;16901:93;16990:3;16901:93;:::i;:::-;17019:2;17014:3;17010:12;17003:19;;16662:366;;;:::o;17034:419::-;17200:4;17238:2;17227:9;17223:18;17215:26;;17287:9;17281:4;17277:20;17273:1;17262:9;17258:17;17251:47;17315:131;17441:4;17315:131;:::i;:::-;17307:139;;17034:419;;;:::o;17459:143::-;17516:5;17547:6;17541:13;17532:22;;17563:33;17590:5;17563:33;:::i;:::-;17459:143;;;;:::o;17608:351::-;17678:6;17727:2;17715:9;17706:7;17702:23;17698:32;17695:119;;;17733:79;;:::i;:::-;17695:119;17853:1;17878:64;17934:7;17925:6;17914:9;17910:22;17878:64;:::i;:::-;17868:74;;17824:128;17608:351;;;;:::o;17965:170::-;18105:22;18101:1;18093:6;18089:14;18082:46;17965:170;:::o;18141:366::-;18283:3;18304:67;18368:2;18363:3;18304:67;:::i;:::-;18297:74;;18380:93;18469:3;18380:93;:::i;:::-;18498:2;18493:3;18489:12;18482:19;;18141:366;;;:::o;18513:419::-;18679:4;18717:2;18706:9;18702:18;18694:26;;18766:9;18760:4;18756:20;18752:1;18741:9;18737:17;18730:47;18794:131;18920:4;18794:131;:::i;:::-;18786:139;;18513:419;;;:::o;18938:332::-;19059:4;19097:2;19086:9;19082:18;19074:26;;19110:71;19178:1;19167:9;19163:17;19154:6;19110:71;:::i;:::-;19191:72;19259:2;19248:9;19244:18;19235:6;19191:72;:::i;:::-;18938:332;;;;;:::o;19276:227::-;19416:34;19412:1;19404:6;19400:14;19393:58;19485:10;19480:2;19472:6;19468:15;19461:35;19276:227;:::o;19509:366::-;19651:3;19672:67;19736:2;19731:3;19672:67;:::i;:::-;19665:74;;19748:93;19837:3;19748:93;:::i;:::-;19866:2;19861:3;19857:12;19850:19;;19509:366;;;:::o;19881:419::-;20047:4;20085:2;20074:9;20070:18;20062:26;;20134:9;20128:4;20124:20;20120:1;20109:9;20105:17;20098:47;20162:131;20288:4;20162:131;:::i;:::-;20154:139;;19881:419;;;:::o;20306:442::-;20455:4;20493:2;20482:9;20478:18;20470:26;;20506:71;20574:1;20563:9;20559:17;20550:6;20506:71;:::i;:::-;20587:72;20655:2;20644:9;20640:18;20631:6;20587:72;:::i;:::-;20669;20737:2;20726:9;20722:18;20713:6;20669:72;:::i;:::-;20306:442;;;;;;:::o;20754:171::-;20894:23;20890:1;20882:6;20878:14;20871:47;20754:171;:::o;20931:366::-;21073:3;21094:67;21158:2;21153:3;21094:67;:::i;:::-;21087:74;;21170:93;21259:3;21170:93;:::i;:::-;21288:2;21283:3;21279:12;21272:19;;20931:366;;;:::o;21303:419::-;21469:4;21507:2;21496:9;21492:18;21484:26;;21556:9;21550:4;21546:20;21542:1;21531:9;21527:17;21520:47;21584:131;21710:4;21584:131;:::i;:::-;21576:139;;21303:419;;;:::o;21728:141::-;21777:4;21800:3;21792:11;;21823:3;21820:1;21813:14;21857:4;21854:1;21844:18;21836:26;;21728:141;;;:::o;21875:93::-;21912:6;21959:2;21954;21947:5;21943:14;21939:23;21929:33;;21875:93;;;:::o;21974:107::-;22018:8;22068:5;22062:4;22058:16;22037:37;;21974:107;;;;:::o;22087:393::-;22156:6;22206:1;22194:10;22190:18;22229:97;22259:66;22248:9;22229:97;:::i;:::-;22347:39;22377:8;22366:9;22347:39;:::i;:::-;22335:51;;22419:4;22415:9;22408:5;22404:21;22395:30;;22468:4;22458:8;22454:19;22447:5;22444:30;22434:40;;22163:317;;22087:393;;;;;:::o;22486:142::-;22536:9;22569:53;22587:34;22596:24;22614:5;22596:24;:::i;:::-;22587:34;:::i;:::-;22569:53;:::i;:::-;22556:66;;22486:142;;;:::o;22634:75::-;22677:3;22698:5;22691:12;;22634:75;;;:::o;22715:269::-;22825:39;22856:7;22825:39;:::i;:::-;22886:91;22935:41;22959:16;22935:41;:::i;:::-;22927:6;22920:4;22914:11;22886:91;:::i;:::-;22880:4;22873:105;22791:193;22715:269;;;:::o;22990:73::-;23035:3;22990:73;:::o;23069:189::-;23146:32;;:::i;:::-;23187:65;23245:6;23237;23231:4;23187:65;:::i;:::-;23122:136;23069:189;;:::o;23264:186::-;23324:120;23341:3;23334:5;23331:14;23324:120;;;23395:39;23432:1;23425:5;23395:39;:::i;:::-;23368:1;23361:5;23357:13;23348:22;;23324:120;;;23264:186;;:::o;23456:543::-;23557:2;23552:3;23549:11;23546:446;;;23591:38;23623:5;23591:38;:::i;:::-;23675:29;23693:10;23675:29;:::i;:::-;23665:8;23661:44;23858:2;23846:10;23843:18;23840:49;;;23879:8;23864:23;;23840:49;23902:80;23958:22;23976:3;23958:22;:::i;:::-;23948:8;23944:37;23931:11;23902:80;:::i;:::-;23561:431;;23546:446;23456:543;;;:::o;24005:117::-;24059:8;24109:5;24103:4;24099:16;24078:37;;24005:117;;;;:::o;24128:169::-;24172:6;24205:51;24253:1;24249:6;24241:5;24238:1;24234:13;24205:51;:::i;:::-;24201:56;24286:4;24280;24276:15;24266:25;;24179:118;24128:169;;;;:::o;24302:295::-;24378:4;24524:29;24549:3;24543:4;24524:29;:::i;:::-;24516:37;;24586:3;24583:1;24579:11;24573:4;24570:21;24562:29;;24302:295;;;;:::o;24602:1395::-;24719:37;24752:3;24719:37;:::i;:::-;24821:18;24813:6;24810:30;24807:56;;;24843:18;;:::i;:::-;24807:56;24887:38;24919:4;24913:11;24887:38;:::i;:::-;24972:67;25032:6;25024;25018:4;24972:67;:::i;:::-;25066:1;25090:4;25077:17;;25122:2;25114:6;25111:14;25139:1;25134:618;;;;25796:1;25813:6;25810:77;;;25862:9;25857:3;25853:19;25847:26;25838:35;;25810:77;25913:67;25973:6;25966:5;25913:67;:::i;:::-;25907:4;25900:81;25769:222;25104:887;;25134:618;25186:4;25182:9;25174:6;25170:22;25220:37;25252:4;25220:37;:::i;:::-;25279:1;25293:208;25307:7;25304:1;25301:14;25293:208;;;25386:9;25381:3;25377:19;25371:26;25363:6;25356:42;25437:1;25429:6;25425:14;25415:24;;25484:2;25473:9;25469:18;25456:31;;25330:4;25327:1;25323:12;25318:17;;25293:208;;;25529:6;25520:7;25517:19;25514:179;;;25587:9;25582:3;25578:19;25572:26;25630:48;25672:4;25664:6;25660:17;25649:9;25630:48;:::i;:::-;25622:6;25615:64;25537:156;25514:179;25739:1;25735;25727:6;25723:14;25719:22;25713:4;25706:36;25141:611;;;25104:887;;24694:1303;;;24602:1395;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1813800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"owner()": "2560",
								"posts(string)": "infinite",
								"renounceOwnership()": "infinite",
								"stake(uint256,bool,string)": "infinite",
								"stakes(address)": "infinite",
								"token()": "infinite",
								"transferOwnership(address)": "infinite",
								"unstake(bool,string)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 180,
									"end": 5517,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 180,
									"end": 5517,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 180,
									"end": 5517,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1229,
									"end": 1411,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1293,
									"end": 1305,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1335,
									"end": 1347,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1323,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1318,
									"end": 1323,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1318,
									"end": 1348,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1318,
									"end": 1348,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1348,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1348,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1348,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1348,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1318,
									"end": 1348,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1348,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1348,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1348,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1348,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1348,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1318,
									"end": 1348,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1348,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1348,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1348,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1348,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1318,
									"end": 1348,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1229,
									"end": 1411,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 180,
									"end": 5517,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 180,
									"end": 5517,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 8,
									"value": "39"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 180,
									"end": 5517,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 180,
									"end": 5517,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 180,
									"end": 5517,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 5517,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 180,
									"end": 5517,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 5517,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 5517,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 180,
									"end": 5517,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 5517,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a1a88c1ecb151e57d40212ea265b8bbf29268c7c2b00840f79204cd0bb3d3d8364736f6c634300081a0033",
									".code": [
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH",
											"source": 6,
											"value": "C0497AC8"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH",
											"source": 6,
											"value": "C0497AC8"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH",
											"source": 6,
											"value": "F8300FCA"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH",
											"source": 6,
											"value": "FC0C546A"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH",
											"source": 6,
											"value": "16934FC4"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH",
											"source": 6,
											"value": "B7F5A5A3"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 180,
											"end": 5517,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 879,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 879,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 879,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2675,
											"end": 5514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2675,
											"end": 5514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1454,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1454,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 925,
											"end": 961,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 925,
											"end": 961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 925,
											"end": 961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 925,
											"end": 961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 806,
											"end": 827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 806,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 806,
											"end": 827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 806,
											"end": 827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 806,
											"end": 827,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 806,
											"end": 827,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 806,
											"end": 827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 806,
											"end": 827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 806,
											"end": 827,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 879,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 879,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 879,
											"end": 918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 879,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2789,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2758,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2758,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2837,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2838,
											"end": 2844,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2832,
											"end": 2845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2845,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2845,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2845,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2886,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2882,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2882,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2882,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2858,
											"end": 2905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2858,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2978,
											"end": 2984,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2986,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2986,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2986,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2986,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2962,
											"end": 2986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2962,
											"end": 2986,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2949,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2924,
											"end": 2958,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2924,
											"end": 2958,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2924,
											"end": 2958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2924,
											"end": 2958,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2924,
											"end": 2958,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2924,
											"end": 2958,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2924,
											"end": 2986,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2916,
											"end": 3007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2916,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3055,
											"end": 3072,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 5162,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3051,
											"end": 5162,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3168,
											"end": 3169,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3149,
											"end": 3158,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3149,
											"end": 3165,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3165,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3149,
											"end": 3169,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3149,
											"end": 3169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3169,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3149,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3148,
											"end": 3176,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3148,
											"end": 3176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3176,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3148,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3316,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3311,
											"end": 3316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3316,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3316,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3311,
											"end": 3316,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3316,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3316,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3311,
											"end": 3316,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3325,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3311,
											"end": 3325,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3325,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 3326,
											"end": 3330,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3345,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3345,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3345,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3345,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3345,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3326,
											"end": 3345,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3345,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3345,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3345,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3326,
											"end": 3345,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3376,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3363,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3347,
											"end": 3376,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3347,
											"end": 3376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3376,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3347,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3311,
											"end": 3377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3311,
											"end": 3377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3488,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3495,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3514,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3491,
											"end": 3527,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3491,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3491,
											"end": 3527,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3491,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3547,
											"end": 3556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 4036,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3542,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3570,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3578,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3566,
											"end": 3578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3563,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3562,
											"end": 3585,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 4036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3542,
											"end": 4036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3635,
											"end": 3639,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3635,
											"end": 3647,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3648,
											"end": 3649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 3635,
											"end": 3650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3635,
											"end": 3650,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3694,
											"end": 3700,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3694,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3714,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3694,
											"end": 3715,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3694,
											"end": 3715,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3694,
											"end": 3715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3694,
											"end": 3715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3694,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3694,
											"end": 3715,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3669,
											"end": 3715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3669,
											"end": 3715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3738,
											"end": 3747,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3738,
											"end": 3758,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3734,
											"end": 4021,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3734,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3734,
											"end": 4021,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3803,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3849,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3868,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3845,
											"end": 3868,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3868,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 3841,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3816,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3823,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3823,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3823,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3807,
											"end": 3841,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3807,
											"end": 3841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3807,
											"end": 3841,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3807,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3806,
											"end": 3868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3806,
											"end": 3868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3806,
											"end": 3868,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3806,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3868,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3783,
											"end": 3868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3896,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3891,
											"end": 3896,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3896,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3896,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3891,
											"end": 3896,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3896,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3896,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3891,
											"end": 3896,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3905,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3891,
											"end": 3905,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3905,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 3906,
											"end": 3919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3921,
											"end": 3933,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3891,
											"end": 3934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3891,
											"end": 3934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3973,
											"end": 3986,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 4001,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3962,
											"end": 4001,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 4001,
											"name": "PUSH",
											"source": 6,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 3988,
											"end": 4000,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 4001,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3962,
											"end": 4001,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3962,
											"end": 4001,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 4001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3962,
											"end": 4001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 4001,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3962,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 4001,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3962,
											"end": 4001,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 4001,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 4001,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 4001,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 4001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3962,
											"end": 4001,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 4021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3734,
											"end": 4021,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3734,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 4036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3592,
											"end": 4036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3590,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3587,
											"end": 3590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3542,
											"end": 4036,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 4036,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3542,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3542,
											"end": 4036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 4047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 4047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3051,
											"end": 5162,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 5162,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3051,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4113,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4108,
											"end": 4113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4113,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4113,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4108,
											"end": 4113,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4113,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4113,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4108,
											"end": 4113,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4122,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4108,
											"end": 4122,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4122,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 4123,
											"end": 4127,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4142,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4142,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4123,
											"end": 4142,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4142,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4123,
											"end": 4142,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4144,
											"end": 4145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4108,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4108,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4256,
											"end": 4265,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4251,
											"end": 4580,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4251,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4275,
											"end": 4287,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4275,
											"end": 4287,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4275,
											"end": 4294,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4275,
											"end": 4294,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4275,
											"end": 4294,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4275,
											"end": 4294,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4271,
											"end": 4272,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4271,
											"end": 4294,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4251,
											"end": 4580,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4251,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4251,
											"end": 4580,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4320,
											"end": 4341,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4344,
											"end": 4348,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4356,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4344,
											"end": 4356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4357,
											"end": 4358,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 4344,
											"end": 4359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4344,
											"end": 4359,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4320,
											"end": 4359,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4320,
											"end": 4359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4400,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4403,
											"end": 4409,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4403,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4410,
											"end": 4423,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4403,
											"end": 4424,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4403,
											"end": 4424,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4403,
											"end": 4424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4403,
											"end": 4424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4403,
											"end": 4424,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4378,
											"end": 4424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4378,
											"end": 4424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4424,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4456,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4467,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4467,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4447,
											"end": 4467,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4443,
											"end": 4565,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4443,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4443,
											"end": 4565,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4497,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4492,
											"end": 4497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4497,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4497,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4497,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4497,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4492,
											"end": 4497,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4497,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4497,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4497,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4492,
											"end": 4497,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4506,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4492,
											"end": 4506,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4506,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 4507,
											"end": 4520,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4522,
											"end": 4523,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 4492,
											"end": 4524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4492,
											"end": 4524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4443,
											"end": 4565,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 4443,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4301,
											"end": 4580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4301,
											"end": 4580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4299,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4299,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4299,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4296,
											"end": 4299,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4299,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4296,
											"end": 4299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4251,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4251,
											"end": 4580,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4251,
											"end": 4580,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4251,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4251,
											"end": 4580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4653,
											"end": 4662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 5151,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4648,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4672,
											"end": 4676,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4672,
											"end": 4684,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4672,
											"end": 4684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4672,
											"end": 4691,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4672,
											"end": 4691,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4672,
											"end": 4691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4672,
											"end": 4691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4669,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4668,
											"end": 4691,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4648,
											"end": 5151,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4648,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4648,
											"end": 5151,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4738,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4745,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4753,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4741,
											"end": 4753,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4754,
											"end": 4755,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 4741,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4741,
											"end": 4756,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4756,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4717,
											"end": 4756,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4797,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4800,
											"end": 4806,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4800,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4820,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4800,
											"end": 4821,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4800,
											"end": 4821,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4800,
											"end": 4821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4800,
											"end": 4821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4800,
											"end": 4821,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4775,
											"end": 4821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4775,
											"end": 4821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4775,
											"end": 4821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4865,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4845,
											"end": 4865,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4865,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4840,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4840,
											"end": 5136,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4910,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4960,
											"end": 4964,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4960,
											"end": 4983,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4960,
											"end": 4983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4960,
											"end": 4983,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4937,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4956,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4933,
											"end": 4956,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4956,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4914,
											"end": 4923,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4914,
											"end": 4930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4914,
											"end": 4930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4914,
											"end": 4930,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4914,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4914,
											"end": 4956,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4914,
											"end": 4956,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4914,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4914,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4914,
											"end": 4956,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 4914,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4913,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4913,
											"end": 4983,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4913,
											"end": 4983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4913,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 4913,
											"end": 4983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4913,
											"end": 4983,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 4913,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4890,
											"end": 4983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5011,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5006,
											"end": 5011,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5011,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5011,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5006,
											"end": 5011,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5011,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5011,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5006,
											"end": 5011,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5020,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5006,
											"end": 5020,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5020,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 5021,
											"end": 5034,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5036,
											"end": 5048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5006,
											"end": 5049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 5006,
											"end": 5049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5006,
											"end": 5049,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5101,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 6,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 5103,
											"end": 5115,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 5077,
											"end": 5116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5077,
											"end": 5116,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4867,
											"end": 5136,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4840,
											"end": 5136,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 4840,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 5151,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4698,
											"end": 5151,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4693,
											"end": 4696,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4693,
											"end": 4696,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4693,
											"end": 4696,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4693,
											"end": 4696,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4693,
											"end": 4696,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4693,
											"end": 4696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4693,
											"end": 4696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4648,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4648,
											"end": 5151,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4648,
											"end": 5151,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4648,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4648,
											"end": 5151,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3051,
											"end": 5162,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3051,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5222,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5233,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5213,
											"end": 5233,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5233,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5209,
											"end": 5381,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5209,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 5209,
											"end": 5381,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5286,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5293,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5277,
											"end": 5293,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5277,
											"end": 5293,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5273,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5250,
											"end": 5273,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5273,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5250,
											"end": 5293,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5293,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5293,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 5250,
											"end": 5293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5250,
											"end": 5293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5293,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 5250,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5293,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5293,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5293,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5250,
											"end": 5293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5209,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5209,
											"end": 5381,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5209,
											"end": 5381,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 5209,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 5362,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 5369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5353,
											"end": 5369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5353,
											"end": 5369,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5330,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5349,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5326,
											"end": 5349,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5349,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5326,
											"end": 5369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5369,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5326,
											"end": 5369,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5326,
											"end": 5369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5369,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 5326,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5369,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5369,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5326,
											"end": 5369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5209,
											"end": 5381,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5209,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5406,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5400,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5417,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5400,
											"end": 5418,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5400,
											"end": 5418,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5418,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5418,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5400,
											"end": 5418,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5418,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5418,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5400,
											"end": 5418,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5400,
											"end": 5418,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5393,
											"end": 5418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5418,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5479,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5506,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5460,
											"end": 5506,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5506,
											"name": "PUSH",
											"source": 6,
											"value": "7FC4727E062E336010F2C282598EF5F14FACB3DE68CF8195C2F23E1454B2B74E"
										},
										{
											"begin": 5481,
											"end": 5490,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5481,
											"end": 5497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5481,
											"end": 5497,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5481,
											"end": 5497,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5505,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5506,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5460,
											"end": 5506,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5460,
											"end": 5506,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5506,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5460,
											"end": 5506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5506,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5460,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5506,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5460,
											"end": 5506,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5506,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5506,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5506,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5506,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 5514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 5514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 5514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 5514,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2675,
											"end": 5514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1552,
											"end": 1562,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1544,
											"end": 1581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 1544,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1631,
											"end": 1637,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1600,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1605,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1600,
											"end": 1605,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1605,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1600,
											"end": 1605,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1615,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1600,
											"end": 1615,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1615,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 1616,
											"end": 1626,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1600,
											"end": 1627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1600,
											"end": 1627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 1600,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1637,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1600,
											"end": 1637,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 1592,
											"end": 1662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 1592,
											"end": 1662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1733,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1681,
											"end": 1686,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1696,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1681,
											"end": 1696,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1696,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 1697,
											"end": 1707,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1717,
											"end": 1721,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 1681,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1681,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1733,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1733,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1673,
											"end": 1778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1673,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1808,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1816,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1811,
											"end": 1824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1896,
											"end": 1908,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1911,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1916,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1911,
											"end": 1916,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1916,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1911,
											"end": 1916,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1929,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1911,
											"end": 1929,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1929,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1930,
											"end": 1940,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1950,
											"end": 1954,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1963,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1911,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1911,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1911,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1896,
											"end": 1964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1896,
											"end": 1964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 1975,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1975,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2098,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2110,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2118,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2071,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2082,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2083,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2065,
											"end": 2119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2182,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2199,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2174,
											"end": 2302,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2248,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2235,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2235,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2235,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2302,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2174,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2334,
											"end": 2340,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2318,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2330,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2314,
											"end": 2330,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2330,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2340,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2340,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2340,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2314,
											"end": 2340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2314,
											"end": 2340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2340,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2314,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2340,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2340,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2340,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2340,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2340,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2314,
											"end": 2340,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2351,
											"end": 2363,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2379,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2417,
											"end": 2427,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2413,
											"end": 2555,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2413,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2413,
											"end": 2555,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2477,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2467,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2444,
											"end": 2467,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2467,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2444,
											"end": 2477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2444,
											"end": 2477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2413,
											"end": 2555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2413,
											"end": 2555,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2413,
											"end": 2555,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2413,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2537,
											"end": 2543,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2514,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2533,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2510,
											"end": 2533,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2533,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2543,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2543,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2543,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2510,
											"end": 2543,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2543,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2510,
											"end": 2543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2543,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2510,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2543,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2543,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2543,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2543,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2413,
											"end": 2555,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 2413,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2589,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "PUSH",
											"source": 6,
											"value": "56E5C3A64EE1D63CC76545AE78B97F7BB9E3F402463F7F9F86428F5154FC5EAF"
										},
										{
											"begin": 2591,
											"end": 2597,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2609,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2617,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2572,
											"end": 2618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2618,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 2626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1533,
											"end": 2626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 2626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 2626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 925,
											"end": 961,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 925,
											"end": 961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 925,
											"end": 961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 806,
											"end": 827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 806,
											"end": 827,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 806,
											"end": 827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 806,
											"end": 827,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 806,
											"end": 827,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 806,
											"end": 827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "154"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "211"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "46"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "211"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "213"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "212"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "213"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "214"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "215"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "214"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "212"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "215"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "216"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "216"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1473,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 1383,
											"end": 1473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1417,
											"end": 1424,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1465,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1466,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1467,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1435,
											"end": 1467,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1473,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1473,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1473,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1588,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1479,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 1575,
											"end": 1580,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 1560,
											"end": 1581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1560,
											"end": 1581,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 1560,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1558,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1548,
											"end": 1582,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1594,
											"end": 1693,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1594,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1685,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1674,
											"end": 1686,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1686,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1594,
											"end": 1693,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1594,
											"end": 1693,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1594,
											"end": 1693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1594,
											"end": 1693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1868,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1699,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 1794,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1812,
											"end": 1815,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1824,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1861,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1852,
											"end": 1855,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1848,
											"end": 1862,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1862,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1868,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1868,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1874,
											"end": 2013,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1874,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 1969,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1958,
											"end": 1961,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1953,
											"end": 1956,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1947,
											"end": 1970,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 2004,
											"end": 2005,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1990,
											"end": 1993,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1986,
											"end": 2002,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1979,
											"end": 2006,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1874,
											"end": 2013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1874,
											"end": 2013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1874,
											"end": 2013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1874,
											"end": 2013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2019,
											"end": 2121,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2019,
											"end": 2121,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2113,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2107,
											"end": 2114,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2102,
											"end": 2104,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2095,
											"end": 2100,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2091,
											"end": 2105,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2087,
											"end": 2115,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2077,
											"end": 2115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2019,
											"end": 2121,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2019,
											"end": 2121,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2019,
											"end": 2121,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2019,
											"end": 2121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2504,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2127,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2215,
											"end": 2218,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 2276,
											"end": 2281,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 2243,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2243,
											"end": 2282,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 2243,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2360,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 2298,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2369,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 2298,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2291,
											"end": 2369,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2291,
											"end": 2369,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 2436,
											"end": 2442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2431,
											"end": 2434,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2424,
											"end": 2428,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2417,
											"end": 2422,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2429,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2378,
											"end": 2443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2378,
											"end": 2443,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 2378,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2468,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 2490,
											"end": 2496,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2468,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2468,
											"end": 2497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2468,
											"end": 2497,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 2468,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2463,
											"end": 2466,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2498,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2498,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2498,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2219,
											"end": 2504,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2504,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2504,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2504,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2504,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2127,
											"end": 2504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 3031,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 2510,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2673,
											"end": 2677,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2713,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2700,
											"end": 2709,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2696,
											"end": 2714,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2688,
											"end": 2714,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2688,
											"end": 2714,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2724,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2790,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2777,
											"end": 2794,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2774,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2724,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2724,
											"end": 2795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2724,
											"end": 2795,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 2724,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 2867,
											"end": 2869,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2856,
											"end": 2865,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2849,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 2805,
											"end": 2871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2805,
											"end": 2871,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 2805,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2918,
											"end": 2927,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 2916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 2928,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2903,
											"end": 2905,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2892,
											"end": 2901,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 2906,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2881,
											"end": 2929,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 3019,
											"end": 3023,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3010,
											"end": 3016,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2946,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 3024,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 2946,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2938,
											"end": 3024,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2938,
											"end": 3024,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 3031,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 3031,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 3031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 3031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 3031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 3031,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2510,
											"end": 3031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3155,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3037,
											"end": 3155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 3142,
											"end": 3147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 3124,
											"end": 3148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3124,
											"end": 3148,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 3124,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3119,
											"end": 3122,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3112,
											"end": 3149,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3037,
											"end": 3155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3161,
											"end": 3383,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 3161,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3254,
											"end": 3258,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3294,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3281,
											"end": 3290,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3277,
											"end": 3295,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3269,
											"end": 3295,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3305,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 3373,
											"end": 3374,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3362,
											"end": 3371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3358,
											"end": 3375,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3349,
											"end": 3355,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3305,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 3305,
											"end": 3376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3305,
											"end": 3376,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 3305,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3161,
											"end": 3383,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3161,
											"end": 3383,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3161,
											"end": 3383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3161,
											"end": 3383,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3161,
											"end": 3383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3505,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 3389,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3459,
											"end": 3480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 3474,
											"end": 3479,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3459,
											"end": 3480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 3459,
											"end": 3480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3459,
											"end": 3480,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 3459,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3452,
											"end": 3457,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3449,
											"end": 3481,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3439,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 3439,
											"end": 3499,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3495,
											"end": 3496,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3492,
											"end": 3493,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3485,
											"end": 3497,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3439,
											"end": 3499,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 3439,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3505,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3389,
											"end": 3505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3511,
											"end": 3644,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 3511,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3554,
											"end": 3559,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3592,
											"end": 3598,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3599,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3599,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3570,
											"end": 3599,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3608,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3608,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 3608,
											"end": 3638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3608,
											"end": 3638,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 3608,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3511,
											"end": 3644,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3511,
											"end": 3644,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3511,
											"end": 3644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3511,
											"end": 3644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3511,
											"end": 3644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3650,
											"end": 3767,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 3650,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3759,
											"end": 3760,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3756,
											"end": 3757,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3749,
											"end": 3761,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3773,
											"end": 3890,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 3773,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3882,
											"end": 3883,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 3880,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3872,
											"end": 3884,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3896,
											"end": 4076,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 3896,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3944,
											"end": 4021,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 4022,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4041,
											"end": 4045,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 4038,
											"end": 4039,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4031,
											"end": 4046,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4065,
											"end": 4069,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4062,
											"end": 4063,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4055,
											"end": 4070,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4082,
											"end": 4363,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 4082,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 4187,
											"end": 4191,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 4165,
											"end": 4192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "tag",
											"source": 8,
											"value": "337"
										},
										{
											"begin": 4165,
											"end": 4192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4157,
											"end": 4163,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4153,
											"end": 4193,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4295,
											"end": 4301,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4283,
											"end": 4293,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4280,
											"end": 4302,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4259,
											"end": 4277,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4247,
											"end": 4257,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4278,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4241,
											"end": 4303,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4238,
											"end": 4326,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4238,
											"end": 4326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 4238,
											"end": 4326,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4306,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 4306,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 4306,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4306,
											"end": 4324,
											"name": "tag",
											"source": 8,
											"value": "339"
										},
										{
											"begin": 4306,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4238,
											"end": 4326,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 4238,
											"end": 4326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4346,
											"end": 4356,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4342,
											"end": 4344,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4335,
											"end": 4357,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4125,
											"end": 4363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4082,
											"end": 4363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4082,
											"end": 4363,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4082,
											"end": 4363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4498,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 4369,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4403,
											"end": 4409,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4430,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 4430,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 4430,
											"end": 4450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4430,
											"end": 4450,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 4430,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4450,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4450,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4459,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 4487,
											"end": 4491,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4485,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4459,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 4459,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4459,
											"end": 4492,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 4459,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4498,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4498,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4498,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4812,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 4504,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4570,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4656,
											"end": 4674,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4645,
											"end": 4675,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4642,
											"end": 4698,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4642,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 4642,
											"end": 4698,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4678,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 4678,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 4678,
											"end": 4696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4678,
											"end": 4696,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 4678,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4642,
											"end": 4698,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 4642,
											"end": 4698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 4738,
											"end": 4744,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4745,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 4716,
											"end": 4745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4716,
											"end": 4745,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 4716,
											"end": 4745,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4708,
											"end": 4745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4708,
											"end": 4745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4800,
											"end": 4804,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4794,
											"end": 4798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4790,
											"end": 4805,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4782,
											"end": 4805,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4782,
											"end": 4805,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4812,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4812,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4504,
											"end": 4812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4818,
											"end": 4966,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 4818,
											"end": 4966,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4922,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4911,
											"end": 4914,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4906,
											"end": 4909,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 4923,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 4958,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 4954,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4943,
											"end": 4946,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4939,
											"end": 4955,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4932,
											"end": 4959,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4818,
											"end": 4966,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4818,
											"end": 4966,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4818,
											"end": 4966,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4818,
											"end": 4966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 5397,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 4972,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5050,
											"end": 5055,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5075,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 5091,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 5133,
											"end": 5139,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5091,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 5091,
											"end": 5140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5091,
											"end": 5140,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 5091,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 5075,
											"end": 5141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5075,
											"end": 5141,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 5075,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5066,
											"end": 5141,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5066,
											"end": 5141,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5164,
											"end": 5170,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5162,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5150,
											"end": 5171,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5202,
											"end": 5206,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5195,
											"end": 5200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5191,
											"end": 5207,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5240,
											"end": 5243,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5231,
											"end": 5237,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5226,
											"end": 5229,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5222,
											"end": 5238,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5219,
											"end": 5244,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5216,
											"end": 5328,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5216,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 5216,
											"end": 5328,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 5247,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 5247,
											"end": 5326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5247,
											"end": 5326,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 5247,
											"end": 5326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5216,
											"end": 5328,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 5216,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5337,
											"end": 5391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 5384,
											"end": 5390,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5379,
											"end": 5382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5374,
											"end": 5377,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5337,
											"end": 5391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 5337,
											"end": 5391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5337,
											"end": 5391,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 5337,
											"end": 5391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5056,
											"end": 5397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 5397,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 5397,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 5397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 5397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 5397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4972,
											"end": 5397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5417,
											"end": 5757,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 5417,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5473,
											"end": 5478,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5522,
											"end": 5525,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5515,
											"end": 5519,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5507,
											"end": 5513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5520,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5499,
											"end": 5526,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 5489,
											"end": 5611,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5530,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 5530,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 5530,
											"end": 5609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5530,
											"end": 5609,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 5530,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5611,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 5489,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5647,
											"end": 5653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5634,
											"end": 5654,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 5672,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 5747,
											"end": 5750,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5739,
											"end": 5745,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5732,
											"end": 5736,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5720,
											"end": 5737,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5672,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 5672,
											"end": 5751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5672,
											"end": 5751,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 5672,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5663,
											"end": 5751,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5663,
											"end": 5751,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5479,
											"end": 5757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5417,
											"end": 5757,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5417,
											"end": 5757,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5417,
											"end": 5757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5417,
											"end": 5757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5417,
											"end": 5757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 6411,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 5763,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5838,
											"end": 5844,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5846,
											"end": 5852,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5895,
											"end": 5897,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5883,
											"end": 5892,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 5881,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5870,
											"end": 5893,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5866,
											"end": 5898,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5863,
											"end": 5982,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5863,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 5863,
											"end": 5982,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5901,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 5901,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 5901,
											"end": 5980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5901,
											"end": 5980,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 5901,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5863,
											"end": 5982,
											"name": "tag",
											"source": 8,
											"value": "359"
										},
										{
											"begin": 5863,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6021,
											"end": 6022,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6046,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 6088,
											"end": 6095,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6079,
											"end": 6085,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6068,
											"end": 6077,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6064,
											"end": 6086,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 6046,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6046,
											"end": 6096,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 6046,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6036,
											"end": 6096,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6036,
											"end": 6096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5992,
											"end": 6106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6173,
											"end": 6175,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6162,
											"end": 6171,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6158,
											"end": 6176,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6145,
											"end": 6177,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6204,
											"end": 6222,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6196,
											"end": 6202,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6193,
											"end": 6223,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6190,
											"end": 6307,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6190,
											"end": 6307,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 6190,
											"end": 6307,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6226,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 6226,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 6226,
											"end": 6305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6226,
											"end": 6305,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 6226,
											"end": 6305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6190,
											"end": 6307,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 6190,
											"end": 6307,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6331,
											"end": 6394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 6386,
											"end": 6393,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6377,
											"end": 6383,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6366,
											"end": 6375,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6362,
											"end": 6384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6331,
											"end": 6394,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 6331,
											"end": 6394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6331,
											"end": 6394,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 6331,
											"end": 6394,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6321,
											"end": 6394,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6321,
											"end": 6394,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6116,
											"end": 6404,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 6411,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 6411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 6411,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 6411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 6411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5763,
											"end": 6411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6539,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 6417,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 6508,
											"end": 6513,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 6490,
											"end": 6514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 6490,
											"end": 6514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6483,
											"end": 6488,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6480,
											"end": 6515,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6470,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 6470,
											"end": 6533,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6529,
											"end": 6530,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6526,
											"end": 6527,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6519,
											"end": 6531,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6470,
											"end": 6533,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 6470,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6539,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6684,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 6545,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6591,
											"end": 6596,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6635,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6616,
											"end": 6636,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6607,
											"end": 6636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6645,
											"end": 6678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 6672,
											"end": 6677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6645,
											"end": 6678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 6645,
											"end": 6678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6645,
											"end": 6678,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 6645,
											"end": 6678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6684,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6684,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6684,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6545,
											"end": 6684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 7483,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 6690,
											"end": 7483,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6782,
											"end": 6788,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6839,
											"end": 6841,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 6827,
											"end": 6836,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6818,
											"end": 6825,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6814,
											"end": 6837,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 6842,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6807,
											"end": 6926,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6807,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 6807,
											"end": 6926,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6845,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 6845,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 6845,
											"end": 6924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6845,
											"end": 6924,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 6845,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6807,
											"end": 6926,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 6807,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6965,
											"end": 6966,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6990,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 7035,
											"end": 7042,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7026,
											"end": 7032,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7011,
											"end": 7033,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6990,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 6990,
											"end": 7043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6990,
											"end": 7043,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 6990,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6980,
											"end": 7043,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6980,
											"end": 7043,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6936,
											"end": 7053,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7092,
											"end": 7094,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7118,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 7160,
											"end": 7167,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7151,
											"end": 7157,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7140,
											"end": 7149,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7136,
											"end": 7158,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 7118,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7118,
											"end": 7168,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 7118,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7108,
											"end": 7168,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7108,
											"end": 7168,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7063,
											"end": 7178,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7245,
											"end": 7247,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7234,
											"end": 7243,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7230,
											"end": 7248,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7217,
											"end": 7249,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7294,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7268,
											"end": 7274,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7265,
											"end": 7295,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7262,
											"end": 7379,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7262,
											"end": 7379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 7262,
											"end": 7379,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7298,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 7298,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 7298,
											"end": 7377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7298,
											"end": 7377,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 7298,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7262,
											"end": 7379,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 7262,
											"end": 7379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7403,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 7458,
											"end": 7465,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7449,
											"end": 7455,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7438,
											"end": 7447,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 7434,
											"end": 7456,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7403,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 7403,
											"end": 7466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7403,
											"end": 7466,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 7403,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7393,
											"end": 7466,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7393,
											"end": 7466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7188,
											"end": 7476,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 7483,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 7483,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 7483,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 7483,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 7483,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 7483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7489,
											"end": 7998,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 7489,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7558,
											"end": 7564,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7607,
											"end": 7609,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7595,
											"end": 7604,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7586,
											"end": 7593,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7582,
											"end": 7605,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7578,
											"end": 7610,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7575,
											"end": 7694,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7575,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 7575,
											"end": 7694,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7613,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 7613,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 7613,
											"end": 7692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7613,
											"end": 7692,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 7613,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7575,
											"end": 7694,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 7575,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7761,
											"end": 7762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7750,
											"end": 7759,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7746,
											"end": 7763,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7733,
											"end": 7764,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7791,
											"end": 7809,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7783,
											"end": 7789,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7780,
											"end": 7810,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7777,
											"end": 7894,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7777,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 7777,
											"end": 7894,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7813,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 7813,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 7813,
											"end": 7892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7813,
											"end": 7892,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 7813,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7777,
											"end": 7894,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 7777,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 7973,
											"end": 7980,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7964,
											"end": 7970,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7953,
											"end": 7962,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7949,
											"end": 7971,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 7918,
											"end": 7981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7918,
											"end": 7981,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 7918,
											"end": 7981,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7908,
											"end": 7981,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7908,
											"end": 7981,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7704,
											"end": 7991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7489,
											"end": 7998,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7489,
											"end": 7998,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7489,
											"end": 7998,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7489,
											"end": 7998,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7489,
											"end": 7998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8004,
											"end": 8557,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8004,
											"end": 8557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8181,
											"end": 8185,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8219,
											"end": 8222,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 8208,
											"end": 8217,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8204,
											"end": 8223,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8196,
											"end": 8223,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8196,
											"end": 8223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8233,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 8301,
											"end": 8302,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8290,
											"end": 8299,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8286,
											"end": 8303,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8277,
											"end": 8283,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 8233,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 8233,
											"end": 8304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8233,
											"end": 8304,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 8233,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 8382,
											"end": 8384,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8371,
											"end": 8380,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8367,
											"end": 8385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8358,
											"end": 8364,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 8314,
											"end": 8386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8314,
											"end": 8386,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 8314,
											"end": 8386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8396,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 8464,
											"end": 8466,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8453,
											"end": 8462,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8449,
											"end": 8467,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8440,
											"end": 8446,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8396,
											"end": 8468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 8396,
											"end": 8468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8396,
											"end": 8468,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 8396,
											"end": 8468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8478,
											"end": 8550,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 8546,
											"end": 8548,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8535,
											"end": 8544,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8531,
											"end": 8549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8522,
											"end": 8528,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8478,
											"end": 8550,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 8478,
											"end": 8550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8478,
											"end": 8550,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 8478,
											"end": 8550,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8004,
											"end": 8557,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 8004,
											"end": 8557,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8004,
											"end": 8557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8004,
											"end": 8557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8004,
											"end": 8557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8004,
											"end": 8557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8004,
											"end": 8557,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8004,
											"end": 8557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8563,
											"end": 8623,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 8563,
											"end": 8623,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8591,
											"end": 8594,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8612,
											"end": 8617,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8605,
											"end": 8617,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8605,
											"end": 8617,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8563,
											"end": 8623,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8563,
											"end": 8623,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8563,
											"end": 8623,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8563,
											"end": 8623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8629,
											"end": 8771,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 8629,
											"end": 8771,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8679,
											"end": 8688,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8712,
											"end": 8765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 8730,
											"end": 8764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 8739,
											"end": 8763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 8757,
											"end": 8762,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8739,
											"end": 8763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 8739,
											"end": 8763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8739,
											"end": 8763,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 8739,
											"end": 8763,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8730,
											"end": 8764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 8730,
											"end": 8764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8730,
											"end": 8764,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 8730,
											"end": 8764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8712,
											"end": 8765,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 8712,
											"end": 8765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8712,
											"end": 8765,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 8712,
											"end": 8765,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8699,
											"end": 8765,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8699,
											"end": 8765,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8629,
											"end": 8771,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8629,
											"end": 8771,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8629,
											"end": 8771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8629,
											"end": 8771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8903,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 8777,
											"end": 8903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8827,
											"end": 8836,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8860,
											"end": 8897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 8891,
											"end": 8896,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8860,
											"end": 8897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 8860,
											"end": 8897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8860,
											"end": 8897,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 8860,
											"end": 8897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8847,
											"end": 8897,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8847,
											"end": 8897,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8903,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8903,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8777,
											"end": 8903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8909,
											"end": 9052,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 8909,
											"end": 9052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8976,
											"end": 8985,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9009,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 9040,
											"end": 9045,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9009,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 9009,
											"end": 9046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9009,
											"end": 9046,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 9009,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8996,
											"end": 9046,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8996,
											"end": 9046,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8909,
											"end": 9052,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8909,
											"end": 9052,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8909,
											"end": 9052,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8909,
											"end": 9052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9058,
											"end": 9223,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 9058,
											"end": 9223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 9210,
											"end": 9215,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 9162,
											"end": 9216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9162,
											"end": 9216,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 9162,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9157,
											"end": 9160,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9150,
											"end": 9217,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9058,
											"end": 9223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9058,
											"end": 9223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9058,
											"end": 9223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9229,
											"end": 9485,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9229,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9339,
											"end": 9343,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9377,
											"end": 9379,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9366,
											"end": 9375,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9362,
											"end": 9380,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9354,
											"end": 9380,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9354,
											"end": 9380,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9390,
											"end": 9478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 9475,
											"end": 9476,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9464,
											"end": 9473,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9460,
											"end": 9477,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9451,
											"end": 9457,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9390,
											"end": 9478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 9390,
											"end": 9478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9390,
											"end": 9478,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 9390,
											"end": 9478,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9229,
											"end": 9485,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9229,
											"end": 9485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9229,
											"end": 9485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9229,
											"end": 9485,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9229,
											"end": 9485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9491,
											"end": 9671,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 9491,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9616,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9536,
											"end": 9537,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9529,
											"end": 9617,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9636,
											"end": 9640,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 9633,
											"end": 9634,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9626,
											"end": 9641,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9660,
											"end": 9664,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9657,
											"end": 9658,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9650,
											"end": 9665,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9677,
											"end": 9997,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 9677,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9721,
											"end": 9727,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9758,
											"end": 9759,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 9752,
											"end": 9756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9748,
											"end": 9760,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9760,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9738,
											"end": 9760,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9805,
											"end": 9806,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9799,
											"end": 9803,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9795,
											"end": 9807,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9826,
											"end": 9844,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9816,
											"end": 9897,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 9816,
											"end": 9897,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9882,
											"end": 9886,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 9874,
											"end": 9880,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9870,
											"end": 9887,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9860,
											"end": 9887,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9860,
											"end": 9887,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9816,
											"end": 9897,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 9816,
											"end": 9897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9944,
											"end": 9946,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9936,
											"end": 9942,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9933,
											"end": 9947,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9913,
											"end": 9931,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9910,
											"end": 9948,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9907,
											"end": 9991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 9907,
											"end": 9991,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9963,
											"end": 9981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 9963,
											"end": 9981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 9963,
											"end": 9981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9963,
											"end": 9981,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 9963,
											"end": 9981,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9907,
											"end": 9991,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 9907,
											"end": 9991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9728,
											"end": 9997,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9677,
											"end": 9997,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9677,
											"end": 9997,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9677,
											"end": 9997,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9677,
											"end": 9997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10003,
											"end": 10151,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 10003,
											"end": 10151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10105,
											"end": 10116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10142,
											"end": 10145,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10127,
											"end": 10145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10127,
											"end": 10145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10003,
											"end": 10151,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10003,
											"end": 10151,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10003,
											"end": 10151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10003,
											"end": 10151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10003,
											"end": 10151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10547,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 10157,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10263,
											"end": 10266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10291,
											"end": 10330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 10324,
											"end": 10329,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10291,
											"end": 10330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 10291,
											"end": 10330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10291,
											"end": 10330,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 10291,
											"end": 10330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10346,
											"end": 10435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 10428,
											"end": 10434,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10423,
											"end": 10426,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10346,
											"end": 10435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 10346,
											"end": 10435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10346,
											"end": 10435,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 10346,
											"end": 10435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10339,
											"end": 10435,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10339,
											"end": 10435,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10444,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 10502,
											"end": 10508,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10497,
											"end": 10500,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10490,
											"end": 10494,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10483,
											"end": 10488,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10479,
											"end": 10495,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10444,
											"end": 10509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 10444,
											"end": 10509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10444,
											"end": 10509,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 10444,
											"end": 10509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10534,
											"end": 10540,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10529,
											"end": 10532,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10525,
											"end": 10541,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10518,
											"end": 10541,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10518,
											"end": 10541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10267,
											"end": 10547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10547,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10547,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10553,
											"end": 10828,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 10553,
											"end": 10828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10685,
											"end": 10688,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 10798,
											"end": 10801,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10789,
											"end": 10795,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10707,
											"end": 10802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 10707,
											"end": 10802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10707,
											"end": 10802,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 10707,
											"end": 10802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10700,
											"end": 10802,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10700,
											"end": 10802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10819,
											"end": 10822,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10822,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10553,
											"end": 10828,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10553,
											"end": 10828,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10553,
											"end": 10828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10553,
											"end": 10828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10553,
											"end": 10828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10834,
											"end": 10998,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 10834,
											"end": 10998,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10974,
											"end": 10990,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F207374616B6520666F756E64000000000000000000000000000000000000"
										},
										{
											"begin": 10970,
											"end": 10971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10962,
											"end": 10968,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10958,
											"end": 10972,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10951,
											"end": 10991,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10834,
											"end": 10998,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10834,
											"end": 10998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11004,
											"end": 11370,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 11004,
											"end": 11370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11146,
											"end": 11149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11167,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 11231,
											"end": 11233,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 11226,
											"end": 11229,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11167,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 11167,
											"end": 11234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11167,
											"end": 11234,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 11167,
											"end": 11234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11160,
											"end": 11234,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11160,
											"end": 11234,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11243,
											"end": 11336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 11332,
											"end": 11335,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11243,
											"end": 11336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 11243,
											"end": 11336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11243,
											"end": 11336,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 11243,
											"end": 11336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11361,
											"end": 11363,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11356,
											"end": 11359,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11352,
											"end": 11364,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11345,
											"end": 11364,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11345,
											"end": 11364,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11004,
											"end": 11370,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11004,
											"end": 11370,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11004,
											"end": 11370,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11004,
											"end": 11370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11376,
											"end": 11795,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 11376,
											"end": 11795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11542,
											"end": 11546,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11580,
											"end": 11582,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11569,
											"end": 11578,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11565,
											"end": 11583,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11557,
											"end": 11583,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11557,
											"end": 11583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11629,
											"end": 11638,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11623,
											"end": 11627,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11619,
											"end": 11639,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11615,
											"end": 11616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11604,
											"end": 11613,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11600,
											"end": 11617,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11593,
											"end": 11640,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11657,
											"end": 11788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 11783,
											"end": 11787,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11657,
											"end": 11788,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 11657,
											"end": 11788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11657,
											"end": 11788,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 11657,
											"end": 11788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11649,
											"end": 11788,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11649,
											"end": 11788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11376,
											"end": 11795,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11376,
											"end": 11795,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11376,
											"end": 11795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11376,
											"end": 11795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11801,
											"end": 11967,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 11801,
											"end": 11967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11941,
											"end": 11959,
											"name": "PUSH",
											"source": 8,
											"value": "506F7374204944206D69736D6174636800000000000000000000000000000000"
										},
										{
											"begin": 11937,
											"end": 11938,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11929,
											"end": 11935,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11925,
											"end": 11939,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11918,
											"end": 11960,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11801,
											"end": 11967,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11801,
											"end": 11967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11973,
											"end": 12339,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 11973,
											"end": 12339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12115,
											"end": 12118,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12136,
											"end": 12203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 12200,
											"end": 12202,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 12195,
											"end": 12198,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12136,
											"end": 12203,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 12136,
											"end": 12203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12136,
											"end": 12203,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 12136,
											"end": 12203,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12129,
											"end": 12203,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12129,
											"end": 12203,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12212,
											"end": 12305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 12301,
											"end": 12304,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12212,
											"end": 12305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 12212,
											"end": 12305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12212,
											"end": 12305,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 12212,
											"end": 12305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12330,
											"end": 12332,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12325,
											"end": 12328,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12321,
											"end": 12333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12314,
											"end": 12333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12314,
											"end": 12333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11973,
											"end": 12339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11973,
											"end": 12339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11973,
											"end": 12339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11973,
											"end": 12339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12345,
											"end": 12764,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 12345,
											"end": 12764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12511,
											"end": 12515,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12549,
											"end": 12551,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12538,
											"end": 12547,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12534,
											"end": 12552,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12526,
											"end": 12552,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12526,
											"end": 12552,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12598,
											"end": 12607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12592,
											"end": 12596,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12588,
											"end": 12608,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12584,
											"end": 12585,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12573,
											"end": 12582,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12569,
											"end": 12586,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12562,
											"end": 12609,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12626,
											"end": 12757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 12752,
											"end": 12756,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12626,
											"end": 12757,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 12626,
											"end": 12757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12626,
											"end": 12757,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 12626,
											"end": 12757,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12618,
											"end": 12757,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12618,
											"end": 12757,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12345,
											"end": 12764,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12345,
											"end": 12764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12345,
											"end": 12764,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12345,
											"end": 12764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12770,
											"end": 12950,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 12770,
											"end": 12950,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12818,
											"end": 12895,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12815,
											"end": 12816,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12808,
											"end": 12896,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12915,
											"end": 12919,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 12912,
											"end": 12913,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 12905,
											"end": 12920,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12939,
											"end": 12943,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 12936,
											"end": 12937,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12929,
											"end": 12944,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12956,
											"end": 13366,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 12956,
											"end": 13366,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12996,
											"end": 13003,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13019,
											"end": 13039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 13037,
											"end": 13038,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13019,
											"end": 13039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 13019,
											"end": 13039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13019,
											"end": 13039,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 13019,
											"end": 13039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13014,
											"end": 13039,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13014,
											"end": 13039,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13053,
											"end": 13073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 13071,
											"end": 13072,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13053,
											"end": 13073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 13053,
											"end": 13073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13053,
											"end": 13073,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 13053,
											"end": 13073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13048,
											"end": 13073,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13048,
											"end": 13073,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13108,
											"end": 13109,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13105,
											"end": 13106,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13101,
											"end": 13110,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 13130,
											"end": 13160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 13148,
											"end": 13159,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13130,
											"end": 13160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 13130,
											"end": 13160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13130,
											"end": 13160,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 13130,
											"end": 13160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13119,
											"end": 13160,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13119,
											"end": 13160,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13309,
											"end": 13310,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13300,
											"end": 13307,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13296,
											"end": 13311,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 13293,
											"end": 13294,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13290,
											"end": 13312,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 13270,
											"end": 13271,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13263,
											"end": 13272,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13243,
											"end": 13326,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 13220,
											"end": 13359,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 13220,
											"end": 13359,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13339,
											"end": 13357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 13339,
											"end": 13357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 13339,
											"end": 13357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13339,
											"end": 13357,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 13339,
											"end": 13357,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13220,
											"end": 13359,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 13220,
											"end": 13359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13004,
											"end": 13366,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12956,
											"end": 13366,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12956,
											"end": 13366,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12956,
											"end": 13366,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12956,
											"end": 13366,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12956,
											"end": 13366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13372,
											"end": 13552,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 13372,
											"end": 13552,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13420,
											"end": 13497,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13417,
											"end": 13418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13410,
											"end": 13498,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13517,
											"end": 13521,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 13514,
											"end": 13515,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13507,
											"end": 13522,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13541,
											"end": 13545,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 13538,
											"end": 13539,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13531,
											"end": 13546,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13558,
											"end": 13743,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 13558,
											"end": 13743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13598,
											"end": 13599,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13615,
											"end": 13635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 13633,
											"end": 13634,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13615,
											"end": 13635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 13615,
											"end": 13635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13615,
											"end": 13635,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 13615,
											"end": 13635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13610,
											"end": 13635,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13610,
											"end": 13635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13649,
											"end": 13669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 13667,
											"end": 13668,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13649,
											"end": 13669,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 13649,
											"end": 13669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13649,
											"end": 13669,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 13649,
											"end": 13669,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13644,
											"end": 13669,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13644,
											"end": 13669,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13688,
											"end": 13689,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13678,
											"end": 13713,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 13678,
											"end": 13713,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13693,
											"end": 13711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 13693,
											"end": 13711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 13693,
											"end": 13711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13693,
											"end": 13711,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 13693,
											"end": 13711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13678,
											"end": 13713,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 13678,
											"end": 13713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13735,
											"end": 13736,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13732,
											"end": 13733,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13728,
											"end": 13737,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 13723,
											"end": 13737,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13723,
											"end": 13737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13558,
											"end": 13743,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13558,
											"end": 13743,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13558,
											"end": 13743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13558,
											"end": 13743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13558,
											"end": 13743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13749,
											"end": 13940,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 13749,
											"end": 13940,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13789,
											"end": 13792,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13808,
											"end": 13828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 13826,
											"end": 13827,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13808,
											"end": 13828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 13808,
											"end": 13828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13808,
											"end": 13828,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 13808,
											"end": 13828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13803,
											"end": 13828,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13803,
											"end": 13828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13842,
											"end": 13862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 13860,
											"end": 13861,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13842,
											"end": 13862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 13842,
											"end": 13862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13842,
											"end": 13862,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 13842,
											"end": 13862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13837,
											"end": 13862,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13837,
											"end": 13862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13885,
											"end": 13886,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13882,
											"end": 13883,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13878,
											"end": 13887,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13871,
											"end": 13887,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13871,
											"end": 13887,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13906,
											"end": 13909,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13903,
											"end": 13904,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13900,
											"end": 13910,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 13897,
											"end": 13933,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13897,
											"end": 13933,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 13897,
											"end": 13933,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 13913,
											"end": 13931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 13913,
											"end": 13931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13897,
											"end": 13933,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 13897,
											"end": 13933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13749,
											"end": 13940,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13749,
											"end": 13940,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13749,
											"end": 13940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13749,
											"end": 13940,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13749,
											"end": 13940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13946,
											"end": 14278,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 13946,
											"end": 14278,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14067,
											"end": 14071,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14105,
											"end": 14107,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14094,
											"end": 14103,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14090,
											"end": 14108,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14082,
											"end": 14108,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14082,
											"end": 14108,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14118,
											"end": 14189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 14186,
											"end": 14187,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14175,
											"end": 14184,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14171,
											"end": 14188,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14162,
											"end": 14168,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14118,
											"end": 14189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 14118,
											"end": 14189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14118,
											"end": 14189,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 14118,
											"end": 14189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14199,
											"end": 14271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 14267,
											"end": 14269,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14256,
											"end": 14265,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14243,
											"end": 14249,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14199,
											"end": 14271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 14199,
											"end": 14271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14199,
											"end": 14271,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 14199,
											"end": 14271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13946,
											"end": 14278,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13946,
											"end": 14278,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13946,
											"end": 14278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13946,
											"end": 14278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13946,
											"end": 14278,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13946,
											"end": 14278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14284,
											"end": 14421,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 14284,
											"end": 14421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14338,
											"end": 14343,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14369,
											"end": 14375,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14363,
											"end": 14376,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14354,
											"end": 14376,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14354,
											"end": 14376,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14385,
											"end": 14415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 14409,
											"end": 14414,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14385,
											"end": 14415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 14385,
											"end": 14415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14385,
											"end": 14415,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 14385,
											"end": 14415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14284,
											"end": 14421,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14284,
											"end": 14421,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14284,
											"end": 14421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14284,
											"end": 14421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14284,
											"end": 14421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14427,
											"end": 14772,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 14427,
											"end": 14772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14494,
											"end": 14500,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14543,
											"end": 14545,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14531,
											"end": 14540,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14522,
											"end": 14529,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14518,
											"end": 14541,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14514,
											"end": 14546,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 14511,
											"end": 14630,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14511,
											"end": 14630,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 14511,
											"end": 14630,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 14549,
											"end": 14628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 14549,
											"end": 14628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14511,
											"end": 14630,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 14511,
											"end": 14630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14669,
											"end": 14670,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14694,
											"end": 14755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 14747,
											"end": 14754,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14738,
											"end": 14744,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14727,
											"end": 14736,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14723,
											"end": 14745,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14694,
											"end": 14755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 14694,
											"end": 14755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14694,
											"end": 14755,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 14694,
											"end": 14755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14684,
											"end": 14755,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14684,
											"end": 14755,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14640,
											"end": 14765,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14427,
											"end": 14772,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14427,
											"end": 14772,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14427,
											"end": 14772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14427,
											"end": 14772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14427,
											"end": 14772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14778,
											"end": 14972,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 14778,
											"end": 14972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14818,
											"end": 14822,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14838,
											"end": 14858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 14856,
											"end": 14857,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14838,
											"end": 14858,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 14838,
											"end": 14858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14838,
											"end": 14858,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 14838,
											"end": 14858,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14833,
											"end": 14858,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14833,
											"end": 14858,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14872,
											"end": 14892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 14890,
											"end": 14891,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14872,
											"end": 14892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 14872,
											"end": 14892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14872,
											"end": 14892,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 14872,
											"end": 14892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14867,
											"end": 14892,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14867,
											"end": 14892,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14916,
											"end": 14917,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14913,
											"end": 14914,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14909,
											"end": 14918,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14901,
											"end": 14918,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14901,
											"end": 14918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14940,
											"end": 14941,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14934,
											"end": 14938,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14931,
											"end": 14942,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 14928,
											"end": 14965,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14928,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 14928,
											"end": 14965,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14945,
											"end": 14963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 14945,
											"end": 14963,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 14945,
											"end": 14963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14945,
											"end": 14963,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 14945,
											"end": 14963,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14928,
											"end": 14965,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 14928,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14778,
											"end": 14972,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14778,
											"end": 14972,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14778,
											"end": 14972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14778,
											"end": 14972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14778,
											"end": 14972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14978,
											"end": 15158,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 14978,
											"end": 15158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15026,
											"end": 15103,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15023,
											"end": 15024,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15016,
											"end": 15104,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15123,
											"end": 15127,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 15120,
											"end": 15121,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 15113,
											"end": 15128,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15147,
											"end": 15151,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 15144,
											"end": 15145,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15137,
											"end": 15152,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15164,
											"end": 15386,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 15164,
											"end": 15386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15257,
											"end": 15261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15295,
											"end": 15297,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15284,
											"end": 15293,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15280,
											"end": 15298,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15272,
											"end": 15298,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15272,
											"end": 15298,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15308,
											"end": 15379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 15376,
											"end": 15377,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15365,
											"end": 15374,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15361,
											"end": 15378,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15352,
											"end": 15358,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15308,
											"end": 15379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 15308,
											"end": 15379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15308,
											"end": 15379,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 15308,
											"end": 15379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15164,
											"end": 15386,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15164,
											"end": 15386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15164,
											"end": 15386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15164,
											"end": 15386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15164,
											"end": 15386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15392,
											"end": 15477,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 15392,
											"end": 15477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15437,
											"end": 15444,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15466,
											"end": 15471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15455,
											"end": 15471,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15455,
											"end": 15471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15392,
											"end": 15477,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15392,
											"end": 15477,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15392,
											"end": 15477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15392,
											"end": 15477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15483,
											"end": 15641,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 15483,
											"end": 15641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15541,
											"end": 15550,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15574,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 15592,
											"end": 15634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 15601,
											"end": 15633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 15627,
											"end": 15632,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15601,
											"end": 15633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 15601,
											"end": 15633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15601,
											"end": 15633,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 15601,
											"end": 15633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15592,
											"end": 15634,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 15592,
											"end": 15634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15592,
											"end": 15634,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 15592,
											"end": 15634,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15574,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 15574,
											"end": 15635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15574,
											"end": 15635,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 15574,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15561,
											"end": 15635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15561,
											"end": 15635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15483,
											"end": 15641,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15483,
											"end": 15641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15483,
											"end": 15641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15483,
											"end": 15641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15647,
											"end": 15794,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 15647,
											"end": 15794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15742,
											"end": 15787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 15781,
											"end": 15786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15742,
											"end": 15787,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 15742,
											"end": 15787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15742,
											"end": 15787,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 15742,
											"end": 15787,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15737,
											"end": 15740,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15730,
											"end": 15788,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15647,
											"end": 15794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15647,
											"end": 15794,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15647,
											"end": 15794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15800,
											"end": 16148,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 15800,
											"end": 16148,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15929,
											"end": 15933,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15967,
											"end": 15969,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15956,
											"end": 15965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15952,
											"end": 15970,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15944,
											"end": 15970,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15944,
											"end": 15970,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15980,
											"end": 16051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 16048,
											"end": 16049,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16037,
											"end": 16046,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16033,
											"end": 16050,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16024,
											"end": 16030,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15980,
											"end": 16051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 15980,
											"end": 16051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15980,
											"end": 16051,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 15980,
											"end": 16051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16061,
											"end": 16141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 16137,
											"end": 16139,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16126,
											"end": 16135,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16122,
											"end": 16140,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16113,
											"end": 16119,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16061,
											"end": 16141,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 16061,
											"end": 16141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16061,
											"end": 16141,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 16061,
											"end": 16141,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15800,
											"end": 16148,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 15800,
											"end": 16148,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15800,
											"end": 16148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15800,
											"end": 16148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15800,
											"end": 16148,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15800,
											"end": 16148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16154,
											"end": 16486,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 16154,
											"end": 16486,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16275,
											"end": 16279,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16313,
											"end": 16315,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16302,
											"end": 16311,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16298,
											"end": 16316,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16290,
											"end": 16316,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16290,
											"end": 16316,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16326,
											"end": 16397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 16394,
											"end": 16395,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16383,
											"end": 16392,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16379,
											"end": 16396,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16370,
											"end": 16376,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 16326,
											"end": 16397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 16326,
											"end": 16397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16326,
											"end": 16397,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 16326,
											"end": 16397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16407,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 16475,
											"end": 16477,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16464,
											"end": 16473,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16460,
											"end": 16478,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16451,
											"end": 16457,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16407,
											"end": 16479,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 16407,
											"end": 16479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16407,
											"end": 16479,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 16407,
											"end": 16479,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16154,
											"end": 16486,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 16154,
											"end": 16486,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 16154,
											"end": 16486,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16154,
											"end": 16486,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16154,
											"end": 16486,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16154,
											"end": 16486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16492,
											"end": 16656,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 16492,
											"end": 16656,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16632,
											"end": 16648,
											"name": "PUSH",
											"source": 8,
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 16628,
											"end": 16629,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16620,
											"end": 16626,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16616,
											"end": 16630,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16609,
											"end": 16649,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16492,
											"end": 16656,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16492,
											"end": 16656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16662,
											"end": 17028,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 16662,
											"end": 17028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16804,
											"end": 16807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16825,
											"end": 16892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 16889,
											"end": 16891,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 16884,
											"end": 16887,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16825,
											"end": 16892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 16825,
											"end": 16892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16825,
											"end": 16892,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 16825,
											"end": 16892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16818,
											"end": 16892,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16818,
											"end": 16892,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16901,
											"end": 16994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 16990,
											"end": 16993,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16901,
											"end": 16994,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 16901,
											"end": 16994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16901,
											"end": 16994,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 16901,
											"end": 16994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17019,
											"end": 17021,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17014,
											"end": 17017,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17010,
											"end": 17022,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17003,
											"end": 17022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17003,
											"end": 17022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16662,
											"end": 17028,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16662,
											"end": 17028,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16662,
											"end": 17028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16662,
											"end": 17028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17034,
											"end": 17453,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 17034,
											"end": 17453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17200,
											"end": 17204,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17238,
											"end": 17240,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17227,
											"end": 17236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17215,
											"end": 17241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17215,
											"end": 17241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17287,
											"end": 17296,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17281,
											"end": 17285,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17277,
											"end": 17297,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17273,
											"end": 17274,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17262,
											"end": 17271,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17258,
											"end": 17275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17251,
											"end": 17298,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17315,
											"end": 17446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 17441,
											"end": 17445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17315,
											"end": 17446,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 17315,
											"end": 17446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17315,
											"end": 17446,
											"name": "tag",
											"source": 8,
											"value": "479"
										},
										{
											"begin": 17315,
											"end": 17446,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17307,
											"end": 17446,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17307,
											"end": 17446,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17034,
											"end": 17453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17034,
											"end": 17453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17034,
											"end": 17453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17034,
											"end": 17453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17459,
											"end": 17602,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 17459,
											"end": 17602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17516,
											"end": 17521,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17547,
											"end": 17553,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17541,
											"end": 17554,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 17532,
											"end": 17554,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17532,
											"end": 17554,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17563,
											"end": 17596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 17590,
											"end": 17595,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17563,
											"end": 17596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 17563,
											"end": 17596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17563,
											"end": 17596,
											"name": "tag",
											"source": 8,
											"value": "481"
										},
										{
											"begin": 17563,
											"end": 17596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17459,
											"end": 17602,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17459,
											"end": 17602,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17459,
											"end": 17602,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17459,
											"end": 17602,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17459,
											"end": 17602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17959,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 17608,
											"end": 17959,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17678,
											"end": 17684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17727,
											"end": 17729,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17715,
											"end": 17724,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17706,
											"end": 17713,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17702,
											"end": 17725,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17698,
											"end": 17730,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 17695,
											"end": 17814,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17695,
											"end": 17814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 17695,
											"end": 17814,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17733,
											"end": 17812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 17733,
											"end": 17812,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 17733,
											"end": 17812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17733,
											"end": 17812,
											"name": "tag",
											"source": 8,
											"value": "484"
										},
										{
											"begin": 17733,
											"end": 17812,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17695,
											"end": 17814,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 17695,
											"end": 17814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17853,
											"end": 17854,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17878,
											"end": 17942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 17934,
											"end": 17941,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17925,
											"end": 17931,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17914,
											"end": 17923,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 17910,
											"end": 17932,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17878,
											"end": 17942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 17878,
											"end": 17942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17878,
											"end": 17942,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 17878,
											"end": 17942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17868,
											"end": 17942,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17868,
											"end": 17942,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17824,
											"end": 17952,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17959,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17959,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17959,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17959,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17608,
											"end": 17959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17965,
											"end": 18135,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 17965,
											"end": 18135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18105,
											"end": 18127,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 18101,
											"end": 18102,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18093,
											"end": 18099,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18089,
											"end": 18103,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18082,
											"end": 18128,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17965,
											"end": 18135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17965,
											"end": 18135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18141,
											"end": 18507,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 18141,
											"end": 18507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18283,
											"end": 18286,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18304,
											"end": 18371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 18368,
											"end": 18370,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 18363,
											"end": 18366,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18304,
											"end": 18371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 18304,
											"end": 18371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18304,
											"end": 18371,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 18304,
											"end": 18371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18297,
											"end": 18371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18297,
											"end": 18371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18380,
											"end": 18473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 18469,
											"end": 18472,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18380,
											"end": 18473,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 18380,
											"end": 18473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18380,
											"end": 18473,
											"name": "tag",
											"source": 8,
											"value": "489"
										},
										{
											"begin": 18380,
											"end": 18473,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18498,
											"end": 18500,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18493,
											"end": 18496,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18489,
											"end": 18501,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18482,
											"end": 18501,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18482,
											"end": 18501,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18141,
											"end": 18507,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18141,
											"end": 18507,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18141,
											"end": 18507,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18141,
											"end": 18507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18513,
											"end": 18932,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 18513,
											"end": 18932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18679,
											"end": 18683,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18717,
											"end": 18719,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18706,
											"end": 18715,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18702,
											"end": 18720,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18694,
											"end": 18720,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18694,
											"end": 18720,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18766,
											"end": 18775,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18760,
											"end": 18764,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18756,
											"end": 18776,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 18752,
											"end": 18753,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18741,
											"end": 18750,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 18737,
											"end": 18754,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18730,
											"end": 18777,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18794,
											"end": 18925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 18920,
											"end": 18924,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18794,
											"end": 18925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 18794,
											"end": 18925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18794,
											"end": 18925,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 18794,
											"end": 18925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18786,
											"end": 18925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18786,
											"end": 18925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18513,
											"end": 18932,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18513,
											"end": 18932,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18513,
											"end": 18932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18513,
											"end": 18932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18938,
											"end": 19270,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 18938,
											"end": 19270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19059,
											"end": 19063,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19097,
											"end": 19099,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19086,
											"end": 19095,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19082,
											"end": 19100,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19074,
											"end": 19100,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19074,
											"end": 19100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19110,
											"end": 19181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 19178,
											"end": 19179,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19167,
											"end": 19176,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19163,
											"end": 19180,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19154,
											"end": 19160,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 19110,
											"end": 19181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 19110,
											"end": 19181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19110,
											"end": 19181,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 19110,
											"end": 19181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19191,
											"end": 19263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 19259,
											"end": 19261,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19248,
											"end": 19257,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19244,
											"end": 19262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19235,
											"end": 19241,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19191,
											"end": 19263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 19191,
											"end": 19263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19191,
											"end": 19263,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 19191,
											"end": 19263,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18938,
											"end": 19270,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 18938,
											"end": 19270,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18938,
											"end": 19270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18938,
											"end": 19270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18938,
											"end": 19270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18938,
											"end": 19270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19276,
											"end": 19503,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 19276,
											"end": 19503,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19416,
											"end": 19450,
											"name": "PUSH",
											"source": 8,
											"value": "436F6E7472616374206E6F7420617070726F76656420746F207472616E736665"
										},
										{
											"begin": 19412,
											"end": 19413,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19404,
											"end": 19410,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19400,
											"end": 19414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19393,
											"end": 19451,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19485,
											"end": 19495,
											"name": "PUSH",
											"source": 8,
											"value": "7220746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19480,
											"end": 19482,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19472,
											"end": 19478,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19468,
											"end": 19483,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19461,
											"end": 19496,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19276,
											"end": 19503,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19276,
											"end": 19503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19509,
											"end": 19875,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 19509,
											"end": 19875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19651,
											"end": 19654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19672,
											"end": 19739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 19736,
											"end": 19738,
											"name": "PUSH",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 19731,
											"end": 19734,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19672,
											"end": 19739,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 19672,
											"end": 19739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19672,
											"end": 19739,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 19672,
											"end": 19739,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19665,
											"end": 19739,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19665,
											"end": 19739,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19748,
											"end": 19841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 19837,
											"end": 19840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19748,
											"end": 19841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 19748,
											"end": 19841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19748,
											"end": 19841,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 19748,
											"end": 19841,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19866,
											"end": 19868,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 19861,
											"end": 19864,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19857,
											"end": 19869,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19850,
											"end": 19869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19850,
											"end": 19869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19509,
											"end": 19875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19509,
											"end": 19875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19509,
											"end": 19875,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19509,
											"end": 19875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19881,
											"end": 20300,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 19881,
											"end": 20300,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20047,
											"end": 20051,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20085,
											"end": 20087,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20074,
											"end": 20083,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20070,
											"end": 20088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20062,
											"end": 20088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20062,
											"end": 20088,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20134,
											"end": 20143,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20128,
											"end": 20132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20124,
											"end": 20144,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 20120,
											"end": 20121,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20109,
											"end": 20118,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20105,
											"end": 20122,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20098,
											"end": 20145,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20162,
											"end": 20293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 20288,
											"end": 20292,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20162,
											"end": 20293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 20162,
											"end": 20293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20162,
											"end": 20293,
											"name": "tag",
											"source": 8,
											"value": "500"
										},
										{
											"begin": 20162,
											"end": 20293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20154,
											"end": 20293,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20154,
											"end": 20293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19881,
											"end": 20300,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19881,
											"end": 20300,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 19881,
											"end": 20300,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19881,
											"end": 20300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20306,
											"end": 20748,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 20306,
											"end": 20748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20455,
											"end": 20459,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20493,
											"end": 20495,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 20482,
											"end": 20491,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20478,
											"end": 20496,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20470,
											"end": 20496,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20470,
											"end": 20496,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20506,
											"end": 20577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 20574,
											"end": 20575,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20563,
											"end": 20572,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20559,
											"end": 20576,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20550,
											"end": 20556,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 20506,
											"end": 20577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 20506,
											"end": 20577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20506,
											"end": 20577,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 20506,
											"end": 20577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20587,
											"end": 20659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 20655,
											"end": 20657,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 20644,
											"end": 20653,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20640,
											"end": 20658,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20631,
											"end": 20637,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 20587,
											"end": 20659,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 20587,
											"end": 20659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20587,
											"end": 20659,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 20587,
											"end": 20659,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20669,
											"end": 20741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 20737,
											"end": 20739,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 20726,
											"end": 20735,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 20722,
											"end": 20740,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20713,
											"end": 20719,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 20669,
											"end": 20741,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 20669,
											"end": 20741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20669,
											"end": 20741,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 20669,
											"end": 20741,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20306,
											"end": 20748,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 20306,
											"end": 20748,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 20306,
											"end": 20748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20306,
											"end": 20748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20306,
											"end": 20748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20306,
											"end": 20748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20306,
											"end": 20748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20754,
											"end": 20925,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 20754,
											"end": 20925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20894,
											"end": 20917,
											"name": "PUSH",
											"source": 8,
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 20890,
											"end": 20891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20882,
											"end": 20888,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 20878,
											"end": 20892,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 20871,
											"end": 20918,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 20754,
											"end": 20925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20754,
											"end": 20925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20931,
											"end": 21297,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 20931,
											"end": 21297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21073,
											"end": 21076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21094,
											"end": 21161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 21158,
											"end": 21160,
											"name": "PUSH",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 21153,
											"end": 21156,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21094,
											"end": 21161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 21094,
											"end": 21161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21094,
											"end": 21161,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 21094,
											"end": 21161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21087,
											"end": 21161,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21087,
											"end": 21161,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21170,
											"end": 21263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 21259,
											"end": 21262,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21170,
											"end": 21263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 21170,
											"end": 21263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21170,
											"end": 21263,
											"name": "tag",
											"source": 8,
											"value": "508"
										},
										{
											"begin": 21170,
											"end": 21263,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21288,
											"end": 21290,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21283,
											"end": 21286,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21279,
											"end": 21291,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21272,
											"end": 21291,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21272,
											"end": 21291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20931,
											"end": 21297,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 20931,
											"end": 21297,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 20931,
											"end": 21297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20931,
											"end": 21297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21303,
											"end": 21722,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 21303,
											"end": 21722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21469,
											"end": 21473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21507,
											"end": 21509,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21496,
											"end": 21505,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 21492,
											"end": 21510,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21484,
											"end": 21510,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21484,
											"end": 21510,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21556,
											"end": 21565,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21550,
											"end": 21554,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21546,
											"end": 21566,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 21542,
											"end": 21543,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21531,
											"end": 21540,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21527,
											"end": 21544,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21520,
											"end": 21567,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21584,
											"end": 21715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 21710,
											"end": 21714,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21584,
											"end": 21715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 21584,
											"end": 21715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21584,
											"end": 21715,
											"name": "tag",
											"source": 8,
											"value": "510"
										},
										{
											"begin": 21584,
											"end": 21715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21576,
											"end": 21715,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21576,
											"end": 21715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21303,
											"end": 21722,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21303,
											"end": 21722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21303,
											"end": 21722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21303,
											"end": 21722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21728,
											"end": 21869,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 21728,
											"end": 21869,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21777,
											"end": 21781,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21800,
											"end": 21803,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21792,
											"end": 21803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21792,
											"end": 21803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21823,
											"end": 21826,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 21820,
											"end": 21821,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21813,
											"end": 21827,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 21857,
											"end": 21861,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21854,
											"end": 21855,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21844,
											"end": 21862,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 21836,
											"end": 21862,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21836,
											"end": 21862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21728,
											"end": 21869,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21728,
											"end": 21869,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21728,
											"end": 21869,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21728,
											"end": 21869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21875,
											"end": 21968,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 21875,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 21912,
											"end": 21918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 21959,
											"end": 21961,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 21954,
											"end": 21956,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 21947,
											"end": 21952,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 21943,
											"end": 21957,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 21939,
											"end": 21962,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 21929,
											"end": 21962,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21929,
											"end": 21962,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21875,
											"end": 21968,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21875,
											"end": 21968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 21875,
											"end": 21968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21875,
											"end": 21968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 21974,
											"end": 22081,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 21974,
											"end": 22081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22018,
											"end": 22026,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22068,
											"end": 22073,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22062,
											"end": 22066,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22058,
											"end": 22074,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 22037,
											"end": 22074,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22037,
											"end": 22074,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21974,
											"end": 22081,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 21974,
											"end": 22081,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 21974,
											"end": 22081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21974,
											"end": 22081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 21974,
											"end": 22081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22087,
											"end": 22480,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 22087,
											"end": 22480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22156,
											"end": 22162,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22206,
											"end": 22207,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 22194,
											"end": 22204,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22190,
											"end": 22208,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 22229,
											"end": 22326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 22259,
											"end": 22325,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22248,
											"end": 22257,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22229,
											"end": 22326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 22229,
											"end": 22326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22229,
											"end": 22326,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 22229,
											"end": 22326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22347,
											"end": 22386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 22377,
											"end": 22385,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 22366,
											"end": 22375,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22347,
											"end": 22386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 22347,
											"end": 22386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22347,
											"end": 22386,
											"name": "tag",
											"source": 8,
											"value": "516"
										},
										{
											"begin": 22347,
											"end": 22386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22335,
											"end": 22386,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 22335,
											"end": 22386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22419,
											"end": 22423,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22415,
											"end": 22424,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 22408,
											"end": 22413,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22404,
											"end": 22425,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22395,
											"end": 22425,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 22395,
											"end": 22425,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22468,
											"end": 22472,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 22458,
											"end": 22466,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 22454,
											"end": 22473,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 22447,
											"end": 22452,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22444,
											"end": 22474,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 22434,
											"end": 22474,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 22434,
											"end": 22474,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22163,
											"end": 22480,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22163,
											"end": 22480,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22087,
											"end": 22480,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 22087,
											"end": 22480,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 22087,
											"end": 22480,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22087,
											"end": 22480,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22087,
											"end": 22480,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22087,
											"end": 22480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22486,
											"end": 22628,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 22486,
											"end": 22628,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22536,
											"end": 22545,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22569,
											"end": 22622,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 22587,
											"end": 22621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 22596,
											"end": 22620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 22614,
											"end": 22619,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22596,
											"end": 22620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 22596,
											"end": 22620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22596,
											"end": 22620,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 22596,
											"end": 22620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22587,
											"end": 22621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 22587,
											"end": 22621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22587,
											"end": 22621,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 22587,
											"end": 22621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22569,
											"end": 22622,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 22569,
											"end": 22622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22569,
											"end": 22622,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 22569,
											"end": 22622,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22556,
											"end": 22622,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22556,
											"end": 22622,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22486,
											"end": 22628,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22486,
											"end": 22628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22486,
											"end": 22628,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22486,
											"end": 22628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22634,
											"end": 22709,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 22634,
											"end": 22709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22677,
											"end": 22680,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22698,
											"end": 22703,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 22691,
											"end": 22703,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22691,
											"end": 22703,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22634,
											"end": 22709,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 22634,
											"end": 22709,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22634,
											"end": 22709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22634,
											"end": 22709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22715,
											"end": 22984,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 22715,
											"end": 22984,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22825,
											"end": 22864,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 22856,
											"end": 22863,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 22825,
											"end": 22864,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 22825,
											"end": 22864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22825,
											"end": 22864,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 22825,
											"end": 22864,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22886,
											"end": 22977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 22935,
											"end": 22976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 22959,
											"end": 22975,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22935,
											"end": 22976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 22935,
											"end": 22976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22935,
											"end": 22976,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 22935,
											"end": 22976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22927,
											"end": 22933,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22920,
											"end": 22924,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 22914,
											"end": 22925,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 22886,
											"end": 22977,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 22886,
											"end": 22977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22886,
											"end": 22977,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 22886,
											"end": 22977,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 22880,
											"end": 22884,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 22873,
											"end": 22978,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 22791,
											"end": 22984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22715,
											"end": 22984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22715,
											"end": 22984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22715,
											"end": 22984,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 22715,
											"end": 22984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 22990,
											"end": 23063,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 22990,
											"end": 23063,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23035,
											"end": 23038,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 22990,
											"end": 23063,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 22990,
											"end": 23063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23069,
											"end": 23258,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 23069,
											"end": 23258,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23146,
											"end": 23178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 23146,
											"end": 23178,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 23146,
											"end": 23178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23146,
											"end": 23178,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 23146,
											"end": 23178,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23187,
											"end": 23252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 23245,
											"end": 23251,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23237,
											"end": 23243,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 23231,
											"end": 23235,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 23187,
											"end": 23252,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 23187,
											"end": 23252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23187,
											"end": 23252,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 23187,
											"end": 23252,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23122,
											"end": 23258,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23069,
											"end": 23258,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23069,
											"end": 23258,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23069,
											"end": 23258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23264,
											"end": 23450,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 23264,
											"end": 23450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23324,
											"end": 23444,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 23324,
											"end": 23444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23341,
											"end": 23344,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23334,
											"end": 23339,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23331,
											"end": 23345,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 23324,
											"end": 23444,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 23324,
											"end": 23444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 23324,
											"end": 23444,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23395,
											"end": 23434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 23432,
											"end": 23433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 23425,
											"end": 23430,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23395,
											"end": 23434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 23395,
											"end": 23434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23395,
											"end": 23434,
											"name": "tag",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 23395,
											"end": 23434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23368,
											"end": 23369,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 23361,
											"end": 23366,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23357,
											"end": 23370,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23348,
											"end": 23370,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23348,
											"end": 23370,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23324,
											"end": 23444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 23324,
											"end": 23444,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23324,
											"end": 23444,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 23324,
											"end": 23444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23264,
											"end": 23450,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23264,
											"end": 23450,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23264,
											"end": 23450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23456,
											"end": 23999,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 23456,
											"end": 23999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23557,
											"end": 23559,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 23552,
											"end": 23555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23549,
											"end": 23560,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 23546,
											"end": 23992,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 23546,
											"end": 23992,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 23546,
											"end": 23992,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23591,
											"end": 23629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 23623,
											"end": 23628,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23591,
											"end": 23629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 23591,
											"end": 23629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23591,
											"end": 23629,
											"name": "tag",
											"source": 8,
											"value": "537"
										},
										{
											"begin": 23591,
											"end": 23629,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23675,
											"end": 23704,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 23693,
											"end": 23703,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 23675,
											"end": 23704,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 23675,
											"end": 23704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23675,
											"end": 23704,
											"name": "tag",
											"source": 8,
											"value": "538"
										},
										{
											"begin": 23675,
											"end": 23704,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23665,
											"end": 23673,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23661,
											"end": 23705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23858,
											"end": 23860,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 23846,
											"end": 23856,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 23843,
											"end": 23861,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 23840,
											"end": 23889,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 23840,
											"end": 23889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 23840,
											"end": 23889,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 23879,
											"end": 23887,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 23864,
											"end": 23887,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 23864,
											"end": 23887,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23840,
											"end": 23889,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 23840,
											"end": 23889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23902,
											"end": 23982,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 23958,
											"end": 23980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 23976,
											"end": 23979,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 23958,
											"end": 23980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 23958,
											"end": 23980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23958,
											"end": 23980,
											"name": "tag",
											"source": 8,
											"value": "541"
										},
										{
											"begin": 23958,
											"end": 23980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23948,
											"end": 23956,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 23944,
											"end": 23981,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 23931,
											"end": 23942,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 23902,
											"end": 23982,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 23902,
											"end": 23982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 23902,
											"end": 23982,
											"name": "tag",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 23902,
											"end": 23982,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23561,
											"end": 23992,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23561,
											"end": 23992,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23546,
											"end": 23992,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 23546,
											"end": 23992,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 23456,
											"end": 23999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23456,
											"end": 23999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23456,
											"end": 23999,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 23456,
											"end": 23999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24005,
											"end": 24122,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 24005,
											"end": 24122,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24059,
											"end": 24067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24109,
											"end": 24114,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24103,
											"end": 24107,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24099,
											"end": 24115,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 24078,
											"end": 24115,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24078,
											"end": 24115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24005,
											"end": 24122,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 24005,
											"end": 24122,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24005,
											"end": 24122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24005,
											"end": 24122,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24005,
											"end": 24122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24128,
											"end": 24297,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 24128,
											"end": 24297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24172,
											"end": 24178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24205,
											"end": 24256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 24253,
											"end": 24254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24249,
											"end": 24255,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 24241,
											"end": 24246,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 24238,
											"end": 24239,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 24234,
											"end": 24247,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 24205,
											"end": 24256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 24205,
											"end": 24256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24205,
											"end": 24256,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 24205,
											"end": 24256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24201,
											"end": 24257,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 24286,
											"end": 24290,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 24280,
											"end": 24284,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24276,
											"end": 24291,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 24266,
											"end": 24291,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24266,
											"end": 24291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24179,
											"end": 24297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24128,
											"end": 24297,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 24128,
											"end": 24297,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24128,
											"end": 24297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24128,
											"end": 24297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24128,
											"end": 24297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24302,
											"end": 24597,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 24302,
											"end": 24597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24378,
											"end": 24382,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 24524,
											"end": 24553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 24549,
											"end": 24552,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24543,
											"end": 24547,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 24524,
											"end": 24553,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 24524,
											"end": 24553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24524,
											"end": 24553,
											"name": "tag",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 24524,
											"end": 24553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24516,
											"end": 24553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24516,
											"end": 24553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24586,
											"end": 24589,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24583,
											"end": 24584,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 24579,
											"end": 24590,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 24573,
											"end": 24577,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24570,
											"end": 24591,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 24562,
											"end": 24591,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 24562,
											"end": 24591,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24302,
											"end": 24597,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 24302,
											"end": 24597,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 24302,
											"end": 24597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24302,
											"end": 24597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24302,
											"end": 24597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24602,
											"end": 25997,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 24602,
											"end": 25997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24719,
											"end": 24756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 24752,
											"end": 24755,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24719,
											"end": 24756,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 24719,
											"end": 24756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24719,
											"end": 24756,
											"name": "tag",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 24719,
											"end": 24756,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24821,
											"end": 24839,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24813,
											"end": 24819,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 24810,
											"end": 24840,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 24807,
											"end": 24863,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 24807,
											"end": 24863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 24807,
											"end": 24863,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 24843,
											"end": 24861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 24843,
											"end": 24861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 24843,
											"end": 24861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24843,
											"end": 24861,
											"name": "tag",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 24843,
											"end": 24861,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24807,
											"end": 24863,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 24807,
											"end": 24863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24887,
											"end": 24925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 24919,
											"end": 24923,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 24913,
											"end": 24924,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 24887,
											"end": 24925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 24887,
											"end": 24925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24887,
											"end": 24925,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 24887,
											"end": 24925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 24972,
											"end": 25039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 25032,
											"end": 25038,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25024,
											"end": 25030,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25018,
											"end": 25022,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 24972,
											"end": 25039,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 24972,
											"end": 25039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 24972,
											"end": 25039,
											"name": "tag",
											"source": 8,
											"value": "552"
										},
										{
											"begin": 24972,
											"end": 25039,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25066,
											"end": 25067,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25090,
											"end": 25094,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25077,
											"end": 25094,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25077,
											"end": 25094,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25122,
											"end": 25124,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 25114,
											"end": 25120,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25111,
											"end": 25125,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 25139,
											"end": 25140,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 25134,
											"end": 25752,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25134,
											"end": 25752,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 25134,
											"end": 25752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 25134,
											"end": 25752,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25796,
											"end": 25797,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25813,
											"end": 25819,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 25810,
											"end": 25887,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 25810,
											"end": 25887,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 25810,
											"end": 25887,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25862,
											"end": 25871,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25857,
											"end": 25860,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 25853,
											"end": 25872,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25847,
											"end": 25873,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 25838,
											"end": 25873,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25838,
											"end": 25873,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25810,
											"end": 25887,
											"name": "tag",
											"source": 8,
											"value": "555"
										},
										{
											"begin": 25810,
											"end": 25887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25913,
											"end": 25980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 25973,
											"end": 25979,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 25966,
											"end": 25971,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25913,
											"end": 25980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 25913,
											"end": 25980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25913,
											"end": 25980,
											"name": "tag",
											"source": 8,
											"value": "556"
										},
										{
											"begin": 25913,
											"end": 25980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25907,
											"end": 25911,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 25900,
											"end": 25981,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 25769,
											"end": 25991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25104,
											"end": 25991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 25104,
											"end": 25991,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25134,
											"end": 25752,
											"name": "tag",
											"source": 8,
											"value": "554"
										},
										{
											"begin": 25134,
											"end": 25752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25186,
											"end": 25190,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 25182,
											"end": 25191,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 25174,
											"end": 25180,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 25170,
											"end": 25192,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 25220,
											"end": 25257,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 25252,
											"end": 25256,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 25220,
											"end": 25257,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 25220,
											"end": 25257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25220,
											"end": 25257,
											"name": "tag",
											"source": 8,
											"value": "557"
										},
										{
											"begin": 25220,
											"end": 25257,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25279,
											"end": 25280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 25293,
											"end": 25501,
											"name": "tag",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 25293,
											"end": 25501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25307,
											"end": 25314,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25304,
											"end": 25305,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25301,
											"end": 25315,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 25293,
											"end": 25501,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 25293,
											"end": 25501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 25293,
											"end": 25501,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25386,
											"end": 25395,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 25381,
											"end": 25384,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 25377,
											"end": 25396,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25371,
											"end": 25397,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 25363,
											"end": 25369,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25356,
											"end": 25398,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 25437,
											"end": 25438,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 25429,
											"end": 25435,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25425,
											"end": 25439,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25415,
											"end": 25439,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 25415,
											"end": 25439,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25484,
											"end": 25486,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25473,
											"end": 25482,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 25469,
											"end": 25487,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25456,
											"end": 25487,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 25456,
											"end": 25487,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25330,
											"end": 25334,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 25327,
											"end": 25328,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 25323,
											"end": 25335,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25318,
											"end": 25335,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 25318,
											"end": 25335,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25293,
											"end": 25501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "558"
										},
										{
											"begin": 25293,
											"end": 25501,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25293,
											"end": 25501,
											"name": "tag",
											"source": 8,
											"value": "560"
										},
										{
											"begin": 25293,
											"end": 25501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25529,
											"end": 25535,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 25520,
											"end": 25527,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25517,
											"end": 25536,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 25514,
											"end": 25693,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 25514,
											"end": 25693,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 25514,
											"end": 25693,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 25587,
											"end": 25596,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 25582,
											"end": 25585,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 25578,
											"end": 25597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25572,
											"end": 25598,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 25630,
											"end": 25678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 25672,
											"end": 25676,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 25664,
											"end": 25670,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 25660,
											"end": 25677,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 25649,
											"end": 25658,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 25630,
											"end": 25678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 25630,
											"end": 25678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 25630,
											"end": 25678,
											"name": "tag",
											"source": 8,
											"value": "562"
										},
										{
											"begin": 25630,
											"end": 25678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25622,
											"end": 25628,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 25615,
											"end": 25679,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 25537,
											"end": 25693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25514,
											"end": 25693,
											"name": "tag",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 25514,
											"end": 25693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25739,
											"end": 25740,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 25735,
											"end": 25736,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 25727,
											"end": 25733,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 25723,
											"end": 25737,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 25719,
											"end": 25741,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 25713,
											"end": 25717,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 25706,
											"end": 25742,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 25141,
											"end": 25752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25141,
											"end": 25752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25141,
											"end": 25752,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 25104,
											"end": 25991,
											"name": "tag",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 25104,
											"end": 25991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 25104,
											"end": 25991,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24694,
											"end": 25997,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24694,
											"end": 25997,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24694,
											"end": 25997,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24602,
											"end": 25997,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24602,
											"end": 25997,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 24602,
											"end": 25997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Lockup.sol",
								"contracts/Reputify.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"posts(string)": "f8300fca",
							"renounceOwnership()": "715018a6",
							"stake(uint256,bool,string)": "c0497ac8",
							"stakes(address)": "16934fc4",
							"token()": "fc0c546a",
							"transferOwnership(address)": "f2fde38b",
							"unstake(bool,string)": "b7f5a5a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPositive\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"postId\",\"type\":\"string\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"posts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"originalPoster\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPositiveStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalNegativeStake\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPositive\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"postId\",\"type\":\"string\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isPositive\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"postId\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract Reputify\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"predictionOutcome\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"postId\",\"type\":\"string\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lockup.sol\":\"StakingContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Lockup.sol\":{\"keccak256\":\"0xd070d11d82647f4ce41a88bce6c3ec81912d30ff0c625d4947a7a5a80bfd360d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66861b7cb1fcfdcde1d59ff009fc9f2cb92d3be544e576874b01199795b243b9\",\"dweb:/ipfs/QmdFGX5BtSR2odefghCYMmtLHqHqmYEAYqyG8QWTfck87V\"]},\"contracts/Reputify.sol\":{\"keccak256\":\"0x9d7e0558aeeae90b756f2342801bcd581aab22677d4ec1f53810c78ac77d2fbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9320d74dc40f4d48afc1c4d7cba1bc9a5e586e52220405dcbd7d3895f28dfacd\",\"dweb:/ipfs/QmYwzCy6WGsDTEo4kgzq3UTzbCmJFznDTf7jPo4vfHzUAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/Lockup.sol:StakingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 961,
								"contract": "contracts/Lockup.sol:StakingContract",
								"label": "token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(Reputify)1510"
							},
							{
								"astId": 966,
								"contract": "contracts/Lockup.sol:StakingContract",
								"label": "stakes",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(Stake)946_storage)"
							},
							{
								"astId": 971,
								"contract": "contracts/Lockup.sol:StakingContract",
								"label": "posts",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_string_memory_ptr,t_struct(Post)958_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(Reputify)1510": {
								"encoding": "inplace",
								"label": "contract Reputify",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Stake)946_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakingContract.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)946_storage"
							},
							"t_mapping(t_string_memory_ptr,t_struct(Post)958_storage)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => struct StakingContract.Post)",
								"numberOfBytes": "32",
								"value": "t_struct(Post)958_storage"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Post)958_storage": {
								"encoding": "inplace",
								"label": "struct StakingContract.Post",
								"members": [
									{
										"astId": 948,
										"contract": "contracts/Lockup.sol:StakingContract",
										"label": "originalPoster",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 950,
										"contract": "contracts/Lockup.sol:StakingContract",
										"label": "totalStaked",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 952,
										"contract": "contracts/Lockup.sol:StakingContract",
										"label": "totalPositiveStake",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 954,
										"contract": "contracts/Lockup.sol:StakingContract",
										"label": "totalNegativeStake",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 957,
										"contract": "contracts/Lockup.sol:StakingContract",
										"label": "stakers",
										"offset": 0,
										"slot": "4",
										"type": "t_array(t_address)dyn_storage"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(Stake)946_storage": {
								"encoding": "inplace",
								"label": "struct StakingContract.Stake",
								"members": [
									{
										"astId": 941,
										"contract": "contracts/Lockup.sol:StakingContract",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 943,
										"contract": "contracts/Lockup.sol:StakingContract",
										"label": "isPositive",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 945,
										"contract": "contracts/Lockup.sol:StakingContract",
										"label": "postId",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Reputify.sol": {
				"Reputify": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Burned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Minted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Reputify.sol\":167:1027  contract Reputify is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Reputify.sol\":389:587  constructor(address initialOwner, uint256 initialSupply) ERC20(\"Reputify\", \"RPT\") Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Reputify.sol\":479:491  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x5265707574696679000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5250540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/Reputify.sol\":503:537  _mint(initialOwner, initialSupply) */\n  tag_18\n    /* \"contracts/Reputify.sol\":509:521  initialOwner */\n  dup3\n    /* \"contracts/Reputify.sol\":523:536  initialSupply */\n  dup3\n    /* \"contracts/Reputify.sol\":503:508  _mint */\n  shl(0x20, tag_19)\n    /* \"contracts/Reputify.sol\":503:537  _mint(initialOwner, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/Reputify.sol\":389:587  constructor(address initialOwner, uint256 initialSupply) ERC20(\"Reputify\", \"RPT\") Ownable(initialOwner) {... */\n  pop\n  pop\n    /* \"contracts/Reputify.sol\":167:1027  contract Reputify is ERC20, Ownable {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_19:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_23\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_25\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_31)\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_40:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_42:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_43:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_77\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_42\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_44:\n    /* \"#utility.yul\":641:665   */\n  tag_79\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_43\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_80:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_45:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_82\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_44\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_46:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_47:\n    /* \"#utility.yul\":1001:1025   */\n  tag_85\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_46\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_86\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_86:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_48:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_88\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_47\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_91\n  tag_40\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1309:1428   */\ntag_90:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_92\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_45\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_93\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_48\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1718:1817   */\ntag_49:\n    /* \"#utility.yul\":1770:1776   */\n  0x00\n    /* \"#utility.yul\":1804:1809   */\n  dup2\n    /* \"#utility.yul\":1798:1810   */\n  mload\n    /* \"#utility.yul\":1788:1810   */\n  swap1\n  pop\n    /* \"#utility.yul\":1718:1817   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1823:2003   */\ntag_50:\n    /* \"#utility.yul\":1871:1948   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1868:1869   */\n  0x00\n    /* \"#utility.yul\":1861:1949   */\n  mstore\n    /* \"#utility.yul\":1968:1972   */\n  0x41\n    /* \"#utility.yul\":1965:1966   */\n  0x04\n    /* \"#utility.yul\":1958:1973   */\n  mstore\n    /* \"#utility.yul\":1992:1996   */\n  0x24\n    /* \"#utility.yul\":1989:1990   */\n  0x00\n    /* \"#utility.yul\":1982:1997   */\n  revert\n    /* \"#utility.yul\":2009:2189   */\ntag_51:\n    /* \"#utility.yul\":2057:2134   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2054:2055   */\n  0x00\n    /* \"#utility.yul\":2047:2135   */\n  mstore\n    /* \"#utility.yul\":2154:2158   */\n  0x22\n    /* \"#utility.yul\":2151:2152   */\n  0x04\n    /* \"#utility.yul\":2144:2159   */\n  mstore\n    /* \"#utility.yul\":2178:2182   */\n  0x24\n    /* \"#utility.yul\":2175:2176   */\n  0x00\n    /* \"#utility.yul\":2168:2183   */\n  revert\n    /* \"#utility.yul\":2195:2515   */\ntag_52:\n    /* \"#utility.yul\":2239:2245   */\n  0x00\n    /* \"#utility.yul\":2276:2277   */\n  0x02\n    /* \"#utility.yul\":2270:2274   */\n  dup3\n    /* \"#utility.yul\":2266:2278   */\n  div\n    /* \"#utility.yul\":2256:2278   */\n  swap1\n  pop\n    /* \"#utility.yul\":2323:2324   */\n  0x01\n    /* \"#utility.yul\":2317:2321   */\n  dup3\n    /* \"#utility.yul\":2313:2325   */\n  and\n    /* \"#utility.yul\":2344:2362   */\n  dup1\n    /* \"#utility.yul\":2334:2415   */\n  tag_98\n  jumpi\n    /* \"#utility.yul\":2400:2404   */\n  0x7f\n    /* \"#utility.yul\":2392:2398   */\n  dup3\n    /* \"#utility.yul\":2388:2405   */\n  and\n    /* \"#utility.yul\":2378:2405   */\n  swap2\n  pop\n    /* \"#utility.yul\":2334:2415   */\ntag_98:\n    /* \"#utility.yul\":2462:2464   */\n  0x20\n    /* \"#utility.yul\":2454:2460   */\n  dup3\n    /* \"#utility.yul\":2451:2465   */\n  lt\n    /* \"#utility.yul\":2431:2449   */\n  dup2\n    /* \"#utility.yul\":2428:2466   */\n  sub\n    /* \"#utility.yul\":2425:2509   */\n  tag_99\n  jumpi\n    /* \"#utility.yul\":2481:2499   */\n  tag_100\n  tag_51\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2425:2509   */\ntag_99:\n    /* \"#utility.yul\":2246:2515   */\n  pop\n    /* \"#utility.yul\":2195:2515   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2521:2662   */\ntag_53:\n    /* \"#utility.yul\":2570:2574   */\n  0x00\n    /* \"#utility.yul\":2593:2596   */\n  dup2\n    /* \"#utility.yul\":2585:2596   */\n  swap1\n  pop\n    /* \"#utility.yul\":2616:2619   */\n  dup2\n    /* \"#utility.yul\":2613:2614   */\n  0x00\n    /* \"#utility.yul\":2606:2620   */\n  mstore\n    /* \"#utility.yul\":2650:2654   */\n  0x20\n    /* \"#utility.yul\":2647:2648   */\n  0x00\n    /* \"#utility.yul\":2637:2655   */\n  keccak256\n    /* \"#utility.yul\":2629:2655   */\n  swap1\n  pop\n    /* \"#utility.yul\":2521:2662   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2668:2761   */\ntag_54:\n    /* \"#utility.yul\":2705:2711   */\n  0x00\n    /* \"#utility.yul\":2752:2754   */\n  0x20\n    /* \"#utility.yul\":2747:2749   */\n  0x1f\n    /* \"#utility.yul\":2740:2745   */\n  dup4\n    /* \"#utility.yul\":2736:2750   */\n  add\n    /* \"#utility.yul\":2732:2755   */\n  div\n    /* \"#utility.yul\":2722:2755   */\n  swap1\n  pop\n    /* \"#utility.yul\":2668:2761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2767:2874   */\ntag_55:\n    /* \"#utility.yul\":2811:2819   */\n  0x00\n    /* \"#utility.yul\":2861:2866   */\n  dup3\n    /* \"#utility.yul\":2855:2859   */\n  dup3\n    /* \"#utility.yul\":2851:2867   */\n  shl\n    /* \"#utility.yul\":2830:2867   */\n  swap1\n  pop\n    /* \"#utility.yul\":2767:2874   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2880:3273   */\ntag_56:\n    /* \"#utility.yul\":2949:2955   */\n  0x00\n    /* \"#utility.yul\":2999:3000   */\n  0x08\n    /* \"#utility.yul\":2987:2997   */\n  dup4\n    /* \"#utility.yul\":2983:3001   */\n  mul\n    /* \"#utility.yul\":3022:3119   */\n  tag_105\n    /* \"#utility.yul\":3052:3118   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3041:3050   */\n  dup3\n    /* \"#utility.yul\":3022:3119   */\n  tag_55\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":3140:3179   */\n  tag_106\n    /* \"#utility.yul\":3170:3178   */\n  dup7\n    /* \"#utility.yul\":3159:3168   */\n  dup4\n    /* \"#utility.yul\":3140:3179   */\n  tag_55\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":3128:3179   */\n  swap6\n  pop\n    /* \"#utility.yul\":3212:3216   */\n  dup1\n    /* \"#utility.yul\":3208:3217   */\n  not\n    /* \"#utility.yul\":3201:3206   */\n  dup5\n    /* \"#utility.yul\":3197:3218   */\n  and\n    /* \"#utility.yul\":3188:3218   */\n  swap4\n  pop\n    /* \"#utility.yul\":3261:3265   */\n  dup1\n    /* \"#utility.yul\":3251:3259   */\n  dup7\n    /* \"#utility.yul\":3247:3266   */\n  and\n    /* \"#utility.yul\":3240:3245   */\n  dup5\n    /* \"#utility.yul\":3237:3267   */\n  or\n    /* \"#utility.yul\":3227:3267   */\n  swap3\n  pop\n    /* \"#utility.yul\":2956:3273   */\n  pop\n  pop\n    /* \"#utility.yul\":2880:3273   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3279:3339   */\ntag_57:\n    /* \"#utility.yul\":3307:3310   */\n  0x00\n    /* \"#utility.yul\":3328:3333   */\n  dup2\n    /* \"#utility.yul\":3321:3333   */\n  swap1\n  pop\n    /* \"#utility.yul\":3279:3339   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3345:3487   */\ntag_58:\n    /* \"#utility.yul\":3395:3404   */\n  0x00\n    /* \"#utility.yul\":3428:3481   */\n  tag_109\n    /* \"#utility.yul\":3446:3480   */\n  tag_110\n    /* \"#utility.yul\":3455:3479   */\n  tag_111\n    /* \"#utility.yul\":3473:3478   */\n  dup5\n    /* \"#utility.yul\":3455:3479   */\n  tag_46\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3446:3480   */\n  tag_57\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3428:3481   */\n  tag_46\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3415:3481   */\n  swap1\n  pop\n    /* \"#utility.yul\":3345:3487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3493:3568   */\ntag_59:\n    /* \"#utility.yul\":3536:3539   */\n  0x00\n    /* \"#utility.yul\":3557:3562   */\n  dup2\n    /* \"#utility.yul\":3550:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3493:3568   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3574:3843   */\ntag_60:\n    /* \"#utility.yul\":3684:3723   */\n  tag_114\n    /* \"#utility.yul\":3715:3722   */\n  dup4\n    /* \"#utility.yul\":3684:3723   */\n  tag_58\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3745:3836   */\n  tag_115\n    /* \"#utility.yul\":3794:3835   */\n  tag_116\n    /* \"#utility.yul\":3818:3834   */\n  dup3\n    /* \"#utility.yul\":3794:3835   */\n  tag_59\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3786:3792   */\n  dup5\n    /* \"#utility.yul\":3779:3783   */\n  dup5\n    /* \"#utility.yul\":3773:3784   */\n  sload\n    /* \"#utility.yul\":3745:3836   */\n  tag_56\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3739:3743   */\n  dup3\n    /* \"#utility.yul\":3732:3837   */\n  sstore\n    /* \"#utility.yul\":3650:3843   */\n  pop\n    /* \"#utility.yul\":3574:3843   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3849:3922   */\ntag_61:\n    /* \"#utility.yul\":3894:3897   */\n  0x00\n    /* \"#utility.yul\":3849:3922   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3928:4117   */\ntag_62:\n    /* \"#utility.yul\":4005:4037   */\n  tag_119\n  tag_61\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":4046:4111   */\n  tag_120\n    /* \"#utility.yul\":4104:4110   */\n  dup2\n    /* \"#utility.yul\":4096:4102   */\n  dup5\n    /* \"#utility.yul\":4090:4094   */\n  dup5\n    /* \"#utility.yul\":4046:4111   */\n  tag_60\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3981:4117   */\n  pop\n    /* \"#utility.yul\":3928:4117   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4123:4309   */\ntag_63:\n    /* \"#utility.yul\":4183:4303   */\ntag_122:\n    /* \"#utility.yul\":4200:4203   */\n  dup2\n    /* \"#utility.yul\":4193:4198   */\n  dup2\n    /* \"#utility.yul\":4190:4204   */\n  lt\n    /* \"#utility.yul\":4183:4303   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":4254:4293   */\n  tag_125\n    /* \"#utility.yul\":4291:4292   */\n  0x00\n    /* \"#utility.yul\":4284:4289   */\n  dup3\n    /* \"#utility.yul\":4254:4293   */\n  tag_62\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4227:4228   */\n  0x01\n    /* \"#utility.yul\":4220:4225   */\n  dup2\n    /* \"#utility.yul\":4216:4229   */\n  add\n    /* \"#utility.yul\":4207:4229   */\n  swap1\n  pop\n    /* \"#utility.yul\":4183:4303   */\n  jump(tag_122)\ntag_124:\n    /* \"#utility.yul\":4123:4309   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4315:4858   */\ntag_64:\n    /* \"#utility.yul\":4416:4418   */\n  0x1f\n    /* \"#utility.yul\":4411:4414   */\n  dup3\n    /* \"#utility.yul\":4408:4419   */\n  gt\n    /* \"#utility.yul\":4405:4851   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":4450:4488   */\n  tag_128\n    /* \"#utility.yul\":4482:4487   */\n  dup2\n    /* \"#utility.yul\":4450:4488   */\n  tag_53\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4534:4563   */\n  tag_129\n    /* \"#utility.yul\":4552:4562   */\n  dup5\n    /* \"#utility.yul\":4534:4563   */\n  tag_54\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4524:4532   */\n  dup2\n    /* \"#utility.yul\":4520:4564   */\n  add\n    /* \"#utility.yul\":4717:4719   */\n  0x20\n    /* \"#utility.yul\":4705:4715   */\n  dup6\n    /* \"#utility.yul\":4702:4720   */\n  lt\n    /* \"#utility.yul\":4699:4748   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":4738:4746   */\n  dup2\n    /* \"#utility.yul\":4723:4746   */\n  swap1\n  pop\n    /* \"#utility.yul\":4699:4748   */\ntag_130:\n    /* \"#utility.yul\":4761:4841   */\n  tag_131\n    /* \"#utility.yul\":4817:4839   */\n  tag_132\n    /* \"#utility.yul\":4835:4838   */\n  dup6\n    /* \"#utility.yul\":4817:4839   */\n  tag_54\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4807:4815   */\n  dup4\n    /* \"#utility.yul\":4803:4840   */\n  add\n    /* \"#utility.yul\":4790:4801   */\n  dup3\n    /* \"#utility.yul\":4761:4841   */\n  tag_63\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4420:4851   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4851   */\ntag_127:\n    /* \"#utility.yul\":4315:4858   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4864:4981   */\ntag_65:\n    /* \"#utility.yul\":4918:4926   */\n  0x00\n    /* \"#utility.yul\":4968:4973   */\n  dup3\n    /* \"#utility.yul\":4962:4966   */\n  dup3\n    /* \"#utility.yul\":4958:4974   */\n  shr\n    /* \"#utility.yul\":4937:4974   */\n  swap1\n  pop\n    /* \"#utility.yul\":4864:4981   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4987:5156   */\ntag_66:\n    /* \"#utility.yul\":5031:5037   */\n  0x00\n    /* \"#utility.yul\":5064:5115   */\n  tag_135\n    /* \"#utility.yul\":5112:5113   */\n  0x00\n    /* \"#utility.yul\":5108:5114   */\n  not\n    /* \"#utility.yul\":5100:5105   */\n  dup5\n    /* \"#utility.yul\":5097:5098   */\n  0x08\n    /* \"#utility.yul\":5093:5106   */\n  mul\n    /* \"#utility.yul\":5064:5115   */\n  tag_65\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5060:5116   */\n  not\n    /* \"#utility.yul\":5145:5149   */\n  dup1\n    /* \"#utility.yul\":5139:5143   */\n  dup4\n    /* \"#utility.yul\":5135:5150   */\n  and\n    /* \"#utility.yul\":5125:5150   */\n  swap2\n  pop\n    /* \"#utility.yul\":5038:5156   */\n  pop\n    /* \"#utility.yul\":4987:5156   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5161:5456   */\ntag_67:\n    /* \"#utility.yul\":5237:5241   */\n  0x00\n    /* \"#utility.yul\":5383:5412   */\n  tag_137\n    /* \"#utility.yul\":5408:5411   */\n  dup4\n    /* \"#utility.yul\":5402:5406   */\n  dup4\n    /* \"#utility.yul\":5383:5412   */\n  tag_66\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5375:5412   */\n  swap2\n  pop\n    /* \"#utility.yul\":5445:5448   */\n  dup3\n    /* \"#utility.yul\":5442:5443   */\n  0x02\n    /* \"#utility.yul\":5438:5449   */\n  mul\n    /* \"#utility.yul\":5432:5436   */\n  dup3\n    /* \"#utility.yul\":5429:5450   */\n  or\n    /* \"#utility.yul\":5421:5450   */\n  swap1\n  pop\n    /* \"#utility.yul\":5161:5456   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5461:6856   */\ntag_9:\n    /* \"#utility.yul\":5578:5615   */\n  tag_139\n    /* \"#utility.yul\":5611:5614   */\n  dup3\n    /* \"#utility.yul\":5578:5615   */\n  tag_49\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5680:5698   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5672:5678   */\n  dup2\n    /* \"#utility.yul\":5669:5699   */\n  gt\n    /* \"#utility.yul\":5666:5722   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":5702:5720   */\n  tag_141\n  tag_50\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5666:5722   */\ntag_140:\n    /* \"#utility.yul\":5746:5784   */\n  tag_142\n    /* \"#utility.yul\":5778:5782   */\n  dup3\n    /* \"#utility.yul\":5772:5783   */\n  sload\n    /* \"#utility.yul\":5746:5784   */\n  tag_52\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":5831:5898   */\n  tag_143\n    /* \"#utility.yul\":5891:5897   */\n  dup3\n    /* \"#utility.yul\":5883:5889   */\n  dup3\n    /* \"#utility.yul\":5877:5881   */\n  dup6\n    /* \"#utility.yul\":5831:5898   */\n  tag_64\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5925:5926   */\n  0x00\n    /* \"#utility.yul\":5949:5953   */\n  0x20\n    /* \"#utility.yul\":5936:5953   */\n  swap1\n  pop\n    /* \"#utility.yul\":5981:5983   */\n  0x1f\n    /* \"#utility.yul\":5973:5979   */\n  dup4\n    /* \"#utility.yul\":5970:5984   */\n  gt\n    /* \"#utility.yul\":5998:5999   */\n  0x01\n    /* \"#utility.yul\":5993:6611   */\n  dup2\n  eq\n  tag_145\n  jumpi\n    /* \"#utility.yul\":6655:6656   */\n  0x00\n    /* \"#utility.yul\":6672:6678   */\n  dup5\n    /* \"#utility.yul\":6669:6746   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":6721:6730   */\n  dup3\n    /* \"#utility.yul\":6716:6719   */\n  dup8\n    /* \"#utility.yul\":6712:6731   */\n  add\n    /* \"#utility.yul\":6706:6732   */\n  mload\n    /* \"#utility.yul\":6697:6732   */\n  swap1\n  pop\n    /* \"#utility.yul\":6669:6746   */\ntag_146:\n    /* \"#utility.yul\":6772:6839   */\n  tag_147\n    /* \"#utility.yul\":6832:6838   */\n  dup6\n    /* \"#utility.yul\":6825:6830   */\n  dup3\n    /* \"#utility.yul\":6772:6839   */\n  tag_67\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6766:6770   */\n  dup7\n    /* \"#utility.yul\":6759:6840   */\n  sstore\n    /* \"#utility.yul\":6628:6850   */\n  pop\n    /* \"#utility.yul\":5963:6850   */\n  jump(tag_144)\n    /* \"#utility.yul\":5993:6611   */\ntag_145:\n    /* \"#utility.yul\":6045:6049   */\n  0x1f\n    /* \"#utility.yul\":6041:6050   */\n  not\n    /* \"#utility.yul\":6033:6039   */\n  dup5\n    /* \"#utility.yul\":6029:6051   */\n  and\n    /* \"#utility.yul\":6079:6116   */\n  tag_148\n    /* \"#utility.yul\":6111:6115   */\n  dup7\n    /* \"#utility.yul\":6079:6116   */\n  tag_53\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":6138:6139   */\n  0x00\n    /* \"#utility.yul\":6152:6360   */\ntag_149:\n    /* \"#utility.yul\":6166:6173   */\n  dup3\n    /* \"#utility.yul\":6163:6164   */\n  dup2\n    /* \"#utility.yul\":6160:6174   */\n  lt\n    /* \"#utility.yul\":6152:6360   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":6245:6254   */\n  dup5\n    /* \"#utility.yul\":6240:6243   */\n  dup10\n    /* \"#utility.yul\":6236:6255   */\n  add\n    /* \"#utility.yul\":6230:6256   */\n  mload\n    /* \"#utility.yul\":6222:6228   */\n  dup3\n    /* \"#utility.yul\":6215:6257   */\n  sstore\n    /* \"#utility.yul\":6296:6297   */\n  0x01\n    /* \"#utility.yul\":6288:6294   */\n  dup3\n    /* \"#utility.yul\":6284:6298   */\n  add\n    /* \"#utility.yul\":6274:6298   */\n  swap2\n  pop\n    /* \"#utility.yul\":6343:6345   */\n  0x20\n    /* \"#utility.yul\":6332:6341   */\n  dup6\n    /* \"#utility.yul\":6328:6346   */\n  add\n    /* \"#utility.yul\":6315:6346   */\n  swap5\n  pop\n    /* \"#utility.yul\":6189:6193   */\n  0x20\n    /* \"#utility.yul\":6186:6187   */\n  dup2\n    /* \"#utility.yul\":6182:6194   */\n  add\n    /* \"#utility.yul\":6177:6194   */\n  swap1\n  pop\n    /* \"#utility.yul\":6152:6360   */\n  jump(tag_149)\ntag_151:\n    /* \"#utility.yul\":6388:6394   */\n  dup7\n    /* \"#utility.yul\":6379:6386   */\n  dup4\n    /* \"#utility.yul\":6376:6395   */\n  lt\n    /* \"#utility.yul\":6373:6552   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":6446:6455   */\n  dup5\n    /* \"#utility.yul\":6441:6444   */\n  dup10\n    /* \"#utility.yul\":6437:6456   */\n  add\n    /* \"#utility.yul\":6431:6457   */\n  mload\n    /* \"#utility.yul\":6489:6537   */\n  tag_153\n    /* \"#utility.yul\":6531:6535   */\n  0x1f\n    /* \"#utility.yul\":6523:6529   */\n  dup10\n    /* \"#utility.yul\":6519:6536   */\n  and\n    /* \"#utility.yul\":6508:6517   */\n  dup3\n    /* \"#utility.yul\":6489:6537   */\n  tag_66\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6481:6487   */\n  dup4\n    /* \"#utility.yul\":6474:6538   */\n  sstore\n    /* \"#utility.yul\":6396:6552   */\n  pop\n    /* \"#utility.yul\":6373:6552   */\ntag_152:\n    /* \"#utility.yul\":6598:6599   */\n  0x01\n    /* \"#utility.yul\":6594:6595   */\n  0x02\n    /* \"#utility.yul\":6586:6592   */\n  dup9\n    /* \"#utility.yul\":6582:6596   */\n  mul\n    /* \"#utility.yul\":6578:6600   */\n  add\n    /* \"#utility.yul\":6572:6576   */\n  dup9\n    /* \"#utility.yul\":6565:6601   */\n  sstore\n    /* \"#utility.yul\":6000:6611   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5963:6850   */\ntag_144:\n  pop\n    /* \"#utility.yul\":5553:6856   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5461:6856   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6862:6980   */\ntag_68:\n    /* \"#utility.yul\":6949:6973   */\n  tag_155\n    /* \"#utility.yul\":6967:6972   */\n  dup2\n    /* \"#utility.yul\":6949:6973   */\n  tag_43\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":6944:6947   */\n  dup3\n    /* \"#utility.yul\":6937:6974   */\n  mstore\n    /* \"#utility.yul\":6862:6980   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6986:7208   */\ntag_14:\n    /* \"#utility.yul\":7079:7083   */\n  0x00\n    /* \"#utility.yul\":7117:7119   */\n  0x20\n    /* \"#utility.yul\":7106:7115   */\n  dup3\n    /* \"#utility.yul\":7102:7120   */\n  add\n    /* \"#utility.yul\":7094:7120   */\n  swap1\n  pop\n    /* \"#utility.yul\":7130:7201   */\n  tag_157\n    /* \"#utility.yul\":7198:7199   */\n  0x00\n    /* \"#utility.yul\":7187:7196   */\n  dup4\n    /* \"#utility.yul\":7183:7200   */\n  add\n    /* \"#utility.yul\":7174:7180   */\n  dup5\n    /* \"#utility.yul\":7130:7201   */\n  tag_68\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6986:7208   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7214:7394   */\ntag_69:\n    /* \"#utility.yul\":7262:7339   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7259:7260   */\n  0x00\n    /* \"#utility.yul\":7252:7340   */\n  mstore\n    /* \"#utility.yul\":7359:7363   */\n  0x11\n    /* \"#utility.yul\":7356:7357   */\n  0x04\n    /* \"#utility.yul\":7349:7364   */\n  mstore\n    /* \"#utility.yul\":7383:7387   */\n  0x24\n    /* \"#utility.yul\":7380:7381   */\n  0x00\n    /* \"#utility.yul\":7373:7388   */\n  revert\n    /* \"#utility.yul\":7400:7591   */\ntag_30:\n    /* \"#utility.yul\":7440:7443   */\n  0x00\n    /* \"#utility.yul\":7459:7479   */\n  tag_160\n    /* \"#utility.yul\":7477:7478   */\n  dup3\n    /* \"#utility.yul\":7459:7479   */\n  tag_46\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7454:7479   */\n  swap2\n  pop\n    /* \"#utility.yul\":7493:7513   */\n  tag_161\n    /* \"#utility.yul\":7511:7512   */\n  dup4\n    /* \"#utility.yul\":7493:7513   */\n  tag_46\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7488:7513   */\n  swap3\n  pop\n    /* \"#utility.yul\":7536:7537   */\n  dup3\n    /* \"#utility.yul\":7533:7534   */\n  dup3\n    /* \"#utility.yul\":7529:7538   */\n  add\n    /* \"#utility.yul\":7522:7538   */\n  swap1\n  pop\n    /* \"#utility.yul\":7557:7560   */\n  dup1\n    /* \"#utility.yul\":7554:7555   */\n  dup3\n    /* \"#utility.yul\":7551:7561   */\n  gt\n    /* \"#utility.yul\":7548:7584   */\n  iszero\n  tag_162\n  jumpi\n    /* \"#utility.yul\":7564:7582   */\n  tag_163\n  tag_69\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7548:7584   */\ntag_162:\n    /* \"#utility.yul\":7400:7591   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7597:7715   */\ntag_70:\n    /* \"#utility.yul\":7684:7708   */\n  tag_165\n    /* \"#utility.yul\":7702:7707   */\n  dup2\n    /* \"#utility.yul\":7684:7708   */\n  tag_46\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7679:7682   */\n  dup3\n    /* \"#utility.yul\":7672:7709   */\n  mstore\n    /* \"#utility.yul\":7597:7715   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7721:8163   */\ntag_34:\n    /* \"#utility.yul\":7870:7874   */\n  0x00\n    /* \"#utility.yul\":7908:7910   */\n  0x60\n    /* \"#utility.yul\":7897:7906   */\n  dup3\n    /* \"#utility.yul\":7893:7911   */\n  add\n    /* \"#utility.yul\":7885:7911   */\n  swap1\n  pop\n    /* \"#utility.yul\":7921:7992   */\n  tag_167\n    /* \"#utility.yul\":7989:7990   */\n  0x00\n    /* \"#utility.yul\":7978:7987   */\n  dup4\n    /* \"#utility.yul\":7974:7991   */\n  add\n    /* \"#utility.yul\":7965:7971   */\n  dup7\n    /* \"#utility.yul\":7921:7992   */\n  tag_68\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":8002:8074   */\n  tag_168\n    /* \"#utility.yul\":8070:8072   */\n  0x20\n    /* \"#utility.yul\":8059:8068   */\n  dup4\n    /* \"#utility.yul\":8055:8073   */\n  add\n    /* \"#utility.yul\":8046:8052   */\n  dup6\n    /* \"#utility.yul\":8002:8074   */\n  tag_70\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":8084:8156   */\n  tag_169\n    /* \"#utility.yul\":8152:8154   */\n  0x40\n    /* \"#utility.yul\":8141:8150   */\n  dup4\n    /* \"#utility.yul\":8137:8155   */\n  add\n    /* \"#utility.yul\":8128:8134   */\n  dup5\n    /* \"#utility.yul\":8084:8156   */\n  tag_70\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":7721:8163   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8169:8391   */\ntag_38:\n    /* \"#utility.yul\":8262:8266   */\n  0x00\n    /* \"#utility.yul\":8300:8302   */\n  0x20\n    /* \"#utility.yul\":8289:8298   */\n  dup3\n    /* \"#utility.yul\":8285:8303   */\n  add\n    /* \"#utility.yul\":8277:8303   */\n  swap1\n  pop\n    /* \"#utility.yul\":8313:8384   */\n  tag_171\n    /* \"#utility.yul\":8381:8382   */\n  0x00\n    /* \"#utility.yul\":8370:8379   */\n  dup4\n    /* \"#utility.yul\":8366:8383   */\n  add\n    /* \"#utility.yul\":8357:8363   */\n  dup5\n    /* \"#utility.yul\":8313:8384   */\n  tag_70\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8169:8391   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Reputify.sol\":167:1027  contract Reputify is ERC20, Ownable {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Reputify.sol\":167:1027  contract Reputify is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x23b872dd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Reputify.sol\":642:770  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_8:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/Reputify.sol\":821:1025  function burn(uint256 amount) external {... */\n    tag_9:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_14:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_15:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_79\n      swap1\n      tag_78\n      jump\t// in\n    tag_79:\n      dup1\n      iszero\n      tag_80\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_81\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_80)\n    tag_81:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_82:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_82\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_80:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Reputify.sol\":642:770  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_97:\n        /* \"contracts/Reputify.sol\":713:730  _mint(to, amount) */\n      tag_100\n        /* \"contracts/Reputify.sol\":719:721  to */\n      dup3\n        /* \"contracts/Reputify.sol\":723:729  amount */\n      dup3\n        /* \"contracts/Reputify.sol\":713:718  _mint */\n      tag_101\n        /* \"contracts/Reputify.sol\":713:730  _mint(to, amount) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/Reputify.sol\":752:754  to */\n      dup2\n        /* \"contracts/Reputify.sol\":745:763  Minted(to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe\n        /* \"contracts/Reputify.sol\":756:762  amount */\n      dup3\n        /* \"contracts/Reputify.sol\":745:763  Minted(to, amount) */\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Reputify.sol\":642:770  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Reputify.sol\":821:1025  function burn(uint256 amount) external {... */\n    tag_49:\n        /* \"contracts/Reputify.sol\":903:909  amount */\n      dup1\n        /* \"contracts/Reputify.sol\":878:899  balanceOf(msg.sender) */\n      tag_104\n        /* \"contracts/Reputify.sol\":888:898  msg.sender */\n      caller\n        /* \"contracts/Reputify.sol\":878:887  balanceOf */\n      tag_53\n        /* \"contracts/Reputify.sol\":878:899  balanceOf(msg.sender) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/Reputify.sol\":878:909  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/Reputify.sol\":870:942  require(balanceOf(msg.sender) >= amount, \"Insufficient balance to burn\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"contracts/Reputify.sol\":952:977  _burn(msg.sender, amount) */\n      tag_108\n        /* \"contracts/Reputify.sol\":958:968  msg.sender */\n      caller\n        /* \"contracts/Reputify.sol\":970:976  amount */\n      dup3\n        /* \"contracts/Reputify.sol\":952:957  _burn */\n      tag_109\n        /* \"contracts/Reputify.sol\":952:977  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/Reputify.sol\":999:1009  msg.sender */\n      caller\n        /* \"contracts/Reputify.sol\":992:1018  Burned(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7\n        /* \"contracts/Reputify.sol\":1011:1017  amount */\n      dup3\n        /* \"contracts/Reputify.sol\":992:1018  Burned(msg.sender, amount) */\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Reputify.sol\":821:1025  function burn(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_119\n      swap1\n      tag_78\n      jump\t// in\n    tag_119:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_120\n      swap1\n      tag_78\n      jump\t// in\n    tag_120:\n      dup1\n      iszero\n      tag_121\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_122\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_121)\n    tag_122:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_123:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_123\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_121:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_131\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_146\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_58\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_163\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_173\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_176\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_178)\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_182)\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_183\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_184:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_185:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_186:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_187:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_188:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_215\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_184\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":711:782   */\n      tag_216\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_185\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_217\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_186\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":881:910   */\n      tag_218\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_187\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_23:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_220\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_188\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_190:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_192:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_193:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_226\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_192\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_194:\n        /* \"#utility.yul\":1876:1900   */\n      tag_228\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_193\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_229:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_195:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_231\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_194\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_196:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_197:\n        /* \"#utility.yul\":2232:2256   */\n      tag_234\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_196\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_235\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_235:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_198:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_237\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_197\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_26:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_240\n      tag_190\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":2525:2644   */\n    tag_239:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_241\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_195\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_242\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_198\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_199:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_200:\n        /* \"#utility.yul\":3089:3110   */\n      tag_245\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_199\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_29:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_247\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_200\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_201:\n        /* \"#utility.yul\":3426:3450   */\n      tag_249\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_196\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_33:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_251\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_201\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_36:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_254\n      tag_190\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":3801:3920   */\n    tag_253:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_255\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_195\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_256\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_195\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_257\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_198\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_202:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_203:\n        /* \"#utility.yul\":4491:4513   */\n      tag_260\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_202\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_42:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_262\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_203\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_48:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_265\n      tag_190\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":4822:4941   */\n    tag_264:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_266\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_198\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5410   */\n    tag_52:\n        /* \"#utility.yul\":5140:5146   */\n      0x00\n        /* \"#utility.yul\":5189:5191   */\n      0x20\n        /* \"#utility.yul\":5177:5186   */\n      dup3\n        /* \"#utility.yul\":5168:5175   */\n      dup5\n        /* \"#utility.yul\":5164:5187   */\n      sub\n        /* \"#utility.yul\":5160:5192   */\n      slt\n        /* \"#utility.yul\":5157:5276   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":5195:5274   */\n      tag_269\n      tag_190\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5157:5276   */\n    tag_268:\n        /* \"#utility.yul\":5315:5316   */\n      0x00\n        /* \"#utility.yul\":5340:5393   */\n      tag_270\n        /* \"#utility.yul\":5385:5392   */\n      dup5\n        /* \"#utility.yul\":5376:5382   */\n      dup3\n        /* \"#utility.yul\":5365:5374   */\n      dup6\n        /* \"#utility.yul\":5361:5383   */\n      add\n        /* \"#utility.yul\":5340:5393   */\n      tag_195\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":5330:5393   */\n      swap2\n      pop\n        /* \"#utility.yul\":5286:5403   */\n      pop\n        /* \"#utility.yul\":5081:5410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5416:5534   */\n    tag_204:\n        /* \"#utility.yul\":5503:5527   */\n      tag_272\n        /* \"#utility.yul\":5521:5526   */\n      dup2\n        /* \"#utility.yul\":5503:5527   */\n      tag_193\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":5498:5501   */\n      dup3\n        /* \"#utility.yul\":5491:5528   */\n      mstore\n        /* \"#utility.yul\":5416:5534   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5540:5762   */\n    tag_60:\n        /* \"#utility.yul\":5633:5637   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5660:5669   */\n      dup3\n        /* \"#utility.yul\":5656:5674   */\n      add\n        /* \"#utility.yul\":5648:5674   */\n      swap1\n      pop\n        /* \"#utility.yul\":5684:5755   */\n      tag_274\n        /* \"#utility.yul\":5752:5753   */\n      0x00\n        /* \"#utility.yul\":5741:5750   */\n      dup4\n        /* \"#utility.yul\":5737:5754   */\n      add\n        /* \"#utility.yul\":5728:5734   */\n      dup5\n        /* \"#utility.yul\":5684:5755   */\n      tag_204\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":5540:5762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5768:6242   */\n    tag_70:\n        /* \"#utility.yul\":5836:5842   */\n      0x00\n        /* \"#utility.yul\":5844:5850   */\n      dup1\n        /* \"#utility.yul\":5893:5895   */\n      0x40\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5872:5879   */\n      dup6\n        /* \"#utility.yul\":5868:5891   */\n      sub\n        /* \"#utility.yul\":5864:5896   */\n      slt\n        /* \"#utility.yul\":5861:5980   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":5899:5978   */\n      tag_277\n      tag_190\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":5861:5980   */\n    tag_276:\n        /* \"#utility.yul\":6019:6020   */\n      0x00\n        /* \"#utility.yul\":6044:6097   */\n      tag_278\n        /* \"#utility.yul\":6089:6096   */\n      dup6\n        /* \"#utility.yul\":6080:6086   */\n      dup3\n        /* \"#utility.yul\":6069:6078   */\n      dup7\n        /* \"#utility.yul\":6065:6087   */\n      add\n        /* \"#utility.yul\":6044:6097   */\n      tag_195\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":6034:6097   */\n      swap3\n      pop\n        /* \"#utility.yul\":5990:6107   */\n      pop\n        /* \"#utility.yul\":6146:6148   */\n      0x20\n        /* \"#utility.yul\":6172:6225   */\n      tag_279\n        /* \"#utility.yul\":6217:6224   */\n      dup6\n        /* \"#utility.yul\":6208:6214   */\n      dup3\n        /* \"#utility.yul\":6197:6206   */\n      dup7\n        /* \"#utility.yul\":6193:6215   */\n      add\n        /* \"#utility.yul\":6172:6225   */\n      tag_195\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":6162:6225   */\n      swap2\n      pop\n        /* \"#utility.yul\":6117:6235   */\n      pop\n        /* \"#utility.yul\":5768:6242   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6428   */\n    tag_205:\n        /* \"#utility.yul\":6296:6373   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6293:6294   */\n      0x00\n        /* \"#utility.yul\":6286:6374   */\n      mstore\n        /* \"#utility.yul\":6393:6397   */\n      0x22\n        /* \"#utility.yul\":6390:6391   */\n      0x04\n        /* \"#utility.yul\":6383:6398   */\n      mstore\n        /* \"#utility.yul\":6417:6421   */\n      0x24\n        /* \"#utility.yul\":6414:6415   */\n      0x00\n        /* \"#utility.yul\":6407:6422   */\n      revert\n        /* \"#utility.yul\":6434:6754   */\n    tag_78:\n        /* \"#utility.yul\":6478:6484   */\n      0x00\n        /* \"#utility.yul\":6515:6516   */\n      0x02\n        /* \"#utility.yul\":6509:6513   */\n      dup3\n        /* \"#utility.yul\":6505:6517   */\n      div\n        /* \"#utility.yul\":6495:6517   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6563   */\n      0x01\n        /* \"#utility.yul\":6556:6560   */\n      dup3\n        /* \"#utility.yul\":6552:6564   */\n      and\n        /* \"#utility.yul\":6583:6601   */\n      dup1\n        /* \"#utility.yul\":6573:6654   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":6639:6643   */\n      0x7f\n        /* \"#utility.yul\":6631:6637   */\n      dup3\n        /* \"#utility.yul\":6627:6644   */\n      and\n        /* \"#utility.yul\":6617:6644   */\n      swap2\n      pop\n        /* \"#utility.yul\":6573:6654   */\n    tag_282:\n        /* \"#utility.yul\":6701:6703   */\n      0x20\n        /* \"#utility.yul\":6693:6699   */\n      dup3\n        /* \"#utility.yul\":6690:6704   */\n      lt\n        /* \"#utility.yul\":6670:6688   */\n      dup2\n        /* \"#utility.yul\":6667:6705   */\n      sub\n        /* \"#utility.yul\":6664:6748   */\n      tag_283\n      jumpi\n        /* \"#utility.yul\":6720:6738   */\n      tag_284\n      tag_205\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":6664:6748   */\n    tag_283:\n        /* \"#utility.yul\":6485:6754   */\n      pop\n        /* \"#utility.yul\":6434:6754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6760:6938   */\n    tag_206:\n        /* \"#utility.yul\":6900:6930   */\n      0x496e73756666696369656e742062616c616e636520746f206275726e00000000\n        /* \"#utility.yul\":6896:6897   */\n      0x00\n        /* \"#utility.yul\":6888:6894   */\n      dup3\n        /* \"#utility.yul\":6884:6898   */\n      add\n        /* \"#utility.yul\":6877:6931   */\n      mstore\n        /* \"#utility.yul\":6760:6938   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6944:7310   */\n    tag_207:\n        /* \"#utility.yul\":7086:7089   */\n      0x00\n        /* \"#utility.yul\":7107:7174   */\n      tag_287\n        /* \"#utility.yul\":7171:7173   */\n      0x1c\n        /* \"#utility.yul\":7166:7169   */\n      dup4\n        /* \"#utility.yul\":7107:7174   */\n      tag_185\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":7100:7174   */\n      swap2\n      pop\n        /* \"#utility.yul\":7183:7276   */\n      tag_288\n        /* \"#utility.yul\":7272:7275   */\n      dup3\n        /* \"#utility.yul\":7183:7276   */\n      tag_206\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":7301:7303   */\n      0x20\n        /* \"#utility.yul\":7296:7299   */\n      dup3\n        /* \"#utility.yul\":7292:7304   */\n      add\n        /* \"#utility.yul\":7285:7304   */\n      swap1\n      pop\n        /* \"#utility.yul\":6944:7310   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7316:7735   */\n    tag_107:\n        /* \"#utility.yul\":7482:7486   */\n      0x00\n        /* \"#utility.yul\":7520:7522   */\n      0x20\n        /* \"#utility.yul\":7509:7518   */\n      dup3\n        /* \"#utility.yul\":7505:7523   */\n      add\n        /* \"#utility.yul\":7497:7523   */\n      swap1\n      pop\n        /* \"#utility.yul\":7569:7578   */\n      dup2\n        /* \"#utility.yul\":7563:7567   */\n      dup2\n        /* \"#utility.yul\":7559:7579   */\n      sub\n        /* \"#utility.yul\":7555:7556   */\n      0x00\n        /* \"#utility.yul\":7544:7553   */\n      dup4\n        /* \"#utility.yul\":7540:7557   */\n      add\n        /* \"#utility.yul\":7533:7580   */\n      mstore\n        /* \"#utility.yul\":7597:7728   */\n      tag_290\n        /* \"#utility.yul\":7723:7727   */\n      dup2\n        /* \"#utility.yul\":7597:7728   */\n      tag_207\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":7589:7728   */\n      swap1\n      pop\n        /* \"#utility.yul\":7316:7735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7741:8183   */\n    tag_143:\n        /* \"#utility.yul\":7890:7894   */\n      0x00\n        /* \"#utility.yul\":7928:7930   */\n      0x60\n        /* \"#utility.yul\":7917:7926   */\n      dup3\n        /* \"#utility.yul\":7913:7931   */\n      add\n        /* \"#utility.yul\":7905:7931   */\n      swap1\n      pop\n        /* \"#utility.yul\":7941:8012   */\n      tag_292\n        /* \"#utility.yul\":8009:8010   */\n      0x00\n        /* \"#utility.yul\":7998:8007   */\n      dup4\n        /* \"#utility.yul\":7994:8011   */\n      add\n        /* \"#utility.yul\":7985:7991   */\n      dup7\n        /* \"#utility.yul\":7941:8012   */\n      tag_204\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":8022:8094   */\n      tag_293\n        /* \"#utility.yul\":8090:8092   */\n      0x20\n        /* \"#utility.yul\":8079:8088   */\n      dup4\n        /* \"#utility.yul\":8075:8093   */\n      add\n        /* \"#utility.yul\":8066:8072   */\n      dup6\n        /* \"#utility.yul\":8022:8094   */\n      tag_201\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8104:8176   */\n      tag_294\n        /* \"#utility.yul\":8172:8174   */\n      0x40\n        /* \"#utility.yul\":8161:8170   */\n      dup4\n        /* \"#utility.yul\":8157:8175   */\n      add\n        /* \"#utility.yul\":8148:8154   */\n      dup5\n        /* \"#utility.yul\":8104:8176   */\n      tag_201\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":7741:8183   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8189:8369   */\n    tag_208:\n        /* \"#utility.yul\":8237:8314   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8234:8235   */\n      0x00\n        /* \"#utility.yul\":8227:8315   */\n      mstore\n        /* \"#utility.yul\":8334:8338   */\n      0x11\n        /* \"#utility.yul\":8331:8332   */\n      0x04\n        /* \"#utility.yul\":8324:8339   */\n      mstore\n        /* \"#utility.yul\":8358:8362   */\n      0x24\n        /* \"#utility.yul\":8355:8356   */\n      0x00\n        /* \"#utility.yul\":8348:8363   */\n      revert\n        /* \"#utility.yul\":8375:8566   */\n    tag_177:\n        /* \"#utility.yul\":8415:8418   */\n      0x00\n        /* \"#utility.yul\":8434:8454   */\n      tag_297\n        /* \"#utility.yul\":8452:8453   */\n      dup3\n        /* \"#utility.yul\":8434:8454   */\n      tag_196\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":8429:8454   */\n      swap2\n      pop\n        /* \"#utility.yul\":8468:8488   */\n      tag_298\n        /* \"#utility.yul\":8486:8487   */\n      dup4\n        /* \"#utility.yul\":8468:8488   */\n      tag_196\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":8463:8488   */\n      swap3\n      pop\n        /* \"#utility.yul\":8511:8512   */\n      dup3\n        /* \"#utility.yul\":8508:8509   */\n      dup3\n        /* \"#utility.yul\":8504:8513   */\n      add\n        /* \"#utility.yul\":8497:8513   */\n      swap1\n      pop\n        /* \"#utility.yul\":8532:8535   */\n      dup1\n        /* \"#utility.yul\":8529:8530   */\n      dup3\n        /* \"#utility.yul\":8526:8536   */\n      gt\n        /* \"#utility.yul\":8523:8559   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":8539:8557   */\n      tag_300\n      tag_208\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":8523:8559   */\n    tag_299:\n        /* \"#utility.yul\":8375:8566   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122072812d813afda4ad2c3f8a8fc7898fab9d89aba12703abec276db8dac9c9b45664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1461": {
									"entryPoint": null,
									"id": 1461,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 538,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 343,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 671,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 1353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2334,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1839,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2223,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1608,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1740,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1777,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8394:8",
										"nodeType": "YulBlock",
										"src": "0:8394:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:8",
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nativeSrc": "57:19:8",
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:8",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nativeSrc": "67:9:8",
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:8",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nativeSrc": "177:28:8",
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:8",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:8",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nativeSrc": "187:12:8",
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nativeSrc": "187:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nativeSrc": "300:28:8",
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:8",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:8",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nativeSrc": "310:12:8",
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nativeSrc": "310:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nativeSrc": "379:81:8",
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nativeSrc": "389:65:8",
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:8",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nativeSrc": "400:54:8",
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:8",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:8",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nativeSrc": "511:51:8",
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nativeSrc": "521:35:8",
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nativeSrc": "532:24:8",
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:8",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:8",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nativeSrc": "611:79:8",
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:8",
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:8",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:8",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nativeSrc": "670:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nativeSrc": "670:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nativeSrc": "641:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nativeSrc": "631:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nativeSrc": "624:43:8",
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nativeSrc": "621:63:8",
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:8",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nativeSrc": "759:80:8",
													"nodeType": "YulBlock",
													"src": "759:80:8",
													"statements": [
														{
															"nativeSrc": "769:22:8",
															"nodeType": "YulAssignment",
															"src": "769:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:8"
																},
																"nativeSrc": "778:13:8",
																"nodeType": "YulFunctionCall",
																"src": "778:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:8"
																},
																"nativeSrc": "800:33:8",
																"nodeType": "YulFunctionCall",
																"src": "800:33:8"
															},
															"nativeSrc": "800:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:8",
														"nodeType": "YulTypedName",
														"src": "737:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:8",
														"nodeType": "YulTypedName",
														"src": "745:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:8",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													}
												],
												"src": "696:143:8"
											},
											{
												"body": {
													"nativeSrc": "890:32:8",
													"nodeType": "YulBlock",
													"src": "890:32:8",
													"statements": [
														{
															"nativeSrc": "900:16:8",
															"nodeType": "YulAssignment",
															"src": "900:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:8",
																"nodeType": "YulIdentifier",
																"src": "911:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:8",
														"nodeType": "YulTypedName",
														"src": "872:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:8",
														"nodeType": "YulTypedName",
														"src": "882:7:8",
														"type": ""
													}
												],
												"src": "845:77:8"
											},
											{
												"body": {
													"nativeSrc": "971:79:8",
													"nodeType": "YulBlock",
													"src": "971:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:8",
																"nodeType": "YulBlock",
																"src": "1028:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:8"
																			},
																			"nativeSrc": "1030:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:8"
																		},
																		"nativeSrc": "1030:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:8"
																				},
																				"nativeSrc": "1001:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:8"
																		},
																		"nativeSrc": "991:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:8"
																},
																"nativeSrc": "984:43:8",
																"nodeType": "YulFunctionCall",
																"src": "984:43:8"
															},
															"nativeSrc": "981:63:8",
															"nodeType": "YulIf",
															"src": "981:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:8",
														"nodeType": "YulTypedName",
														"src": "964:5:8",
														"type": ""
													}
												],
												"src": "928:122:8"
											},
											{
												"body": {
													"nativeSrc": "1119:80:8",
													"nodeType": "YulBlock",
													"src": "1119:80:8",
													"statements": [
														{
															"nativeSrc": "1129:22:8",
															"nodeType": "YulAssignment",
															"src": "1129:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:8"
																},
																"nativeSrc": "1138:13:8",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:8"
																},
																"nativeSrc": "1160:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:8"
															},
															"nativeSrc": "1160:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:8",
														"nodeType": "YulTypedName",
														"src": "1097:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:8",
														"nodeType": "YulTypedName",
														"src": "1105:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:8",
														"nodeType": "YulTypedName",
														"src": "1113:5:8",
														"type": ""
													}
												],
												"src": "1056:143:8"
											},
											{
												"body": {
													"nativeSrc": "1299:413:8",
													"nodeType": "YulBlock",
													"src": "1299:413:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1345:83:8",
																"nodeType": "YulBlock",
																"src": "1345:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1347:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:8"
																			},
																			"nativeSrc": "1347:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:8"
																		},
																		"nativeSrc": "1347:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1320:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1329:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1316:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:8"
																		},
																		"nativeSrc": "1316:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1312:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:8"
																},
																"nativeSrc": "1312:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1312:32:8"
															},
															"nativeSrc": "1309:119:8",
															"nodeType": "YulIf",
															"src": "1309:119:8"
														},
														{
															"nativeSrc": "1438:128:8",
															"nodeType": "YulBlock",
															"src": "1438:128:8",
															"statements": [
																{
																	"nativeSrc": "1453:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1467:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1457:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1482:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1482:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1528:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1539:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1524:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:8"
																				},
																				"nativeSrc": "1524:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1548:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1492:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:8"
																		},
																		"nativeSrc": "1492:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1482:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1576:129:8",
															"nodeType": "YulBlock",
															"src": "1576:129:8",
															"statements": [
																{
																	"nativeSrc": "1591:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1605:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1595:6:8",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1621:74:8",
																	"nodeType": "YulAssignment",
																	"src": "1621:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1667:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1678:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1663:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:8"
																				},
																				"nativeSrc": "1663:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1687:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1631:31:8",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:8"
																		},
																		"nativeSrc": "1631:64:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1621:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nativeSrc": "1205:507:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1261:9:8",
														"nodeType": "YulTypedName",
														"src": "1261:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1272:7:8",
														"nodeType": "YulTypedName",
														"src": "1272:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1284:6:8",
														"nodeType": "YulTypedName",
														"src": "1284:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1292:6:8",
														"nodeType": "YulTypedName",
														"src": "1292:6:8",
														"type": ""
													}
												],
												"src": "1205:507:8"
											},
											{
												"body": {
													"nativeSrc": "1777:40:8",
													"nodeType": "YulBlock",
													"src": "1777:40:8",
													"statements": [
														{
															"nativeSrc": "1788:22:8",
															"nodeType": "YulAssignment",
															"src": "1788:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1804:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1804:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1798:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1798:5:8"
																},
																"nativeSrc": "1798:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1798:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1788:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1718:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1760:5:8",
														"nodeType": "YulTypedName",
														"src": "1760:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1770:6:8",
														"nodeType": "YulTypedName",
														"src": "1770:6:8",
														"type": ""
													}
												],
												"src": "1718:99:8"
											},
											{
												"body": {
													"nativeSrc": "1851:152:8",
													"nodeType": "YulBlock",
													"src": "1851:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1868:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1868:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1871:77:8",
																		"nodeType": "YulLiteral",
																		"src": "1871:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1861:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1861:6:8"
																},
																"nativeSrc": "1861:88:8",
																"nodeType": "YulFunctionCall",
																"src": "1861:88:8"
															},
															"nativeSrc": "1861:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "1861:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1965:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1965:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1968:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1968:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1958:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1958:6:8"
																},
																"nativeSrc": "1958:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1958:15:8"
															},
															"nativeSrc": "1958:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1958:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1989:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1989:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1992:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1982:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1982:6:8"
																},
																"nativeSrc": "1982:15:8",
																"nodeType": "YulFunctionCall",
																"src": "1982:15:8"
															},
															"nativeSrc": "1982:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "1982:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1823:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1823:180:8"
											},
											{
												"body": {
													"nativeSrc": "2037:152:8",
													"nodeType": "YulBlock",
													"src": "2037:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2054:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2054:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2057:77:8",
																		"nodeType": "YulLiteral",
																		"src": "2057:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2047:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2047:6:8"
																},
																"nativeSrc": "2047:88:8",
																"nodeType": "YulFunctionCall",
																"src": "2047:88:8"
															},
															"nativeSrc": "2047:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "2047:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2151:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2151:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2154:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2154:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2144:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2144:6:8"
																},
																"nativeSrc": "2144:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2144:15:8"
															},
															"nativeSrc": "2144:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2144:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2175:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2175:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2178:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2178:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2168:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2168:6:8"
																},
																"nativeSrc": "2168:15:8",
																"nodeType": "YulFunctionCall",
																"src": "2168:15:8"
															},
															"nativeSrc": "2168:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "2168:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2009:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "2009:180:8"
											},
											{
												"body": {
													"nativeSrc": "2246:269:8",
													"nodeType": "YulBlock",
													"src": "2246:269:8",
													"statements": [
														{
															"nativeSrc": "2256:22:8",
															"nodeType": "YulAssignment",
															"src": "2256:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2270:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2270:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2276:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2276:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2266:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2266:3:8"
																},
																"nativeSrc": "2266:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2266:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2256:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2256:6:8"
																}
															]
														},
														{
															"nativeSrc": "2287:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2287:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2317:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2317:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2323:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2323:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2313:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2313:3:8"
																},
																"nativeSrc": "2313:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2313:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2291:18:8",
																	"nodeType": "YulTypedName",
																	"src": "2291:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2364:51:8",
																"nodeType": "YulBlock",
																"src": "2364:51:8",
																"statements": [
																	{
																		"nativeSrc": "2378:27:8",
																		"nodeType": "YulAssignment",
																		"src": "2378:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2392:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2392:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2400:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2400:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2388:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2388:3:8"
																			},
																			"nativeSrc": "2388:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2388:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2378:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2378:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2344:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2344:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2337:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2337:6:8"
																},
																"nativeSrc": "2337:26:8",
																"nodeType": "YulFunctionCall",
																"src": "2337:26:8"
															},
															"nativeSrc": "2334:81:8",
															"nodeType": "YulIf",
															"src": "2334:81:8"
														},
														{
															"body": {
																"nativeSrc": "2467:42:8",
																"nodeType": "YulBlock",
																"src": "2467:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2481:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "2481:16:8"
																			},
																			"nativeSrc": "2481:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2481:18:8"
																		},
																		"nativeSrc": "2481:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2481:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2431:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2431:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2454:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2454:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2462:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2462:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2451:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2451:2:8"
																		},
																		"nativeSrc": "2451:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2451:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2428:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2428:2:8"
																},
																"nativeSrc": "2428:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2428:38:8"
															},
															"nativeSrc": "2425:84:8",
															"nodeType": "YulIf",
															"src": "2425:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2195:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2230:4:8",
														"nodeType": "YulTypedName",
														"src": "2230:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2239:6:8",
														"nodeType": "YulTypedName",
														"src": "2239:6:8",
														"type": ""
													}
												],
												"src": "2195:320:8"
											},
											{
												"body": {
													"nativeSrc": "2575:87:8",
													"nodeType": "YulBlock",
													"src": "2575:87:8",
													"statements": [
														{
															"nativeSrc": "2585:11:8",
															"nodeType": "YulAssignment",
															"src": "2585:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "2593:3:8",
																"nodeType": "YulIdentifier",
																"src": "2593:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2585:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2585:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2613:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2613:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2616:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2616:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2606:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:8"
																},
																"nativeSrc": "2606:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2606:14:8"
															},
															"nativeSrc": "2606:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "2606:14:8"
														},
														{
															"nativeSrc": "2629:26:8",
															"nodeType": "YulAssignment",
															"src": "2629:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2647:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2647:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2650:4:8",
																		"nodeType": "YulLiteral",
																		"src": "2650:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2637:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2637:9:8"
																},
																"nativeSrc": "2637:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2637:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2629:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2629:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2521:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2562:3:8",
														"nodeType": "YulTypedName",
														"src": "2562:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2570:4:8",
														"nodeType": "YulTypedName",
														"src": "2570:4:8",
														"type": ""
													}
												],
												"src": "2521:141:8"
											},
											{
												"body": {
													"nativeSrc": "2712:49:8",
													"nodeType": "YulBlock",
													"src": "2712:49:8",
													"statements": [
														{
															"nativeSrc": "2722:33:8",
															"nodeType": "YulAssignment",
															"src": "2722:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2740:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2740:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2747:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2747:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2736:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2736:3:8"
																		},
																		"nativeSrc": "2736:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2736:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2752:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2752:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2732:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2732:3:8"
																},
																"nativeSrc": "2732:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2732:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2722:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2722:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2668:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2695:5:8",
														"nodeType": "YulTypedName",
														"src": "2695:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2705:6:8",
														"nodeType": "YulTypedName",
														"src": "2705:6:8",
														"type": ""
													}
												],
												"src": "2668:93:8"
											},
											{
												"body": {
													"nativeSrc": "2820:54:8",
													"nodeType": "YulBlock",
													"src": "2820:54:8",
													"statements": [
														{
															"nativeSrc": "2830:37:8",
															"nodeType": "YulAssignment",
															"src": "2830:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2855:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2855:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2861:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2861:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2851:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2851:3:8"
																},
																"nativeSrc": "2851:16:8",
																"nodeType": "YulFunctionCall",
																"src": "2851:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2830:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "2830:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2767:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2795:4:8",
														"nodeType": "YulTypedName",
														"src": "2795:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2801:5:8",
														"nodeType": "YulTypedName",
														"src": "2801:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2811:8:8",
														"nodeType": "YulTypedName",
														"src": "2811:8:8",
														"type": ""
													}
												],
												"src": "2767:107:8"
											},
											{
												"body": {
													"nativeSrc": "2956:317:8",
													"nodeType": "YulBlock",
													"src": "2956:317:8",
													"statements": [
														{
															"nativeSrc": "2966:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2966:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2987:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "2987:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2999:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2999:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2983:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2983:3:8"
																},
																"nativeSrc": "2983:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2983:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2970:9:8",
																	"nodeType": "YulTypedName",
																	"src": "2970:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3010:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3010:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3041:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3041:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3052:66:8",
																		"nodeType": "YulLiteral",
																		"src": "3052:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3022:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3022:18:8"
																},
																"nativeSrc": "3022:97:8",
																"nodeType": "YulFunctionCall",
																"src": "3022:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3014:4:8",
																	"nodeType": "YulTypedName",
																	"src": "3014:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3128:51:8",
															"nodeType": "YulAssignment",
															"src": "3128:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3159:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3170:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3170:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3140:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3140:18:8"
																},
																"nativeSrc": "3140:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3140:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3128:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "3128:8:8"
																}
															]
														},
														{
															"nativeSrc": "3188:30:8",
															"nodeType": "YulAssignment",
															"src": "3188:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3201:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3201:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3212:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3212:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3208:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3208:3:8"
																		},
																		"nativeSrc": "3208:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3208:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3197:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3197:3:8"
																},
																"nativeSrc": "3197:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3197:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3188:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3188:5:8"
																}
															]
														},
														{
															"nativeSrc": "3227:40:8",
															"nodeType": "YulAssignment",
															"src": "3227:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3240:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3240:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3251:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "3251:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3261:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3261:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3247:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3247:3:8"
																		},
																		"nativeSrc": "3247:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3247:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3237:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3237:2:8"
																},
																"nativeSrc": "3237:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3237:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3227:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3227:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2880:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2917:5:8",
														"nodeType": "YulTypedName",
														"src": "2917:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2924:10:8",
														"nodeType": "YulTypedName",
														"src": "2924:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2936:8:8",
														"nodeType": "YulTypedName",
														"src": "2936:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2949:6:8",
														"nodeType": "YulTypedName",
														"src": "2949:6:8",
														"type": ""
													}
												],
												"src": "2880:393:8"
											},
											{
												"body": {
													"nativeSrc": "3311:28:8",
													"nodeType": "YulBlock",
													"src": "3311:28:8",
													"statements": [
														{
															"nativeSrc": "3321:12:8",
															"nodeType": "YulAssignment",
															"src": "3321:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3328:5:8",
																"nodeType": "YulIdentifier",
																"src": "3328:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3321:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3321:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3279:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3297:5:8",
														"nodeType": "YulTypedName",
														"src": "3297:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3307:3:8",
														"nodeType": "YulTypedName",
														"src": "3307:3:8",
														"type": ""
													}
												],
												"src": "3279:60:8"
											},
											{
												"body": {
													"nativeSrc": "3405:82:8",
													"nodeType": "YulBlock",
													"src": "3405:82:8",
													"statements": [
														{
															"nativeSrc": "3415:66:8",
															"nodeType": "YulAssignment",
															"src": "3415:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3473:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3473:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3455:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "3455:17:8"
																				},
																				"nativeSrc": "3455:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3455:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3446:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "3446:8:8"
																		},
																		"nativeSrc": "3446:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3446:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3428:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3428:17:8"
																},
																"nativeSrc": "3428:53:8",
																"nodeType": "YulFunctionCall",
																"src": "3428:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3415:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "3415:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3345:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3385:5:8",
														"nodeType": "YulTypedName",
														"src": "3385:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3395:9:8",
														"nodeType": "YulTypedName",
														"src": "3395:9:8",
														"type": ""
													}
												],
												"src": "3345:142:8"
											},
											{
												"body": {
													"nativeSrc": "3540:28:8",
													"nodeType": "YulBlock",
													"src": "3540:28:8",
													"statements": [
														{
															"nativeSrc": "3550:12:8",
															"nodeType": "YulAssignment",
															"src": "3550:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "3557:5:8",
																"nodeType": "YulIdentifier",
																"src": "3557:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3550:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3550:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3493:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3526:5:8",
														"nodeType": "YulTypedName",
														"src": "3526:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3536:3:8",
														"nodeType": "YulTypedName",
														"src": "3536:3:8",
														"type": ""
													}
												],
												"src": "3493:75:8"
											},
											{
												"body": {
													"nativeSrc": "3650:193:8",
													"nodeType": "YulBlock",
													"src": "3650:193:8",
													"statements": [
														{
															"nativeSrc": "3660:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3660:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3715:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3715:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3684:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "3684:30:8"
																},
																"nativeSrc": "3684:39:8",
																"nodeType": "YulFunctionCall",
																"src": "3684:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3664:16:8",
																	"nodeType": "YulTypedName",
																	"src": "3664:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3739:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "3739:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3779:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "3779:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3773:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "3773:5:8"
																				},
																				"nativeSrc": "3773:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3773:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3786:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3786:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3818:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "3818:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3794:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "3794:23:8"
																				},
																				"nativeSrc": "3794:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3794:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3745:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "3745:27:8"
																		},
																		"nativeSrc": "3745:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3745:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3732:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3732:6:8"
																},
																"nativeSrc": "3732:105:8",
																"nodeType": "YulFunctionCall",
																"src": "3732:105:8"
															},
															"nativeSrc": "3732:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "3732:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3574:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3627:4:8",
														"nodeType": "YulTypedName",
														"src": "3627:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3633:6:8",
														"nodeType": "YulTypedName",
														"src": "3633:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3641:7:8",
														"nodeType": "YulTypedName",
														"src": "3641:7:8",
														"type": ""
													}
												],
												"src": "3574:269:8"
											},
											{
												"body": {
													"nativeSrc": "3898:24:8",
													"nodeType": "YulBlock",
													"src": "3898:24:8",
													"statements": [
														{
															"nativeSrc": "3908:8:8",
															"nodeType": "YulAssignment",
															"src": "3908:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3915:1:8",
																"nodeType": "YulLiteral",
																"src": "3915:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3908:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3908:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3849:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3894:3:8",
														"nodeType": "YulTypedName",
														"src": "3894:3:8",
														"type": ""
													}
												],
												"src": "3849:73:8"
											},
											{
												"body": {
													"nativeSrc": "3981:136:8",
													"nodeType": "YulBlock",
													"src": "3981:136:8",
													"statements": [
														{
															"nativeSrc": "3991:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3991:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4005:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "4005:30:8"
																},
																"nativeSrc": "4005:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4005:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3995:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3995:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4090:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4090:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4096:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4096:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4104:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4104:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4046:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "4046:43:8"
																},
																"nativeSrc": "4046:65:8",
																"nodeType": "YulFunctionCall",
																"src": "4046:65:8"
															},
															"nativeSrc": "4046:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "4046:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3928:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3967:4:8",
														"nodeType": "YulTypedName",
														"src": "3967:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3973:6:8",
														"nodeType": "YulTypedName",
														"src": "3973:6:8",
														"type": ""
													}
												],
												"src": "3928:189:8"
											},
											{
												"body": {
													"nativeSrc": "4173:136:8",
													"nodeType": "YulBlock",
													"src": "4173:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4240:63:8",
																"nodeType": "YulBlock",
																"src": "4240:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4284:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4284:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4291:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4291:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4254:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "4254:29:8"
																			},
																			"nativeSrc": "4254:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4254:39:8"
																		},
																		"nativeSrc": "4254:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4254:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4193:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4193:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4200:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4200:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4190:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4190:2:8"
																},
																"nativeSrc": "4190:14:8",
																"nodeType": "YulFunctionCall",
																"src": "4190:14:8"
															},
															"nativeSrc": "4183:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4205:26:8",
																"nodeType": "YulBlock",
																"src": "4205:26:8",
																"statements": [
																	{
																		"nativeSrc": "4207:22:8",
																		"nodeType": "YulAssignment",
																		"src": "4207:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4220:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4220:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4227:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4227:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4216:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4216:3:8"
																			},
																			"nativeSrc": "4216:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4216:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4207:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4207:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4187:2:8",
																"nodeType": "YulBlock",
																"src": "4187:2:8",
																"statements": []
															},
															"src": "4183:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4123:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4161:5:8",
														"nodeType": "YulTypedName",
														"src": "4161:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4168:3:8",
														"nodeType": "YulTypedName",
														"src": "4168:3:8",
														"type": ""
													}
												],
												"src": "4123:186:8"
											},
											{
												"body": {
													"nativeSrc": "4394:464:8",
													"nodeType": "YulBlock",
													"src": "4394:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4420:431:8",
																"nodeType": "YulBlock",
																"src": "4420:431:8",
																"statements": [
																	{
																		"nativeSrc": "4434:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4434:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4482:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "4482:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4450:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "4450:31:8"
																			},
																			"nativeSrc": "4450:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4450:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4438:8:8",
																				"nodeType": "YulTypedName",
																				"src": "4438:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4501:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4501:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4524:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "4524:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4552:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "4552:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4534:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "4534:17:8"
																					},
																					"nativeSrc": "4534:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4534:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4520:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4520:3:8"
																			},
																			"nativeSrc": "4520:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4520:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4505:11:8",
																				"nodeType": "YulTypedName",
																				"src": "4505:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4721:27:8",
																			"nodeType": "YulBlock",
																			"src": "4721:27:8",
																			"statements": [
																				{
																					"nativeSrc": "4723:23:8",
																					"nodeType": "YulAssignment",
																					"src": "4723:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4738:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4738:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4723:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "4723:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4705:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "4705:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4717:2:8",
																					"nodeType": "YulLiteral",
																					"src": "4717:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4702:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "4702:2:8"
																			},
																			"nativeSrc": "4702:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4702:18:8"
																		},
																		"nativeSrc": "4699:49:8",
																		"nodeType": "YulIf",
																		"src": "4699:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4790:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "4790:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4807:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4807:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4835:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "4835:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4817:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "4817:17:8"
																							},
																							"nativeSrc": "4817:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "4817:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4803:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4803:3:8"
																					},
																					"nativeSrc": "4803:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4803:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4761:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "4761:28:8"
																			},
																			"nativeSrc": "4761:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4761:80:8"
																		},
																		"nativeSrc": "4761:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4761:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4411:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4411:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4416:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4416:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4408:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4408:2:8"
																},
																"nativeSrc": "4408:11:8",
																"nodeType": "YulFunctionCall",
																"src": "4408:11:8"
															},
															"nativeSrc": "4405:446:8",
															"nodeType": "YulIf",
															"src": "4405:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4315:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4370:5:8",
														"nodeType": "YulTypedName",
														"src": "4370:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4377:3:8",
														"nodeType": "YulTypedName",
														"src": "4377:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4382:10:8",
														"nodeType": "YulTypedName",
														"src": "4382:10:8",
														"type": ""
													}
												],
												"src": "4315:543:8"
											},
											{
												"body": {
													"nativeSrc": "4927:54:8",
													"nodeType": "YulBlock",
													"src": "4927:54:8",
													"statements": [
														{
															"nativeSrc": "4937:37:8",
															"nodeType": "YulAssignment",
															"src": "4937:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4962:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4962:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4968:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4968:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4958:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4958:3:8"
																},
																"nativeSrc": "4958:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4958:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4937:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "4937:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4864:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4902:4:8",
														"nodeType": "YulTypedName",
														"src": "4902:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4908:5:8",
														"nodeType": "YulTypedName",
														"src": "4908:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4918:8:8",
														"nodeType": "YulTypedName",
														"src": "4918:8:8",
														"type": ""
													}
												],
												"src": "4864:117:8"
											},
											{
												"body": {
													"nativeSrc": "5038:118:8",
													"nodeType": "YulBlock",
													"src": "5038:118:8",
													"statements": [
														{
															"nativeSrc": "5048:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5048:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5097:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5097:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5100:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5100:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5093:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5093:3:8"
																				},
																				"nativeSrc": "5093:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5093:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5112:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5112:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5108:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5108:3:8"
																				},
																				"nativeSrc": "5108:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5108:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5064:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "5064:28:8"
																		},
																		"nativeSrc": "5064:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5064:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5060:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5060:3:8"
																},
																"nativeSrc": "5060:56:8",
																"nodeType": "YulFunctionCall",
																"src": "5060:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5052:4:8",
																	"nodeType": "YulTypedName",
																	"src": "5052:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5125:25:8",
															"nodeType": "YulAssignment",
															"src": "5125:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5139:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5139:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5145:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5145:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5135:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5135:3:8"
																},
																"nativeSrc": "5135:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5135:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5125:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5125:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4987:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5015:4:8",
														"nodeType": "YulTypedName",
														"src": "5015:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5021:5:8",
														"nodeType": "YulTypedName",
														"src": "5021:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5031:6:8",
														"nodeType": "YulTypedName",
														"src": "5031:6:8",
														"type": ""
													}
												],
												"src": "4987:169:8"
											},
											{
												"body": {
													"nativeSrc": "5242:214:8",
													"nodeType": "YulBlock",
													"src": "5242:214:8",
													"statements": [
														{
															"nativeSrc": "5375:37:8",
															"nodeType": "YulAssignment",
															"src": "5375:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5402:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5402:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5408:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5408:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5383:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5383:18:8"
																},
																"nativeSrc": "5383:29:8",
																"nodeType": "YulFunctionCall",
																"src": "5383:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5375:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5375:4:8"
																}
															]
														},
														{
															"nativeSrc": "5421:29:8",
															"nodeType": "YulAssignment",
															"src": "5421:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5432:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5432:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5442:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5442:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5445:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5445:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5438:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5438:3:8"
																		},
																		"nativeSrc": "5438:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5438:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5429:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5429:2:8"
																},
																"nativeSrc": "5429:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5429:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5421:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5421:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5161:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5223:4:8",
														"nodeType": "YulTypedName",
														"src": "5223:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5229:3:8",
														"nodeType": "YulTypedName",
														"src": "5229:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5237:4:8",
														"nodeType": "YulTypedName",
														"src": "5237:4:8",
														"type": ""
													}
												],
												"src": "5161:295:8"
											},
											{
												"body": {
													"nativeSrc": "5553:1303:8",
													"nodeType": "YulBlock",
													"src": "5553:1303:8",
													"statements": [
														{
															"nativeSrc": "5564:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5564:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5611:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5611:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5578:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "5578:32:8"
																},
																"nativeSrc": "5578:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5578:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5568:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5568:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5700:22:8",
																"nodeType": "YulBlock",
																"src": "5700:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5702:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5702:16:8"
																			},
																			"nativeSrc": "5702:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5702:18:8"
																		},
																		"nativeSrc": "5702:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5702:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5672:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5672:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5680:18:8",
																		"nodeType": "YulLiteral",
																		"src": "5680:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5669:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5669:2:8"
																},
																"nativeSrc": "5669:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5669:30:8"
															},
															"nativeSrc": "5666:56:8",
															"nodeType": "YulIf",
															"src": "5666:56:8"
														},
														{
															"nativeSrc": "5732:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5732:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5778:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5778:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5772:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "5772:5:8"
																		},
																		"nativeSrc": "5772:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5772:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5746:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "5746:25:8"
																},
																"nativeSrc": "5746:38:8",
																"nodeType": "YulFunctionCall",
																"src": "5746:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5736:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5736:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5877:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5877:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5883:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5883:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5891:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5891:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5831:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "5831:45:8"
																},
																"nativeSrc": "5831:67:8",
																"nodeType": "YulFunctionCall",
																"src": "5831:67:8"
															},
															"nativeSrc": "5831:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "5831:67:8"
														},
														{
															"nativeSrc": "5908:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5908:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5925:1:8",
																"nodeType": "YulLiteral",
																"src": "5925:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5912:9:8",
																	"nodeType": "YulTypedName",
																	"src": "5912:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5936:17:8",
															"nodeType": "YulAssignment",
															"src": "5936:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5949:4:8",
																"nodeType": "YulLiteral",
																"src": "5949:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5936:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "5936:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6000:611:8",
																		"nodeType": "YulBlock",
																		"src": "6000:611:8",
																		"statements": [
																			{
																				"nativeSrc": "6014:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6014:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6033:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6033:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6045:4:8",
																									"nodeType": "YulLiteral",
																									"src": "6045:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6041:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6041:3:8"
																							},
																							"nativeSrc": "6041:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6041:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6029:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6029:3:8"
																					},
																					"nativeSrc": "6029:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6029:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6018:7:8",
																						"nodeType": "YulTypedName",
																						"src": "6018:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6065:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6065:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6111:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6111:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6079:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "6079:31:8"
																					},
																					"nativeSrc": "6079:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6079:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6069:6:8",
																						"nodeType": "YulTypedName",
																						"src": "6069:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6129:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6129:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6138:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6138:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6133:1:8",
																						"nodeType": "YulTypedName",
																						"src": "6133:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6197:163:8",
																					"nodeType": "YulBlock",
																					"src": "6197:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6222:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6222:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6240:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "6240:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6245:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "6245:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6236:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6236:3:8"
																												},
																												"nativeSrc": "6236:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6236:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6230:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "6230:5:8"
																										},
																										"nativeSrc": "6230:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6230:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6215:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6215:6:8"
																								},
																								"nativeSrc": "6215:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6215:42:8"
																							},
																							"nativeSrc": "6215:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6215:42:8"
																						},
																						{
																							"nativeSrc": "6274:24:8",
																							"nodeType": "YulAssignment",
																							"src": "6274:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6288:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6288:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6296:1:8",
																										"nodeType": "YulLiteral",
																										"src": "6296:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6284:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6284:3:8"
																								},
																								"nativeSrc": "6284:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6284:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6274:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6274:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6315:31:8",
																							"nodeType": "YulAssignment",
																							"src": "6315:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6332:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "6332:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6343:2:8",
																										"nodeType": "YulLiteral",
																										"src": "6343:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6328:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6328:3:8"
																								},
																								"nativeSrc": "6328:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6328:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6315:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "6315:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6163:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "6163:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6166:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6166:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6160:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6160:2:8"
																					},
																					"nativeSrc": "6160:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6160:14:8"
																				},
																				"nativeSrc": "6152:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6175:21:8",
																					"nodeType": "YulBlock",
																					"src": "6175:21:8",
																					"statements": [
																						{
																							"nativeSrc": "6177:17:8",
																							"nodeType": "YulAssignment",
																							"src": "6177:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6186:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "6186:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6189:4:8",
																										"nodeType": "YulLiteral",
																										"src": "6189:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6182:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "6182:3:8"
																								},
																								"nativeSrc": "6182:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6182:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6177:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "6177:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6156:3:8",
																					"nodeType": "YulBlock",
																					"src": "6156:3:8",
																					"statements": []
																				},
																				"src": "6152:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "6396:156:8",
																					"nodeType": "YulBlock",
																					"src": "6396:156:8",
																					"statements": [
																						{
																							"nativeSrc": "6414:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6414:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6441:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6441:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6446:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6446:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6437:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6437:3:8"
																										},
																										"nativeSrc": "6437:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6437:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6431:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6431:5:8"
																								},
																								"nativeSrc": "6431:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6431:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6418:9:8",
																									"nodeType": "YulTypedName",
																									"src": "6418:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6481:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "6481:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6508:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6508:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6523:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "6523:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6531:4:8",
																														"nodeType": "YulLiteral",
																														"src": "6531:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6519:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "6519:3:8"
																												},
																												"nativeSrc": "6519:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "6519:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6489:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "6489:18:8"
																										},
																										"nativeSrc": "6489:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6489:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6474:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6474:6:8"
																								},
																								"nativeSrc": "6474:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6474:64:8"
																							},
																							"nativeSrc": "6474:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "6474:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6379:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "6379:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6388:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "6388:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6376:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "6376:2:8"
																					},
																					"nativeSrc": "6376:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6376:19:8"
																				},
																				"nativeSrc": "6373:179:8",
																				"nodeType": "YulIf",
																				"src": "6373:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6572:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6572:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6586:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "6586:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6594:1:8",
																											"nodeType": "YulLiteral",
																											"src": "6594:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6582:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "6582:3:8"
																									},
																									"nativeSrc": "6582:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "6582:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6598:1:8",
																									"nodeType": "YulLiteral",
																									"src": "6598:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6578:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "6578:3:8"
																							},
																							"nativeSrc": "6578:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6578:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6565:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6565:6:8"
																					},
																					"nativeSrc": "6565:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6565:36:8"
																				},
																				"nativeSrc": "6565:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6565:36:8"
																			}
																		]
																	},
																	"nativeSrc": "5993:618:8",
																	"nodeType": "YulCase",
																	"src": "5993:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5998:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5998:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6628:222:8",
																		"nodeType": "YulBlock",
																		"src": "6628:222:8",
																		"statements": [
																			{
																				"nativeSrc": "6642:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6642:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6655:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6655:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6646:5:8",
																						"nodeType": "YulTypedName",
																						"src": "6646:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6679:67:8",
																					"nodeType": "YulBlock",
																					"src": "6679:67:8",
																					"statements": [
																						{
																							"nativeSrc": "6697:35:8",
																							"nodeType": "YulAssignment",
																							"src": "6697:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6716:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "6716:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6721:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "6721:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6712:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "6712:3:8"
																										},
																										"nativeSrc": "6712:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "6712:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6706:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6706:5:8"
																								},
																								"nativeSrc": "6706:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "6706:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6697:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6697:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6672:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6672:6:8"
																				},
																				"nativeSrc": "6669:77:8",
																				"nodeType": "YulIf",
																				"src": "6669:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6766:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "6766:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6825:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "6825:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6832:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "6832:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6772:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "6772:52:8"
																							},
																							"nativeSrc": "6772:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "6772:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6759:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6759:6:8"
																					},
																					"nativeSrc": "6759:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6759:81:8"
																				},
																				"nativeSrc": "6759:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "6759:81:8"
																			}
																		]
																	},
																	"nativeSrc": "6620:230:8",
																	"nodeType": "YulCase",
																	"src": "6620:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5973:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5973:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5981:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5981:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5970:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5970:2:8"
																},
																"nativeSrc": "5970:14:8",
																"nodeType": "YulFunctionCall",
																"src": "5970:14:8"
															},
															"nativeSrc": "5963:887:8",
															"nodeType": "YulSwitch",
															"src": "5963:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5461:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5542:4:8",
														"nodeType": "YulTypedName",
														"src": "5542:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5548:3:8",
														"nodeType": "YulTypedName",
														"src": "5548:3:8",
														"type": ""
													}
												],
												"src": "5461:1395:8"
											},
											{
												"body": {
													"nativeSrc": "6927:53:8",
													"nodeType": "YulBlock",
													"src": "6927:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6944:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6944:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6967:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6967:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6949:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "6949:17:8"
																		},
																		"nativeSrc": "6949:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6949:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6937:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6937:6:8"
																},
																"nativeSrc": "6937:37:8",
																"nodeType": "YulFunctionCall",
																"src": "6937:37:8"
															},
															"nativeSrc": "6937:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "6937:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6862:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6915:5:8",
														"nodeType": "YulTypedName",
														"src": "6915:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6922:3:8",
														"nodeType": "YulTypedName",
														"src": "6922:3:8",
														"type": ""
													}
												],
												"src": "6862:118:8"
											},
											{
												"body": {
													"nativeSrc": "7084:124:8",
													"nodeType": "YulBlock",
													"src": "7084:124:8",
													"statements": [
														{
															"nativeSrc": "7094:26:8",
															"nodeType": "YulAssignment",
															"src": "7094:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7106:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7106:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7117:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7117:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7102:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7102:3:8"
																},
																"nativeSrc": "7102:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7102:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7094:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7094:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7174:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7174:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7187:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7187:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7198:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7198:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7183:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7183:3:8"
																		},
																		"nativeSrc": "7183:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7183:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7130:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7130:43:8"
																},
																"nativeSrc": "7130:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7130:71:8"
															},
															"nativeSrc": "7130:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7130:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6986:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7056:9:8",
														"nodeType": "YulTypedName",
														"src": "7056:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7068:6:8",
														"nodeType": "YulTypedName",
														"src": "7068:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7079:4:8",
														"nodeType": "YulTypedName",
														"src": "7079:4:8",
														"type": ""
													}
												],
												"src": "6986:222:8"
											},
											{
												"body": {
													"nativeSrc": "7242:152:8",
													"nodeType": "YulBlock",
													"src": "7242:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7259:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7259:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7262:77:8",
																		"nodeType": "YulLiteral",
																		"src": "7262:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7252:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7252:6:8"
																},
																"nativeSrc": "7252:88:8",
																"nodeType": "YulFunctionCall",
																"src": "7252:88:8"
															},
															"nativeSrc": "7252:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "7252:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7356:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7356:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7359:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7359:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7349:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7349:6:8"
																},
																"nativeSrc": "7349:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7349:15:8"
															},
															"nativeSrc": "7349:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7349:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7380:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7380:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7383:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7383:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7373:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7373:6:8"
																},
																"nativeSrc": "7373:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7373:15:8"
															},
															"nativeSrc": "7373:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7373:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7214:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7214:180:8"
											},
											{
												"body": {
													"nativeSrc": "7444:147:8",
													"nodeType": "YulBlock",
													"src": "7444:147:8",
													"statements": [
														{
															"nativeSrc": "7454:25:8",
															"nodeType": "YulAssignment",
															"src": "7454:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7477:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7477:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7459:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7459:17:8"
																},
																"nativeSrc": "7459:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7459:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7454:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7454:1:8"
																}
															]
														},
														{
															"nativeSrc": "7488:25:8",
															"nodeType": "YulAssignment",
															"src": "7488:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7511:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7511:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7493:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "7493:17:8"
																},
																"nativeSrc": "7493:20:8",
																"nodeType": "YulFunctionCall",
																"src": "7493:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7488:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "7488:1:8"
																}
															]
														},
														{
															"nativeSrc": "7522:16:8",
															"nodeType": "YulAssignment",
															"src": "7522:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7533:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7533:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7536:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7536:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7529:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7529:3:8"
																},
																"nativeSrc": "7529:9:8",
																"nodeType": "YulFunctionCall",
																"src": "7529:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7522:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7522:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7562:22:8",
																"nodeType": "YulBlock",
																"src": "7562:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7564:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "7564:16:8"
																			},
																			"nativeSrc": "7564:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7564:18:8"
																		},
																		"nativeSrc": "7564:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7564:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7554:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "7554:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7557:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7557:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7551:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "7551:2:8"
																},
																"nativeSrc": "7551:10:8",
																"nodeType": "YulFunctionCall",
																"src": "7551:10:8"
															},
															"nativeSrc": "7548:36:8",
															"nodeType": "YulIf",
															"src": "7548:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7400:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7431:1:8",
														"nodeType": "YulTypedName",
														"src": "7431:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7434:1:8",
														"nodeType": "YulTypedName",
														"src": "7434:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7440:3:8",
														"nodeType": "YulTypedName",
														"src": "7440:3:8",
														"type": ""
													}
												],
												"src": "7400:191:8"
											},
											{
												"body": {
													"nativeSrc": "7662:53:8",
													"nodeType": "YulBlock",
													"src": "7662:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7679:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7679:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7702:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "7702:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7684:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "7684:17:8"
																		},
																		"nativeSrc": "7684:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7684:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7672:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7672:6:8"
																},
																"nativeSrc": "7672:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7672:37:8"
															},
															"nativeSrc": "7672:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "7672:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7597:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7650:5:8",
														"nodeType": "YulTypedName",
														"src": "7650:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7657:3:8",
														"nodeType": "YulTypedName",
														"src": "7657:3:8",
														"type": ""
													}
												],
												"src": "7597:118:8"
											},
											{
												"body": {
													"nativeSrc": "7875:288:8",
													"nodeType": "YulBlock",
													"src": "7875:288:8",
													"statements": [
														{
															"nativeSrc": "7885:26:8",
															"nodeType": "YulAssignment",
															"src": "7885:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7897:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7897:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7908:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7908:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7893:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7893:3:8"
																},
																"nativeSrc": "7893:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7893:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7885:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7885:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7965:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7965:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7978:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7978:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7989:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7989:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7974:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7974:3:8"
																		},
																		"nativeSrc": "7974:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7974:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7921:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7921:43:8"
																},
																"nativeSrc": "7921:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7921:71:8"
															},
															"nativeSrc": "7921:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7921:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8046:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8046:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8059:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8059:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8070:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8070:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8055:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8055:3:8"
																		},
																		"nativeSrc": "8055:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8055:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8002:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8002:43:8"
																},
																"nativeSrc": "8002:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8002:72:8"
															},
															"nativeSrc": "8002:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8002:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8128:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8128:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8141:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8141:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8152:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8152:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8137:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8137:3:8"
																		},
																		"nativeSrc": "8137:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8137:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8084:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8084:43:8"
																},
																"nativeSrc": "8084:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8084:72:8"
															},
															"nativeSrc": "8084:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8084:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7721:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7831:9:8",
														"nodeType": "YulTypedName",
														"src": "7831:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7843:6:8",
														"nodeType": "YulTypedName",
														"src": "7843:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7851:6:8",
														"nodeType": "YulTypedName",
														"src": "7851:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7859:6:8",
														"nodeType": "YulTypedName",
														"src": "7859:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7870:4:8",
														"nodeType": "YulTypedName",
														"src": "7870:4:8",
														"type": ""
													}
												],
												"src": "7721:442:8"
											},
											{
												"body": {
													"nativeSrc": "8267:124:8",
													"nodeType": "YulBlock",
													"src": "8267:124:8",
													"statements": [
														{
															"nativeSrc": "8277:26:8",
															"nodeType": "YulAssignment",
															"src": "8277:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8289:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8289:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8300:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8300:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8285:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8285:3:8"
																},
																"nativeSrc": "8285:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8285:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8277:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8277:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8357:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8357:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8370:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8370:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8381:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8381:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8366:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8366:3:8"
																		},
																		"nativeSrc": "8366:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8366:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8313:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8313:43:8"
																},
																"nativeSrc": "8313:71:8",
																"nodeType": "YulFunctionCall",
																"src": "8313:71:8"
															},
															"nativeSrc": "8313:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "8313:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "8169:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8239:9:8",
														"nodeType": "YulTypedName",
														"src": "8239:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8251:6:8",
														"nodeType": "YulTypedName",
														"src": "8251:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8262:4:8",
														"nodeType": "YulTypedName",
														"src": "8262:4:8",
														"type": ""
													}
												],
												"src": "8169:222:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051611cd1380380611cd183398181016040528101906100319190610549565b816040518060400160405280600881526020017f52657075746966790000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f525054000000000000000000000000000000000000000000000000000000000081525081600390816100ad91906107b8565b5080600490816100bd91906107b8565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101279190610896565b60405180910390fd5b61013f8161015760201b60201c565b50610150828261021a60201b60201c565b505061096c565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361028a575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102819190610896565b60405180910390fd5b61029b5f838361029f60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102ef578060025f8282546102e391906108dc565b925050819055506103bd565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610378578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161036f9392919061091e565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610404578060025f828254039250508190555061044e565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104ab9190610953565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104e5826104bc565b9050919050565b6104f5816104db565b81146104ff575f80fd5b50565b5f81519050610510816104ec565b92915050565b5f819050919050565b61052881610516565b8114610532575f80fd5b50565b5f815190506105438161051f565b92915050565b5f806040838503121561055f5761055e6104b8565b5b5f61056c85828601610502565b925050602061057d85828601610535565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061060257607f821691505b602082108103610615576106146105be565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026106777fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261063c565b610681868361063c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6106bc6106b76106b284610516565b610699565b610516565b9050919050565b5f819050919050565b6106d5836106a2565b6106e96106e1826106c3565b848454610648565b825550505050565b5f90565b6106fd6106f1565b6107088184846106cc565b505050565b5b8181101561072b576107205f826106f5565b60018101905061070e565b5050565b601f821115610770576107418161061b565b61074a8461062d565b81016020851015610759578190505b61076d6107658561062d565b83018261070d565b50505b505050565b5f82821c905092915050565b5f6107905f1984600802610775565b1980831691505092915050565b5f6107a88383610781565b9150826002028217905092915050565b6107c182610587565b67ffffffffffffffff8111156107da576107d9610591565b5b6107e482546105eb565b6107ef82828561072f565b5f60209050601f831160018114610820575f841561080e578287015190505b610818858261079d565b86555061087f565b601f19841661082e8661061b565b5f5b8281101561085557848901518255600182019150602085019450602081019050610830565b86831015610872578489015161086e601f891682610781565b8355505b6001600288020188555050505b505050505050565b610890816104db565b82525050565b5f6020820190506108a95f830184610887565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6108e682610516565b91506108f183610516565b9250828201905080821115610909576109086108af565b5b92915050565b61091881610516565b82525050565b5f6060820190506109315f830186610887565b61093e602083018561090f565b61094b604083018461090f565b949350505050565b5f6020820190506109665f83018461090f565b92915050565b611358806109795f395ff3fe608060405234801561000f575f80fd5b50600436106100e8575f3560e01c806370a082311161008a57806395d89b411161006457806395d89b4114610236578063a9059cbb14610254578063dd62ed3e14610284578063f2fde38b146102b4576100e8565b806370a08231146101de578063715018a61461020e5780638da5cb5b14610218576100e8565b806323b872dd116100c657806323b872dd14610158578063313ce5671461018857806340c10f19146101a657806342966c68146101c2576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f80fd5b6100f46102d0565b6040516101019190610f3e565b60405180910390f35b610124600480360381019061011f9190610fef565b610360565b6040516101319190611047565b60405180910390f35b610142610382565b60405161014f919061106f565b60405180910390f35b610172600480360381019061016d9190611088565b61038b565b60405161017f9190611047565b60405180910390f35b6101906103b9565b60405161019d91906110f3565b60405180910390f35b6101c060048036038101906101bb9190610fef565b6103c1565b005b6101dc60048036038101906101d7919061110c565b610425565b005b6101f860048036038101906101f39190611137565b6104cb565b604051610205919061106f565b60405180910390f35b610216610510565b005b610220610523565b60405161022d9190611171565b60405180910390f35b61023e61054b565b60405161024b9190610f3e565b60405180910390f35b61026e60048036038101906102699190610fef565b6105db565b60405161027b9190611047565b60405180910390f35b61029e6004803603810190610299919061118a565b6105fd565b6040516102ab919061106f565b60405180910390f35b6102ce60048036038101906102c99190611137565b61067f565b005b6060600380546102df906111f5565b80601f016020809104026020016040519081016040528092919081815260200182805461030b906111f5565b80156103565780601f1061032d57610100808354040283529160200191610356565b820191905f5260205f20905b81548152906001019060200180831161033957829003601f168201915b5050505050905090565b5f8061036a610703565b905061037781858561070a565b600191505092915050565b5f600254905090565b5f80610395610703565b90506103a285828561071c565b6103ad8585856107ae565b60019150509392505050565b5f6012905090565b6103c961089e565b6103d38282610925565b8173ffffffffffffffffffffffffffffffffffffffff167f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe82604051610419919061106f565b60405180910390a25050565b8061042f336104cb565b1015610470576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104679061126f565b60405180910390fd5b61047a33826109a4565b3373ffffffffffffffffffffffffffffffffffffffff167f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7826040516104c0919061106f565b60405180910390a250565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61051861089e565b6105215f610a23565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461055a906111f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610586906111f5565b80156105d15780601f106105a8576101008083540402835291602001916105d1565b820191905f5260205f20905b8154815290600101906020018083116105b457829003601f168201915b5050505050905090565b5f806105e5610703565b90506105f28185856107ae565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61068761089e565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106f7575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106ee9190611171565b60405180910390fd5b61070081610a23565b50565b5f33905090565b6107178383836001610ae6565b505050565b5f61072784846105fd565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107a85781811015610799578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107909392919061128d565b60405180910390fd5b6107a784848484035f610ae6565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361081e575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108159190611171565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361088e575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108859190611171565b60405180910390fd5b610899838383610cb5565b505050565b6108a6610703565b73ffffffffffffffffffffffffffffffffffffffff166108c4610523565b73ffffffffffffffffffffffffffffffffffffffff1614610923576108e7610703565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161091a9190611171565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610995575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161098c9190611171565b60405180910390fd5b6109a05f8383610cb5565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a14575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a0b9190611171565b60405180910390fd5b610a1f825f83610cb5565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b56575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b4d9190611171565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bc6575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bbd9190611171565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610caf578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ca6919061106f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d05578060025f828254610cf991906112ef565b92505081905550610dd3565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610d8e578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610d859392919061128d565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e1a578060025f8282540392505081905550610e64565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ec1919061106f565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610f1082610ece565b610f1a8185610ed8565b9350610f2a818560208601610ee8565b610f3381610ef6565b840191505092915050565b5f6020820190508181035f830152610f568184610f06565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f8b82610f62565b9050919050565b610f9b81610f81565b8114610fa5575f80fd5b50565b5f81359050610fb681610f92565b92915050565b5f819050919050565b610fce81610fbc565b8114610fd8575f80fd5b50565b5f81359050610fe981610fc5565b92915050565b5f806040838503121561100557611004610f5e565b5b5f61101285828601610fa8565b925050602061102385828601610fdb565b9150509250929050565b5f8115159050919050565b6110418161102d565b82525050565b5f60208201905061105a5f830184611038565b92915050565b61106981610fbc565b82525050565b5f6020820190506110825f830184611060565b92915050565b5f805f6060848603121561109f5761109e610f5e565b5b5f6110ac86828701610fa8565b93505060206110bd86828701610fa8565b92505060406110ce86828701610fdb565b9150509250925092565b5f60ff82169050919050565b6110ed816110d8565b82525050565b5f6020820190506111065f8301846110e4565b92915050565b5f6020828403121561112157611120610f5e565b5b5f61112e84828501610fdb565b91505092915050565b5f6020828403121561114c5761114b610f5e565b5b5f61115984828501610fa8565b91505092915050565b61116b81610f81565b82525050565b5f6020820190506111845f830184611162565b92915050565b5f80604083850312156111a05761119f610f5e565b5b5f6111ad85828601610fa8565b92505060206111be85828601610fa8565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061120c57607f821691505b60208210810361121f5761121e6111c8565b5b50919050565b7f496e73756666696369656e742062616c616e636520746f206275726e000000005f82015250565b5f611259601c83610ed8565b915061126482611225565b602082019050919050565b5f6020820190508181035f8301526112868161124d565b9050919050565b5f6060820190506112a05f830186611162565b6112ad6020830185611060565b6112ba6040830184611060565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6112f982610fbc565b915061130483610fbc565b925082820190508082111561131c5761131b6112c2565b5b9291505056fea264697066735822122072812d813afda4ad2c3f8a8fc7898fab9d89aba12703abec276db8dac9c9b45664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1CD1 CODESIZE SUB DUP1 PUSH2 0x1CD1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x549 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5265707574696679000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5250540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x7B8 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x7B8 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x157 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x150 DUP3 DUP3 PUSH2 0x21A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x96C JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x28A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29B PUSH0 DUP4 DUP4 PUSH2 0x29F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2EF JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2E3 SWAP2 SWAP1 PUSH2 0x8DC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3BD JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x378 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x404 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x44E JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4E5 DUP3 PUSH2 0x4BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F5 DUP2 PUSH2 0x4DB JUMP JUMPDEST DUP2 EQ PUSH2 0x4FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x510 DUP2 PUSH2 0x4EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x528 DUP2 PUSH2 0x516 JUMP JUMPDEST DUP2 EQ PUSH2 0x532 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x543 DUP2 PUSH2 0x51F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x55F JUMPI PUSH2 0x55E PUSH2 0x4B8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x56C DUP6 DUP3 DUP7 ADD PUSH2 0x502 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x57D DUP6 DUP3 DUP7 ADD PUSH2 0x535 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x602 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x615 JUMPI PUSH2 0x614 PUSH2 0x5BE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x677 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x63C JUMP JUMPDEST PUSH2 0x681 DUP7 DUP4 PUSH2 0x63C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6BC PUSH2 0x6B7 PUSH2 0x6B2 DUP5 PUSH2 0x516 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH2 0x516 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D5 DUP4 PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x6E9 PUSH2 0x6E1 DUP3 PUSH2 0x6C3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x648 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x6FD PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x708 DUP2 DUP5 DUP5 PUSH2 0x6CC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72B JUMPI PUSH2 0x720 PUSH0 DUP3 PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x70E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x770 JUMPI PUSH2 0x741 DUP2 PUSH2 0x61B JUMP JUMPDEST PUSH2 0x74A DUP5 PUSH2 0x62D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x759 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x76D PUSH2 0x765 DUP6 PUSH2 0x62D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x70D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x790 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x775 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7A8 DUP4 DUP4 PUSH2 0x781 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7C1 DUP3 PUSH2 0x587 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7DA JUMPI PUSH2 0x7D9 PUSH2 0x591 JUMP JUMPDEST JUMPDEST PUSH2 0x7E4 DUP3 SLOAD PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x7EF DUP3 DUP3 DUP6 PUSH2 0x72F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x820 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x80E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x818 DUP6 DUP3 PUSH2 0x79D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x87F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x82E DUP7 PUSH2 0x61B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x855 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x830 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x872 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x86E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x781 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x890 DUP2 PUSH2 0x4DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x887 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x8E6 DUP3 PUSH2 0x516 JUMP JUMPDEST SWAP2 POP PUSH2 0x8F1 DUP4 PUSH2 0x516 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x909 JUMPI PUSH2 0x908 PUSH2 0x8AF JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x918 DUP2 PUSH2 0x516 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x931 PUSH0 DUP4 ADD DUP7 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x93E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x90F JUMP JUMPDEST PUSH2 0x94B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x90F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x966 PUSH0 DUP4 ADD DUP5 PUSH2 0x90F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1358 DUP1 PUSH2 0x979 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B4 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x218 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1C2 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x425 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1137 JUMP JUMPDEST PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH2 0x510 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x118A JUMP JUMPDEST PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1137 JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2DF SWAP1 PUSH2 0x11F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30B SWAP1 PUSH2 0x11F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x356 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x356 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x339 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x36A PUSH2 0x703 JUMP JUMPDEST SWAP1 POP PUSH2 0x377 DUP2 DUP6 DUP6 PUSH2 0x70A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x395 PUSH2 0x703 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A2 DUP6 DUP3 DUP6 PUSH2 0x71C JUMP JUMPDEST PUSH2 0x3AD DUP6 DUP6 DUP6 PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x89E JUMP JUMPDEST PUSH2 0x3D3 DUP3 DUP3 PUSH2 0x925 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE DUP3 PUSH1 0x40 MLOAD PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x42F CALLER PUSH2 0x4CB JUMP JUMPDEST LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x467 SWAP1 PUSH2 0x126F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x47A CALLER DUP3 PUSH2 0x9A4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x696DE425F79F4A40BC6D2122CA50507F0EFBEABBFF86A84871B7196AB8EA8DF7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x518 PUSH2 0x89E JUMP JUMPDEST PUSH2 0x521 PUSH0 PUSH2 0xA23 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x55A SWAP1 PUSH2 0x11F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x586 SWAP1 PUSH2 0x11F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5E5 PUSH2 0x703 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F2 DUP2 DUP6 DUP6 PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x687 PUSH2 0x89E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x700 DUP2 PUSH2 0xA23 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x717 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAE6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x727 DUP5 DUP5 PUSH2 0x5FD JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7A8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x799 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x790 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A7 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xAE6 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x88E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x885 SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x899 DUP4 DUP4 DUP4 PUSH2 0xCB5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8A6 PUSH2 0x703 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8C4 PUSH2 0x523 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x923 JUMPI PUSH2 0x8E7 PUSH2 0x703 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91A SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x995 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98C SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A0 PUSH0 DUP4 DUP4 PUSH2 0xCB5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA14 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0B SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA1F DUP3 PUSH0 DUP4 PUSH2 0xCB5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB56 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4D SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBD SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCAF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCA6 SWAP2 SWAP1 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD05 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCF9 SWAP2 SWAP1 PUSH2 0x12EF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDD3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD8E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD85 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE1A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE64 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEC1 SWAP2 SWAP1 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF10 DUP3 PUSH2 0xECE JUMP JUMPDEST PUSH2 0xF1A DUP2 DUP6 PUSH2 0xED8 JUMP JUMPDEST SWAP4 POP PUSH2 0xF2A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEE8 JUMP JUMPDEST PUSH2 0xF33 DUP2 PUSH2 0xEF6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF56 DUP2 DUP5 PUSH2 0xF06 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF8B DUP3 PUSH2 0xF62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9B DUP2 PUSH2 0xF81 JUMP JUMPDEST DUP2 EQ PUSH2 0xFA5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFB6 DUP2 PUSH2 0xF92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFCE DUP2 PUSH2 0xFBC JUMP JUMPDEST DUP2 EQ PUSH2 0xFD8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFE9 DUP2 PUSH2 0xFC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1005 JUMPI PUSH2 0x1004 PUSH2 0xF5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1012 DUP6 DUP3 DUP7 ADD PUSH2 0xFA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1023 DUP6 DUP3 DUP7 ADD PUSH2 0xFDB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1041 DUP2 PUSH2 0x102D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x105A PUSH0 DUP4 ADD DUP5 PUSH2 0x1038 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1069 DUP2 PUSH2 0xFBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1082 PUSH0 DUP4 ADD DUP5 PUSH2 0x1060 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x109F JUMPI PUSH2 0x109E PUSH2 0xF5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10AC DUP7 DUP3 DUP8 ADD PUSH2 0xFA8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10BD DUP7 DUP3 DUP8 ADD PUSH2 0xFA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10CE DUP7 DUP3 DUP8 ADD PUSH2 0xFDB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10ED DUP2 PUSH2 0x10D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1106 PUSH0 DUP4 ADD DUP5 PUSH2 0x10E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1121 JUMPI PUSH2 0x1120 PUSH2 0xF5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x112E DUP5 DUP3 DUP6 ADD PUSH2 0xFDB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x114C JUMPI PUSH2 0x114B PUSH2 0xF5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1159 DUP5 DUP3 DUP6 ADD PUSH2 0xFA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x116B DUP2 PUSH2 0xF81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1184 PUSH0 DUP4 ADD DUP5 PUSH2 0x1162 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A0 JUMPI PUSH2 0x119F PUSH2 0xF5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11AD DUP6 DUP3 DUP7 ADD PUSH2 0xFA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11BE DUP6 DUP3 DUP7 ADD PUSH2 0xFA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x120C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x121F JUMPI PUSH2 0x121E PUSH2 0x11C8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F206275726E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1259 PUSH1 0x1C DUP4 PUSH2 0xED8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1264 DUP3 PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1286 DUP2 PUSH2 0x124D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12A0 PUSH0 DUP4 ADD DUP7 PUSH2 0x1162 JUMP JUMPDEST PUSH2 0x12AD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1060 JUMP JUMPDEST PUSH2 0x12BA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1060 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x12F9 DUP3 PUSH2 0xFBC JUMP JUMPDEST SWAP2 POP PUSH2 0x1304 DUP4 PUSH2 0xFBC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x131C JUMPI PUSH2 0x131B PUSH2 0x12C2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x812D813AFDA4AD2C3F8A8FC7898FAB9D89ABA1 0x27 SUB 0xAB 0xEC 0x27 PUSH14 0xB8DAC9C9B45664736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "167:860:7:-:0;;;389:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;479:12;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;503:34:7::2;509:12;523:13;503:5;;;:34;;:::i;:::-;389:198:::0;;167:860;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;1718:99::-;1770:6;1804:5;1798:12;1788:22;;1718:99;;;:::o;1823:180::-;1871:77;1868:1;1861:88;1968:4;1965:1;1958:15;1992:4;1989:1;1982:15;2009:180;2057:77;2054:1;2047:88;2154:4;2151:1;2144:15;2178:4;2175:1;2168:15;2195:320;2239:6;2276:1;2270:4;2266:12;2256:22;;2323:1;2317:4;2313:12;2344:18;2334:81;;2400:4;2392:6;2388:17;2378:27;;2334:81;2462:2;2454:6;2451:14;2431:18;2428:38;2425:84;;2481:18;;:::i;:::-;2425:84;2246:269;2195:320;;;:::o;2521:141::-;2570:4;2593:3;2585:11;;2616:3;2613:1;2606:14;2650:4;2647:1;2637:18;2629:26;;2521:141;;;:::o;2668:93::-;2705:6;2752:2;2747;2740:5;2736:14;2732:23;2722:33;;2668:93;;;:::o;2767:107::-;2811:8;2861:5;2855:4;2851:16;2830:37;;2767:107;;;;:::o;2880:393::-;2949:6;2999:1;2987:10;2983:18;3022:97;3052:66;3041:9;3022:97;:::i;:::-;3140:39;3170:8;3159:9;3140:39;:::i;:::-;3128:51;;3212:4;3208:9;3201:5;3197:21;3188:30;;3261:4;3251:8;3247:19;3240:5;3237:30;3227:40;;2956:317;;2880:393;;;;;:::o;3279:60::-;3307:3;3328:5;3321:12;;3279:60;;;:::o;3345:142::-;3395:9;3428:53;3446:34;3455:24;3473:5;3455:24;:::i;:::-;3446:34;:::i;:::-;3428:53;:::i;:::-;3415:66;;3345:142;;;:::o;3493:75::-;3536:3;3557:5;3550:12;;3493:75;;;:::o;3574:269::-;3684:39;3715:7;3684:39;:::i;:::-;3745:91;3794:41;3818:16;3794:41;:::i;:::-;3786:6;3779:4;3773:11;3745:91;:::i;:::-;3739:4;3732:105;3650:193;3574:269;;;:::o;3849:73::-;3894:3;3849:73;:::o;3928:189::-;4005:32;;:::i;:::-;4046:65;4104:6;4096;4090:4;4046:65;:::i;:::-;3981:136;3928:189;;:::o;4123:186::-;4183:120;4200:3;4193:5;4190:14;4183:120;;;4254:39;4291:1;4284:5;4254:39;:::i;:::-;4227:1;4220:5;4216:13;4207:22;;4183:120;;;4123:186;;:::o;4315:543::-;4416:2;4411:3;4408:11;4405:446;;;4450:38;4482:5;4450:38;:::i;:::-;4534:29;4552:10;4534:29;:::i;:::-;4524:8;4520:44;4717:2;4705:10;4702:18;4699:49;;;4738:8;4723:23;;4699:49;4761:80;4817:22;4835:3;4817:22;:::i;:::-;4807:8;4803:37;4790:11;4761:80;:::i;:::-;4420:431;;4405:446;4315:543;;;:::o;4864:117::-;4918:8;4968:5;4962:4;4958:16;4937:37;;4864:117;;;;:::o;4987:169::-;5031:6;5064:51;5112:1;5108:6;5100:5;5097:1;5093:13;5064:51;:::i;:::-;5060:56;5145:4;5139;5135:15;5125:25;;5038:118;4987:169;;;;:::o;5161:295::-;5237:4;5383:29;5408:3;5402:4;5383:29;:::i;:::-;5375:37;;5445:3;5442:1;5438:11;5432:4;5429:21;5421:29;;5161:295;;;;:::o;5461:1395::-;5578:37;5611:3;5578:37;:::i;:::-;5680:18;5672:6;5669:30;5666:56;;;5702:18;;:::i;:::-;5666:56;5746:38;5778:4;5772:11;5746:38;:::i;:::-;5831:67;5891:6;5883;5877:4;5831:67;:::i;:::-;5925:1;5949:4;5936:17;;5981:2;5973:6;5970:14;5998:1;5993:618;;;;6655:1;6672:6;6669:77;;;6721:9;6716:3;6712:19;6706:26;6697:35;;6669:77;6772:67;6832:6;6825:5;6772:67;:::i;:::-;6766:4;6759:81;6628:222;5963:887;;5993:618;6045:4;6041:9;6033:6;6029:22;6079:37;6111:4;6079:37;:::i;:::-;6138:1;6152:208;6166:7;6163:1;6160:14;6152:208;;;6245:9;6240:3;6236:19;6230:26;6222:6;6215:42;6296:1;6288:6;6284:14;6274:24;;6343:2;6332:9;6328:18;6315:31;;6189:4;6186:1;6182:12;6177:17;;6152:208;;;6388:6;6379:7;6376:19;6373:179;;;6446:9;6441:3;6437:19;6431:26;6489:48;6531:4;6523:6;6519:17;6508:9;6489:48;:::i;:::-;6481:6;6474:64;6396:156;6373:179;6598:1;6594;6586:6;6582:14;6578:22;6572:4;6565:36;6000:611;;;5963:887;;5553:1303;;;5461:1395;;:::o;6862:118::-;6949:24;6967:5;6949:24;:::i;:::-;6944:3;6937:37;6862:118;;:::o;6986:222::-;7079:4;7117:2;7106:9;7102:18;7094:26;;7130:71;7198:1;7187:9;7183:17;7174:6;7130:71;:::i;:::-;6986:222;;;;:::o;7214:180::-;7262:77;7259:1;7252:88;7359:4;7356:1;7349:15;7383:4;7380:1;7373:15;7400:191;7440:3;7459:20;7477:1;7459:20;:::i;:::-;7454:25;;7493:20;7511:1;7493:20;:::i;:::-;7488:25;;7536:1;7533;7529:9;7522:16;;7557:3;7554:1;7551:10;7548:36;;;7564:18;;:::i;:::-;7548:36;7400:191;;;;:::o;7597:118::-;7684:24;7702:5;7684:24;:::i;:::-;7679:3;7672:37;7597:118;;:::o;7721:442::-;7870:4;7908:2;7897:9;7893:18;7885:26;;7921:71;7989:1;7978:9;7974:17;7965:6;7921:71;:::i;:::-;8002:72;8070:2;8059:9;8055:18;8046:6;8002:72;:::i;:::-;8084;8152:2;8141:9;8137:18;8128:6;8084:72;:::i;:::-;7721:442;;;;;;:::o;8169:222::-;8262:4;8300:2;8289:9;8285:18;8277:26;;8313:71;8381:1;8370:9;8366:17;8357:6;8313:71;:::i;:::-;8169:222;;;;:::o;167:860:7:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1802,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2790,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 2468,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2206,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 2341,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 1795,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1820,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2595,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 1966,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3253,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1533,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 864,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1227,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1509": {
									"entryPoint": 1061,
									"id": 1509,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 953,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1481": {
									"entryPoint": 961,
									"id": 1481,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 720,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1315,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1296,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1355,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 898,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 907,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1663,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1499,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4749,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3816,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4802,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3934,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5": {
									"entryPoint": 4645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8569:8",
										"nodeType": "YulBlock",
										"src": "0:8569:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2121:32:8",
													"nodeType": "YulBlock",
													"src": "2121:32:8",
													"statements": [
														{
															"nativeSrc": "2131:16:8",
															"nodeType": "YulAssignment",
															"src": "2131:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:8",
																"nodeType": "YulIdentifier",
																"src": "2142:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:8",
														"nodeType": "YulTypedName",
														"src": "2103:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:8",
														"nodeType": "YulTypedName",
														"src": "2113:7:8",
														"type": ""
													}
												],
												"src": "2076:77:8"
											},
											{
												"body": {
													"nativeSrc": "2202:79:8",
													"nodeType": "YulBlock",
													"src": "2202:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:8",
																"nodeType": "YulBlock",
																"src": "2259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:8"
																			},
																			"nativeSrc": "2261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:8"
																		},
																		"nativeSrc": "2261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:8"
																				},
																				"nativeSrc": "2232:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:8"
																		},
																		"nativeSrc": "2222:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:8"
																},
																"nativeSrc": "2215:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:8"
															},
															"nativeSrc": "2212:63:8",
															"nodeType": "YulIf",
															"src": "2212:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:8",
														"nodeType": "YulTypedName",
														"src": "2195:5:8",
														"type": ""
													}
												],
												"src": "2159:122:8"
											},
											{
												"body": {
													"nativeSrc": "2339:87:8",
													"nodeType": "YulBlock",
													"src": "2339:87:8",
													"statements": [
														{
															"nativeSrc": "2349:29:8",
															"nodeType": "YulAssignment",
															"src": "2349:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:8"
																},
																"nativeSrc": "2358:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:8"
																},
																"nativeSrc": "2387:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:8"
															},
															"nativeSrc": "2387:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:8",
														"nodeType": "YulTypedName",
														"src": "2317:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:8",
														"nodeType": "YulTypedName",
														"src": "2325:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:8",
														"nodeType": "YulTypedName",
														"src": "2333:5:8",
														"type": ""
													}
												],
												"src": "2287:139:8"
											},
											{
												"body": {
													"nativeSrc": "2515:391:8",
													"nodeType": "YulBlock",
													"src": "2515:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:8",
																"nodeType": "YulBlock",
																"src": "2561:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:8"
																			},
																			"nativeSrc": "2563:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:8"
																		},
																		"nativeSrc": "2563:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:8"
																		},
																		"nativeSrc": "2532:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:8"
																},
																"nativeSrc": "2528:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:8"
															},
															"nativeSrc": "2525:119:8",
															"nodeType": "YulIf",
															"src": "2525:119:8"
														},
														{
															"nativeSrc": "2654:117:8",
															"nodeType": "YulBlock",
															"src": "2654:117:8",
															"statements": [
																{
																	"nativeSrc": "2669:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:8"
																				},
																				"nativeSrc": "2729:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:8"
																		},
																		"nativeSrc": "2708:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:8",
															"nodeType": "YulBlock",
															"src": "2781:118:8",
															"statements": [
																{
																	"nativeSrc": "2796:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:8"
																				},
																				"nativeSrc": "2857:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:8"
																		},
																		"nativeSrc": "2836:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:8",
														"nodeType": "YulTypedName",
														"src": "2477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:8",
														"nodeType": "YulTypedName",
														"src": "2488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:8",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:8",
														"nodeType": "YulTypedName",
														"src": "2508:6:8",
														"type": ""
													}
												],
												"src": "2432:474:8"
											},
											{
												"body": {
													"nativeSrc": "2954:48:8",
													"nodeType": "YulBlock",
													"src": "2954:48:8",
													"statements": [
														{
															"nativeSrc": "2964:32:8",
															"nodeType": "YulAssignment",
															"src": "2964:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:8"
																		},
																		"nativeSrc": "2982:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:8"
																},
																"nativeSrc": "2975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:8",
														"nodeType": "YulTypedName",
														"src": "2936:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:8",
														"nodeType": "YulTypedName",
														"src": "2946:7:8",
														"type": ""
													}
												],
												"src": "2912:90:8"
											},
											{
												"body": {
													"nativeSrc": "3067:50:8",
													"nodeType": "YulBlock",
													"src": "3067:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:8"
																		},
																		"nativeSrc": "3089:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:8"
																},
																"nativeSrc": "3077:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:8"
															},
															"nativeSrc": "3077:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:8",
														"nodeType": "YulTypedName",
														"src": "3055:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:8",
														"nodeType": "YulTypedName",
														"src": "3062:3:8",
														"type": ""
													}
												],
												"src": "3008:109:8"
											},
											{
												"body": {
													"nativeSrc": "3215:118:8",
													"nodeType": "YulBlock",
													"src": "3215:118:8",
													"statements": [
														{
															"nativeSrc": "3225:26:8",
															"nodeType": "YulAssignment",
															"src": "3225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:8"
																},
																"nativeSrc": "3233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:8"
																},
																"nativeSrc": "3261:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:8"
															},
															"nativeSrc": "3261:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:8",
														"nodeType": "YulTypedName",
														"src": "3199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:8",
														"nodeType": "YulTypedName",
														"src": "3210:4:8",
														"type": ""
													}
												],
												"src": "3123:210:8"
											},
											{
												"body": {
													"nativeSrc": "3404:53:8",
													"nodeType": "YulBlock",
													"src": "3404:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:8"
																		},
																		"nativeSrc": "3426:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:8"
																},
																"nativeSrc": "3414:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:8"
															},
															"nativeSrc": "3414:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:8",
														"nodeType": "YulTypedName",
														"src": "3392:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:8",
														"nodeType": "YulTypedName",
														"src": "3399:3:8",
														"type": ""
													}
												],
												"src": "3339:118:8"
											},
											{
												"body": {
													"nativeSrc": "3561:124:8",
													"nodeType": "YulBlock",
													"src": "3561:124:8",
													"statements": [
														{
															"nativeSrc": "3571:26:8",
															"nodeType": "YulAssignment",
															"src": "3571:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:8"
																},
																"nativeSrc": "3579:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:8"
																		},
																		"nativeSrc": "3660:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:8"
																},
																"nativeSrc": "3607:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:8"
															},
															"nativeSrc": "3607:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:8",
														"nodeType": "YulTypedName",
														"src": "3533:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:8",
														"nodeType": "YulTypedName",
														"src": "3545:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:8",
														"nodeType": "YulTypedName",
														"src": "3556:4:8",
														"type": ""
													}
												],
												"src": "3463:222:8"
											},
											{
												"body": {
													"nativeSrc": "3791:519:8",
													"nodeType": "YulBlock",
													"src": "3791:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:8",
																"nodeType": "YulBlock",
																"src": "3837:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:8"
																			},
																			"nativeSrc": "3839:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:8"
																		},
																		"nativeSrc": "3839:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:8"
																		},
																		"nativeSrc": "3808:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:8"
																},
																"nativeSrc": "3804:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:8"
															},
															"nativeSrc": "3801:119:8",
															"nodeType": "YulIf",
															"src": "3801:119:8"
														},
														{
															"nativeSrc": "3930:117:8",
															"nodeType": "YulBlock",
															"src": "3930:117:8",
															"statements": [
																{
																	"nativeSrc": "3945:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:8"
																				},
																				"nativeSrc": "4005:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:8"
																		},
																		"nativeSrc": "3984:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:8",
															"nodeType": "YulBlock",
															"src": "4057:118:8",
															"statements": [
																{
																	"nativeSrc": "4072:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:8"
																				},
																				"nativeSrc": "4133:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:8"
																		},
																		"nativeSrc": "4112:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:8",
															"nodeType": "YulBlock",
															"src": "4185:118:8",
															"statements": [
																{
																	"nativeSrc": "4200:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:8"
																				},
																				"nativeSrc": "4261:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:8"
																		},
																		"nativeSrc": "4240:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:8",
														"nodeType": "YulTypedName",
														"src": "3745:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:8",
														"nodeType": "YulTypedName",
														"src": "3756:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:8",
														"nodeType": "YulTypedName",
														"src": "3768:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:8",
														"nodeType": "YulTypedName",
														"src": "3776:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:8",
														"nodeType": "YulTypedName",
														"src": "3784:6:8",
														"type": ""
													}
												],
												"src": "3691:619:8"
											},
											{
												"body": {
													"nativeSrc": "4359:43:8",
													"nodeType": "YulBlock",
													"src": "4359:43:8",
													"statements": [
														{
															"nativeSrc": "4369:27:8",
															"nodeType": "YulAssignment",
															"src": "4369:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:8"
																},
																"nativeSrc": "4380:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:8",
														"nodeType": "YulTypedName",
														"src": "4341:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:8",
														"nodeType": "YulTypedName",
														"src": "4351:7:8",
														"type": ""
													}
												],
												"src": "4316:86:8"
											},
											{
												"body": {
													"nativeSrc": "4469:51:8",
													"nodeType": "YulBlock",
													"src": "4469:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:8"
																		},
																		"nativeSrc": "4491:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:8"
																},
																"nativeSrc": "4479:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:8"
															},
															"nativeSrc": "4479:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:8",
														"nodeType": "YulTypedName",
														"src": "4457:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:8",
														"nodeType": "YulTypedName",
														"src": "4464:3:8",
														"type": ""
													}
												],
												"src": "4408:112:8"
											},
											{
												"body": {
													"nativeSrc": "4620:120:8",
													"nodeType": "YulBlock",
													"src": "4620:120:8",
													"statements": [
														{
															"nativeSrc": "4630:26:8",
															"nodeType": "YulAssignment",
															"src": "4630:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:8"
																},
																"nativeSrc": "4638:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:8"
																		},
																		"nativeSrc": "4715:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:8"
																},
																"nativeSrc": "4666:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:8"
															},
															"nativeSrc": "4666:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:8",
														"nodeType": "YulTypedName",
														"src": "4592:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:8",
														"nodeType": "YulTypedName",
														"src": "4604:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:8",
														"nodeType": "YulTypedName",
														"src": "4615:4:8",
														"type": ""
													}
												],
												"src": "4526:214:8"
											},
											{
												"body": {
													"nativeSrc": "4812:263:8",
													"nodeType": "YulBlock",
													"src": "4812:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:8",
																"nodeType": "YulBlock",
																"src": "4858:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:8"
																			},
																			"nativeSrc": "4860:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:8"
																		},
																		"nativeSrc": "4860:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:8"
																		},
																		"nativeSrc": "4829:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:8"
																},
																"nativeSrc": "4825:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:8"
															},
															"nativeSrc": "4822:119:8",
															"nodeType": "YulIf",
															"src": "4822:119:8"
														},
														{
															"nativeSrc": "4951:117:8",
															"nodeType": "YulBlock",
															"src": "4951:117:8",
															"statements": [
																{
																	"nativeSrc": "4966:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:8"
																				},
																				"nativeSrc": "5026:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5005:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:8"
																		},
																		"nativeSrc": "5005:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "4746:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:8",
														"nodeType": "YulTypedName",
														"src": "4782:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:8",
														"nodeType": "YulTypedName",
														"src": "4793:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:8",
														"nodeType": "YulTypedName",
														"src": "4805:6:8",
														"type": ""
													}
												],
												"src": "4746:329:8"
											},
											{
												"body": {
													"nativeSrc": "5147:263:8",
													"nodeType": "YulBlock",
													"src": "5147:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5193:83:8",
																"nodeType": "YulBlock",
																"src": "5193:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5195:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5195:77:8"
																			},
																			"nativeSrc": "5195:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:79:8"
																		},
																		"nativeSrc": "5195:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5168:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5168:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5177:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5177:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5164:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5164:3:8"
																		},
																		"nativeSrc": "5164:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5164:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5189:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5189:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5160:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5160:3:8"
																},
																"nativeSrc": "5160:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5160:32:8"
															},
															"nativeSrc": "5157:119:8",
															"nodeType": "YulIf",
															"src": "5157:119:8"
														},
														{
															"nativeSrc": "5286:117:8",
															"nodeType": "YulBlock",
															"src": "5286:117:8",
															"statements": [
																{
																	"nativeSrc": "5301:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5301:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5315:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5315:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5305:6:8",
																			"nodeType": "YulTypedName",
																			"src": "5305:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5330:63:8",
																	"nodeType": "YulAssignment",
																	"src": "5330:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5365:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "5365:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5361:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5361:3:8"
																				},
																				"nativeSrc": "5361:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5361:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5385:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5385:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5340:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "5340:20:8"
																		},
																		"nativeSrc": "5340:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5330:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "5330:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5081:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5117:9:8",
														"nodeType": "YulTypedName",
														"src": "5117:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5128:7:8",
														"nodeType": "YulTypedName",
														"src": "5128:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5140:6:8",
														"nodeType": "YulTypedName",
														"src": "5140:6:8",
														"type": ""
													}
												],
												"src": "5081:329:8"
											},
											{
												"body": {
													"nativeSrc": "5481:53:8",
													"nodeType": "YulBlock",
													"src": "5481:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5498:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5498:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5521:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5521:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5503:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "5503:17:8"
																		},
																		"nativeSrc": "5503:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5491:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5491:6:8"
																},
																"nativeSrc": "5491:37:8",
																"nodeType": "YulFunctionCall",
																"src": "5491:37:8"
															},
															"nativeSrc": "5491:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "5491:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5416:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5469:5:8",
														"nodeType": "YulTypedName",
														"src": "5469:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5476:3:8",
														"nodeType": "YulTypedName",
														"src": "5476:3:8",
														"type": ""
													}
												],
												"src": "5416:118:8"
											},
											{
												"body": {
													"nativeSrc": "5638:124:8",
													"nodeType": "YulBlock",
													"src": "5638:124:8",
													"statements": [
														{
															"nativeSrc": "5648:26:8",
															"nodeType": "YulAssignment",
															"src": "5648:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5660:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5660:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5671:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5656:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5656:3:8"
																},
																"nativeSrc": "5656:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5656:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5648:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5648:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5728:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5728:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5741:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5741:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5752:1:8",
																				"nodeType": "YulLiteral",
																				"src": "5752:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5737:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:8"
																		},
																		"nativeSrc": "5737:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5737:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5684:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "5684:43:8"
																},
																"nativeSrc": "5684:71:8",
																"nodeType": "YulFunctionCall",
																"src": "5684:71:8"
															},
															"nativeSrc": "5684:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "5684:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5540:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5610:9:8",
														"nodeType": "YulTypedName",
														"src": "5610:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5622:6:8",
														"nodeType": "YulTypedName",
														"src": "5622:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5633:4:8",
														"nodeType": "YulTypedName",
														"src": "5633:4:8",
														"type": ""
													}
												],
												"src": "5540:222:8"
											},
											{
												"body": {
													"nativeSrc": "5851:391:8",
													"nodeType": "YulBlock",
													"src": "5851:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5897:83:8",
																"nodeType": "YulBlock",
																"src": "5897:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5899:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "5899:77:8"
																			},
																			"nativeSrc": "5899:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:79:8"
																		},
																		"nativeSrc": "5899:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5872:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "5872:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5868:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5868:3:8"
																		},
																		"nativeSrc": "5868:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5868:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5864:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5864:3:8"
																},
																"nativeSrc": "5864:32:8",
																"nodeType": "YulFunctionCall",
																"src": "5864:32:8"
															},
															"nativeSrc": "5861:119:8",
															"nodeType": "YulIf",
															"src": "5861:119:8"
														},
														{
															"nativeSrc": "5990:117:8",
															"nodeType": "YulBlock",
															"src": "5990:117:8",
															"statements": [
																{
																	"nativeSrc": "6005:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6005:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6019:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6019:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6009:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6009:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6034:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6034:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6069:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6069:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6080:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6080:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6065:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6065:3:8"
																				},
																				"nativeSrc": "6065:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6065:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6089:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6089:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6044:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6044:20:8"
																		},
																		"nativeSrc": "6044:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6044:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6034:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6034:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6117:118:8",
															"nodeType": "YulBlock",
															"src": "6117:118:8",
															"statements": [
																{
																	"nativeSrc": "6132:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6132:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6146:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6146:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6136:6:8",
																			"nodeType": "YulTypedName",
																			"src": "6136:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6162:63:8",
																	"nodeType": "YulAssignment",
																	"src": "6162:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6197:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "6197:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6208:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6208:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6193:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6193:3:8"
																				},
																				"nativeSrc": "6193:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6193:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6217:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6217:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6172:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "6172:20:8"
																		},
																		"nativeSrc": "6172:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6172:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6162:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "6162:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5768:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:8",
														"nodeType": "YulTypedName",
														"src": "5813:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5824:7:8",
														"nodeType": "YulTypedName",
														"src": "5824:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5836:6:8",
														"nodeType": "YulTypedName",
														"src": "5836:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5844:6:8",
														"nodeType": "YulTypedName",
														"src": "5844:6:8",
														"type": ""
													}
												],
												"src": "5768:474:8"
											},
											{
												"body": {
													"nativeSrc": "6276:152:8",
													"nodeType": "YulBlock",
													"src": "6276:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6293:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6293:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6296:77:8",
																		"nodeType": "YulLiteral",
																		"src": "6296:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6286:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:8"
																},
																"nativeSrc": "6286:88:8",
																"nodeType": "YulFunctionCall",
																"src": "6286:88:8"
															},
															"nativeSrc": "6286:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "6286:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6390:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6390:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6393:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6393:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:8"
																},
																"nativeSrc": "6383:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6383:15:8"
															},
															"nativeSrc": "6383:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6383:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6414:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6414:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6417:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6417:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6407:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6407:6:8"
																},
																"nativeSrc": "6407:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6407:15:8"
															},
															"nativeSrc": "6407:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6407:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6248:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6248:180:8"
											},
											{
												"body": {
													"nativeSrc": "6485:269:8",
													"nodeType": "YulBlock",
													"src": "6485:269:8",
													"statements": [
														{
															"nativeSrc": "6495:22:8",
															"nodeType": "YulAssignment",
															"src": "6495:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6509:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6509:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6515:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6515:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6505:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6505:3:8"
																},
																"nativeSrc": "6505:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6505:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6495:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:8"
																}
															]
														},
														{
															"nativeSrc": "6526:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6526:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6556:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "6556:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6562:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6562:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6552:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6552:3:8"
																},
																"nativeSrc": "6552:12:8",
																"nodeType": "YulFunctionCall",
																"src": "6552:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6530:18:8",
																	"nodeType": "YulTypedName",
																	"src": "6530:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6603:51:8",
																"nodeType": "YulBlock",
																"src": "6603:51:8",
																"statements": [
																	{
																		"nativeSrc": "6617:27:8",
																		"nodeType": "YulAssignment",
																		"src": "6617:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6631:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6631:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6639:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6639:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6627:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6627:3:8"
																			},
																			"nativeSrc": "6627:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6627:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6617:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6617:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6583:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6583:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6576:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6576:6:8"
																},
																"nativeSrc": "6576:26:8",
																"nodeType": "YulFunctionCall",
																"src": "6576:26:8"
															},
															"nativeSrc": "6573:81:8",
															"nodeType": "YulIf",
															"src": "6573:81:8"
														},
														{
															"body": {
																"nativeSrc": "6706:42:8",
																"nodeType": "YulBlock",
																"src": "6706:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6720:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6720:16:8"
																			},
																			"nativeSrc": "6720:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6720:18:8"
																		},
																		"nativeSrc": "6720:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6720:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6670:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "6670:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6693:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6693:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6701:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6701:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6690:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6690:2:8"
																		},
																		"nativeSrc": "6690:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6690:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6667:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6667:2:8"
																},
																"nativeSrc": "6667:38:8",
																"nodeType": "YulFunctionCall",
																"src": "6667:38:8"
															},
															"nativeSrc": "6664:84:8",
															"nodeType": "YulIf",
															"src": "6664:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6434:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6469:4:8",
														"nodeType": "YulTypedName",
														"src": "6469:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6478:6:8",
														"nodeType": "YulTypedName",
														"src": "6478:6:8",
														"type": ""
													}
												],
												"src": "6434:320:8"
											},
											{
												"body": {
													"nativeSrc": "6866:72:8",
													"nodeType": "YulBlock",
													"src": "6866:72:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6888:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6896:1:8",
																				"nodeType": "YulLiteral",
																				"src": "6896:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6884:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6884:3:8"
																		},
																		"nativeSrc": "6884:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6884:14:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e636520746f206275726e",
																		"kind": "string",
																		"nativeSrc": "6900:30:8",
																		"nodeType": "YulLiteral",
																		"src": "6900:30:8",
																		"type": "",
																		"value": "Insufficient balance to burn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6877:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6877:6:8"
																},
																"nativeSrc": "6877:54:8",
																"nodeType": "YulFunctionCall",
																"src": "6877:54:8"
															},
															"nativeSrc": "6877:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "6877:54:8"
														}
													]
												},
												"name": "store_literal_in_memory_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5",
												"nativeSrc": "6760:178:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6858:6:8",
														"nodeType": "YulTypedName",
														"src": "6858:6:8",
														"type": ""
													}
												],
												"src": "6760:178:8"
											},
											{
												"body": {
													"nativeSrc": "7090:220:8",
													"nodeType": "YulBlock",
													"src": "7090:220:8",
													"statements": [
														{
															"nativeSrc": "7100:74:8",
															"nodeType": "YulAssignment",
															"src": "7100:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7166:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7166:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7171:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7171:2:8",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7107:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "7107:58:8"
																},
																"nativeSrc": "7107:67:8",
																"nodeType": "YulFunctionCall",
																"src": "7107:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7100:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7100:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7272:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7272:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5",
																	"nativeSrc": "7183:88:8",
																	"nodeType": "YulIdentifier",
																	"src": "7183:88:8"
																},
																"nativeSrc": "7183:93:8",
																"nodeType": "YulFunctionCall",
																"src": "7183:93:8"
															},
															"nativeSrc": "7183:93:8",
															"nodeType": "YulExpressionStatement",
															"src": "7183:93:8"
														},
														{
															"nativeSrc": "7285:19:8",
															"nodeType": "YulAssignment",
															"src": "7285:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7296:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "7296:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7301:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7301:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7292:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7292:3:8"
																},
																"nativeSrc": "7292:12:8",
																"nodeType": "YulFunctionCall",
																"src": "7292:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7285:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7285:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6944:366:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7078:3:8",
														"nodeType": "YulTypedName",
														"src": "7078:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7086:3:8",
														"nodeType": "YulTypedName",
														"src": "7086:3:8",
														"type": ""
													}
												],
												"src": "6944:366:8"
											},
											{
												"body": {
													"nativeSrc": "7487:248:8",
													"nodeType": "YulBlock",
													"src": "7487:248:8",
													"statements": [
														{
															"nativeSrc": "7497:26:8",
															"nodeType": "YulAssignment",
															"src": "7497:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7509:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7509:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7520:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7520:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7505:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7505:3:8"
																},
																"nativeSrc": "7505:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7505:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7497:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7497:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7544:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7544:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7555:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7555:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7540:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7540:3:8"
																		},
																		"nativeSrc": "7540:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7540:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7563:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7563:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7569:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7569:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7559:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7559:3:8"
																		},
																		"nativeSrc": "7559:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7559:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7533:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7533:6:8"
																},
																"nativeSrc": "7533:47:8",
																"nodeType": "YulFunctionCall",
																"src": "7533:47:8"
															},
															"nativeSrc": "7533:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "7533:47:8"
														},
														{
															"nativeSrc": "7589:139:8",
															"nodeType": "YulAssignment",
															"src": "7589:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7723:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "7723:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7597:124:8",
																	"nodeType": "YulIdentifier",
																	"src": "7597:124:8"
																},
																"nativeSrc": "7597:131:8",
																"nodeType": "YulFunctionCall",
																"src": "7597:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7589:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7589:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7316:419:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7467:9:8",
														"nodeType": "YulTypedName",
														"src": "7467:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7482:4:8",
														"nodeType": "YulTypedName",
														"src": "7482:4:8",
														"type": ""
													}
												],
												"src": "7316:419:8"
											},
											{
												"body": {
													"nativeSrc": "7895:288:8",
													"nodeType": "YulBlock",
													"src": "7895:288:8",
													"statements": [
														{
															"nativeSrc": "7905:26:8",
															"nodeType": "YulAssignment",
															"src": "7905:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7917:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7917:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7928:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7928:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7913:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7913:3:8"
																},
																"nativeSrc": "7913:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7913:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7905:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7905:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7985:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "7985:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7998:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7998:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8009:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8009:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7994:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7994:3:8"
																		},
																		"nativeSrc": "7994:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7994:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7941:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "7941:43:8"
																},
																"nativeSrc": "7941:71:8",
																"nodeType": "YulFunctionCall",
																"src": "7941:71:8"
															},
															"nativeSrc": "7941:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "7941:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8066:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8066:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8079:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8079:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8090:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8090:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8075:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8075:3:8"
																		},
																		"nativeSrc": "8075:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8075:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8022:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8022:43:8"
																},
																"nativeSrc": "8022:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8022:72:8"
															},
															"nativeSrc": "8022:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8022:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8148:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8148:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8161:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8161:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8172:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8172:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8157:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8157:3:8"
																		},
																		"nativeSrc": "8157:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8157:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8104:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8104:43:8"
																},
																"nativeSrc": "8104:72:8",
																"nodeType": "YulFunctionCall",
																"src": "8104:72:8"
															},
															"nativeSrc": "8104:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "8104:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7741:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7851:9:8",
														"nodeType": "YulTypedName",
														"src": "7851:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7863:6:8",
														"nodeType": "YulTypedName",
														"src": "7863:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7871:6:8",
														"nodeType": "YulTypedName",
														"src": "7871:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7879:6:8",
														"nodeType": "YulTypedName",
														"src": "7879:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7890:4:8",
														"nodeType": "YulTypedName",
														"src": "7890:4:8",
														"type": ""
													}
												],
												"src": "7741:442:8"
											},
											{
												"body": {
													"nativeSrc": "8217:152:8",
													"nodeType": "YulBlock",
													"src": "8217:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8234:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8234:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8237:77:8",
																		"nodeType": "YulLiteral",
																		"src": "8237:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8227:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8227:6:8"
																},
																"nativeSrc": "8227:88:8",
																"nodeType": "YulFunctionCall",
																"src": "8227:88:8"
															},
															"nativeSrc": "8227:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "8227:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8331:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8331:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8334:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8334:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8324:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8324:6:8"
																},
																"nativeSrc": "8324:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8324:15:8"
															},
															"nativeSrc": "8324:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8324:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8355:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8355:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8358:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8358:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8348:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8348:6:8"
																},
																"nativeSrc": "8348:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8348:15:8"
															},
															"nativeSrc": "8348:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8348:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8189:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "8189:180:8"
											},
											{
												"body": {
													"nativeSrc": "8419:147:8",
													"nodeType": "YulBlock",
													"src": "8419:147:8",
													"statements": [
														{
															"nativeSrc": "8429:25:8",
															"nodeType": "YulAssignment",
															"src": "8429:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8452:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8452:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8434:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8434:17:8"
																},
																"nativeSrc": "8434:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8434:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8429:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8429:1:8"
																}
															]
														},
														{
															"nativeSrc": "8463:25:8",
															"nodeType": "YulAssignment",
															"src": "8463:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8486:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8486:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8468:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "8468:17:8"
																},
																"nativeSrc": "8468:20:8",
																"nodeType": "YulFunctionCall",
																"src": "8468:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8463:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8463:1:8"
																}
															]
														},
														{
															"nativeSrc": "8497:16:8",
															"nodeType": "YulAssignment",
															"src": "8497:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8508:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8508:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8511:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8511:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8504:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8504:3:8"
																},
																"nativeSrc": "8504:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8504:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8497:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8497:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8537:22:8",
																"nodeType": "YulBlock",
																"src": "8537:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8539:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8539:16:8"
																			},
																			"nativeSrc": "8539:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8539:18:8"
																		},
																		"nativeSrc": "8539:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8539:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8529:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8529:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8532:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8532:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8526:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8526:2:8"
																},
																"nativeSrc": "8526:10:8",
																"nodeType": "YulFunctionCall",
																"src": "8526:10:8"
															},
															"nativeSrc": "8523:36:8",
															"nodeType": "YulIf",
															"src": "8523:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8375:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8406:1:8",
														"nodeType": "YulTypedName",
														"src": "8406:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8409:1:8",
														"nodeType": "YulTypedName",
														"src": "8409:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8415:3:8",
														"nodeType": "YulTypedName",
														"src": "8415:3:8",
														"type": ""
													}
												],
												"src": "8375:191:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance to burn\")\n\n    }\n\n    function abi_encode_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e8575f3560e01c806370a082311161008a57806395d89b411161006457806395d89b4114610236578063a9059cbb14610254578063dd62ed3e14610284578063f2fde38b146102b4576100e8565b806370a08231146101de578063715018a61461020e5780638da5cb5b14610218576100e8565b806323b872dd116100c657806323b872dd14610158578063313ce5671461018857806340c10f19146101a657806342966c68146101c2576100e8565b806306fdde03146100ec578063095ea7b31461010a57806318160ddd1461013a575b5f80fd5b6100f46102d0565b6040516101019190610f3e565b60405180910390f35b610124600480360381019061011f9190610fef565b610360565b6040516101319190611047565b60405180910390f35b610142610382565b60405161014f919061106f565b60405180910390f35b610172600480360381019061016d9190611088565b61038b565b60405161017f9190611047565b60405180910390f35b6101906103b9565b60405161019d91906110f3565b60405180910390f35b6101c060048036038101906101bb9190610fef565b6103c1565b005b6101dc60048036038101906101d7919061110c565b610425565b005b6101f860048036038101906101f39190611137565b6104cb565b604051610205919061106f565b60405180910390f35b610216610510565b005b610220610523565b60405161022d9190611171565b60405180910390f35b61023e61054b565b60405161024b9190610f3e565b60405180910390f35b61026e60048036038101906102699190610fef565b6105db565b60405161027b9190611047565b60405180910390f35b61029e6004803603810190610299919061118a565b6105fd565b6040516102ab919061106f565b60405180910390f35b6102ce60048036038101906102c99190611137565b61067f565b005b6060600380546102df906111f5565b80601f016020809104026020016040519081016040528092919081815260200182805461030b906111f5565b80156103565780601f1061032d57610100808354040283529160200191610356565b820191905f5260205f20905b81548152906001019060200180831161033957829003601f168201915b5050505050905090565b5f8061036a610703565b905061037781858561070a565b600191505092915050565b5f600254905090565b5f80610395610703565b90506103a285828561071c565b6103ad8585856107ae565b60019150509392505050565b5f6012905090565b6103c961089e565b6103d38282610925565b8173ffffffffffffffffffffffffffffffffffffffff167f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe82604051610419919061106f565b60405180910390a25050565b8061042f336104cb565b1015610470576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104679061126f565b60405180910390fd5b61047a33826109a4565b3373ffffffffffffffffffffffffffffffffffffffff167f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7826040516104c0919061106f565b60405180910390a250565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61051861089e565b6105215f610a23565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461055a906111f5565b80601f0160208091040260200160405190810160405280929190818152602001828054610586906111f5565b80156105d15780601f106105a8576101008083540402835291602001916105d1565b820191905f5260205f20905b8154815290600101906020018083116105b457829003601f168201915b5050505050905090565b5f806105e5610703565b90506105f28185856107ae565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61068761089e565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106f7575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106ee9190611171565b60405180910390fd5b61070081610a23565b50565b5f33905090565b6107178383836001610ae6565b505050565b5f61072784846105fd565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107a85781811015610799578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016107909392919061128d565b60405180910390fd5b6107a784848484035f610ae6565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361081e575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108159190611171565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361088e575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108859190611171565b60405180910390fd5b610899838383610cb5565b505050565b6108a6610703565b73ffffffffffffffffffffffffffffffffffffffff166108c4610523565b73ffffffffffffffffffffffffffffffffffffffff1614610923576108e7610703565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161091a9190611171565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610995575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161098c9190611171565b60405180910390fd5b6109a05f8383610cb5565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a14575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a0b9190611171565b60405180910390fd5b610a1f825f83610cb5565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b56575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b4d9190611171565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bc6575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bbd9190611171565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610caf578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ca6919061106f565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d05578060025f828254610cf991906112ef565b92505081905550610dd3565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610d8e578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610d859392919061128d565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e1a578060025f8282540392505081905550610e64565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ec1919061106f565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610f1082610ece565b610f1a8185610ed8565b9350610f2a818560208601610ee8565b610f3381610ef6565b840191505092915050565b5f6020820190508181035f830152610f568184610f06565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f8b82610f62565b9050919050565b610f9b81610f81565b8114610fa5575f80fd5b50565b5f81359050610fb681610f92565b92915050565b5f819050919050565b610fce81610fbc565b8114610fd8575f80fd5b50565b5f81359050610fe981610fc5565b92915050565b5f806040838503121561100557611004610f5e565b5b5f61101285828601610fa8565b925050602061102385828601610fdb565b9150509250929050565b5f8115159050919050565b6110418161102d565b82525050565b5f60208201905061105a5f830184611038565b92915050565b61106981610fbc565b82525050565b5f6020820190506110825f830184611060565b92915050565b5f805f6060848603121561109f5761109e610f5e565b5b5f6110ac86828701610fa8565b93505060206110bd86828701610fa8565b92505060406110ce86828701610fdb565b9150509250925092565b5f60ff82169050919050565b6110ed816110d8565b82525050565b5f6020820190506111065f8301846110e4565b92915050565b5f6020828403121561112157611120610f5e565b5b5f61112e84828501610fdb565b91505092915050565b5f6020828403121561114c5761114b610f5e565b5b5f61115984828501610fa8565b91505092915050565b61116b81610f81565b82525050565b5f6020820190506111845f830184611162565b92915050565b5f80604083850312156111a05761119f610f5e565b5b5f6111ad85828601610fa8565b92505060206111be85828601610fa8565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061120c57607f821691505b60208210810361121f5761121e6111c8565b5b50919050565b7f496e73756666696369656e742062616c616e636520746f206275726e000000005f82015250565b5f611259601c83610ed8565b915061126482611225565b602082019050919050565b5f6020820190508181035f8301526112868161124d565b9050919050565b5f6060820190506112a05f830186611162565b6112ad6020830185611060565b6112ba6040830184611060565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6112f982610fbc565b915061130483610fbc565b925082820190508082111561131c5761131b6112c2565b5b9291505056fea264697066735822122072812d813afda4ad2c3f8a8fc7898fab9d89aba12703abec276db8dac9c9b45664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B4 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x218 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1C2 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13A JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF4 PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11F SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH2 0x360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x1088 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17F SWAP2 SWAP1 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH2 0x3B9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x10F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH2 0x425 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x1137 JUMP JUMPDEST PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x205 SWAP2 SWAP1 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x216 PUSH2 0x510 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH2 0x523 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x118A JUMP JUMPDEST PUSH2 0x5FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C9 SWAP2 SWAP1 PUSH2 0x1137 JUMP JUMPDEST PUSH2 0x67F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2DF SWAP1 PUSH2 0x11F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x30B SWAP1 PUSH2 0x11F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x356 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x356 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x339 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x36A PUSH2 0x703 JUMP JUMPDEST SWAP1 POP PUSH2 0x377 DUP2 DUP6 DUP6 PUSH2 0x70A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x395 PUSH2 0x703 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A2 DUP6 DUP3 DUP6 PUSH2 0x71C JUMP JUMPDEST PUSH2 0x3AD DUP6 DUP6 DUP6 PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x89E JUMP JUMPDEST PUSH2 0x3D3 DUP3 DUP3 PUSH2 0x925 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE DUP3 PUSH1 0x40 MLOAD PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x42F CALLER PUSH2 0x4CB JUMP JUMPDEST LT ISZERO PUSH2 0x470 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x467 SWAP1 PUSH2 0x126F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x47A CALLER DUP3 PUSH2 0x9A4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x696DE425F79F4A40BC6D2122CA50507F0EFBEABBFF86A84871B7196AB8EA8DF7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 SWAP1 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x518 PUSH2 0x89E JUMP JUMPDEST PUSH2 0x521 PUSH0 PUSH2 0xA23 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x55A SWAP1 PUSH2 0x11F5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x586 SWAP1 PUSH2 0x11F5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5E5 PUSH2 0x703 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F2 DUP2 DUP6 DUP6 PUSH2 0x7AE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x687 PUSH2 0x89E JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EE SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x700 DUP2 PUSH2 0xA23 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x717 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAE6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x727 DUP5 DUP5 PUSH2 0x5FD JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7A8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x799 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x790 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7A7 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xAE6 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x88E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x885 SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x899 DUP4 DUP4 DUP4 PUSH2 0xCB5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x8A6 PUSH2 0x703 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8C4 PUSH2 0x523 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x923 JUMPI PUSH2 0x8E7 PUSH2 0x703 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91A SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x995 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98C SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A0 PUSH0 DUP4 DUP4 PUSH2 0xCB5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA14 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0B SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA1F DUP3 PUSH0 DUP4 PUSH2 0xCB5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB56 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4D SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC6 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBD SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCAF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCA6 SWAP2 SWAP1 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD05 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCF9 SWAP2 SWAP1 PUSH2 0x12EF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDD3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD8E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD85 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x128D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE1A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE64 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEC1 SWAP2 SWAP1 PUSH2 0x106F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF10 DUP3 PUSH2 0xECE JUMP JUMPDEST PUSH2 0xF1A DUP2 DUP6 PUSH2 0xED8 JUMP JUMPDEST SWAP4 POP PUSH2 0xF2A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEE8 JUMP JUMPDEST PUSH2 0xF33 DUP2 PUSH2 0xEF6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF56 DUP2 DUP5 PUSH2 0xF06 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF8B DUP3 PUSH2 0xF62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9B DUP2 PUSH2 0xF81 JUMP JUMPDEST DUP2 EQ PUSH2 0xFA5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFB6 DUP2 PUSH2 0xF92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFCE DUP2 PUSH2 0xFBC JUMP JUMPDEST DUP2 EQ PUSH2 0xFD8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFE9 DUP2 PUSH2 0xFC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1005 JUMPI PUSH2 0x1004 PUSH2 0xF5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1012 DUP6 DUP3 DUP7 ADD PUSH2 0xFA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1023 DUP6 DUP3 DUP7 ADD PUSH2 0xFDB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1041 DUP2 PUSH2 0x102D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x105A PUSH0 DUP4 ADD DUP5 PUSH2 0x1038 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1069 DUP2 PUSH2 0xFBC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1082 PUSH0 DUP4 ADD DUP5 PUSH2 0x1060 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x109F JUMPI PUSH2 0x109E PUSH2 0xF5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10AC DUP7 DUP3 DUP8 ADD PUSH2 0xFA8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10BD DUP7 DUP3 DUP8 ADD PUSH2 0xFA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10CE DUP7 DUP3 DUP8 ADD PUSH2 0xFDB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10ED DUP2 PUSH2 0x10D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1106 PUSH0 DUP4 ADD DUP5 PUSH2 0x10E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1121 JUMPI PUSH2 0x1120 PUSH2 0xF5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x112E DUP5 DUP3 DUP6 ADD PUSH2 0xFDB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x114C JUMPI PUSH2 0x114B PUSH2 0xF5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1159 DUP5 DUP3 DUP6 ADD PUSH2 0xFA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x116B DUP2 PUSH2 0xF81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1184 PUSH0 DUP4 ADD DUP5 PUSH2 0x1162 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A0 JUMPI PUSH2 0x119F PUSH2 0xF5E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11AD DUP6 DUP3 DUP7 ADD PUSH2 0xFA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11BE DUP6 DUP3 DUP7 ADD PUSH2 0xFA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x120C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x121F JUMPI PUSH2 0x121E PUSH2 0x11C8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E636520746F206275726E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1259 PUSH1 0x1C DUP4 PUSH2 0xED8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1264 DUP3 PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1286 DUP2 PUSH2 0x124D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12A0 PUSH0 DUP4 ADD DUP7 PUSH2 0x1162 JUMP JUMPDEST PUSH2 0x12AD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1060 JUMP JUMPDEST PUSH2 0x12BA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1060 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x12F9 DUP3 PUSH2 0xFBC JUMP JUMPDEST SWAP2 POP PUSH2 0x1304 DUP4 PUSH2 0xFBC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x131C JUMPI PUSH2 0x131B PUSH2 0x12C2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x812D813AFDA4AD2C3F8A8FC7898FAB9D89ABA1 0x27 SUB 0xAB 0xEC 0x27 PUSH14 0xB8DAC9C9B45664736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "167:860:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;642:128:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;821:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;642:128:7:-;1531:13:0;:11;:13::i;:::-;713:17:7::1;719:2;723:6;713:5;:17::i;:::-;752:2;745:18;;;756:6;745:18;;;;;;:::i;:::-;;;;;;;;642:128:::0;;:::o;821:204::-;903:6;878:21;888:10;878:9;:21::i;:::-;:31;;870:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;952:25;958:10;970:6;952:5;:25::i;:::-;999:10;992:26;;;1011:6;992:26;;;;;;:::i;:::-;;;;;;;;821:204;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;3846:140::-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:::-;5140:6;5189:2;5177:9;5168:7;5164:23;5160:32;5157:119;;;5195:79;;:::i;:::-;5157:119;5315:1;5340:53;5385:7;5376:6;5365:9;5361:22;5340:53;:::i;:::-;5330:63;;5286:117;5081:329;;;;:::o;5416:118::-;5503:24;5521:5;5503:24;:::i;:::-;5498:3;5491:37;5416:118;;:::o;5540:222::-;5633:4;5671:2;5660:9;5656:18;5648:26;;5684:71;5752:1;5741:9;5737:17;5728:6;5684:71;:::i;:::-;5540:222;;;;:::o;5768:474::-;5836:6;5844;5893:2;5881:9;5872:7;5868:23;5864:32;5861:119;;;5899:79;;:::i;:::-;5861:119;6019:1;6044:53;6089:7;6080:6;6069:9;6065:22;6044:53;:::i;:::-;6034:63;;5990:117;6146:2;6172:53;6217:7;6208:6;6197:9;6193:22;6172:53;:::i;:::-;6162:63;;6117:118;5768:474;;;;;:::o;6248:180::-;6296:77;6293:1;6286:88;6393:4;6390:1;6383:15;6417:4;6414:1;6407:15;6434:320;6478:6;6515:1;6509:4;6505:12;6495:22;;6562:1;6556:4;6552:12;6583:18;6573:81;;6639:4;6631:6;6627:17;6617:27;;6573:81;6701:2;6693:6;6690:14;6670:18;6667:38;6664:84;;6720:18;;:::i;:::-;6664:84;6485:269;6434:320;;;:::o;6760:178::-;6900:30;6896:1;6888:6;6884:14;6877:54;6760:178;:::o;6944:366::-;7086:3;7107:67;7171:2;7166:3;7107:67;:::i;:::-;7100:74;;7183:93;7272:3;7183:93;:::i;:::-;7301:2;7296:3;7292:12;7285:19;;6944:366;;;:::o;7316:419::-;7482:4;7520:2;7509:9;7505:18;7497:26;;7569:9;7563:4;7559:20;7555:1;7544:9;7540:17;7533:47;7597:131;7723:4;7597:131;:::i;:::-;7589:139;;7316:419;;;:::o;7741:442::-;7890:4;7928:2;7917:9;7913:18;7905:26;;7941:71;8009:1;7998:9;7994:17;7985:6;7941:71;:::i;:::-;8022:72;8090:2;8079:9;8075:18;8066:6;8022:72;:::i;:::-;8104;8172:2;8161:9;8157:18;8148:6;8104:72;:::i;:::-;7741:442;;;;;;:::o;8189:180::-;8237:77;8234:1;8227:88;8334:4;8331:1;8324:15;8358:4;8355:1;8348:15;8375:191;8415:3;8434:20;8452:1;8434:20;:::i;:::-;8429:25;;8468:20;8486:1;8468:20;:::i;:::-;8463:25;;8511:1;8508;8504:9;8497:16;;8532:3;8529:1;8526:10;8523:36;;;8539:18;;:::i;:::-;8523:36;8375:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "990400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2852",
								"burn(uint256)": "infinite",
								"decimals()": "383",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 167,
									"end": 1027,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 167,
									"end": 1027,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 167,
									"end": 1027,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 389,
									"end": 587,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 389,
									"end": 587,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 389,
									"end": 587,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 389,
									"end": 587,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 389,
									"end": 587,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 389,
									"end": 587,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 389,
									"end": 587,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 389,
									"end": 587,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 479,
									"end": 491,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "5265707574696679000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "5250540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 503,
									"end": 537,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 509,
									"end": 521,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 523,
									"end": 536,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 503,
									"end": 508,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 503,
									"end": 508,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 503,
									"end": 508,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 503,
									"end": 537,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 503,
									"end": 537,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 503,
									"end": 537,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 503,
									"end": 537,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 503,
									"end": 537,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 389,
									"end": 587,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1027,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 167,
									"end": 1027,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "42"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 8,
									"value": "85"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 8,
									"value": "92"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "tag",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1770,
									"end": 1776,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1804,
									"end": 1809,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1798,
									"end": 1810,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1788,
									"end": 1810,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1788,
									"end": 1810,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1718,
									"end": 1817,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1823,
									"end": 2003,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1823,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1871,
									"end": 1948,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1868,
									"end": 1869,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1861,
									"end": 1949,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1968,
									"end": 1972,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1965,
									"end": 1966,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 1973,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1992,
									"end": 1996,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1989,
									"end": 1990,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1982,
									"end": 1997,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2009,
									"end": 2189,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 2009,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2057,
									"end": 2134,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2047,
									"end": 2135,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2154,
									"end": 2158,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 2151,
									"end": 2152,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2144,
									"end": 2159,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2178,
									"end": 2182,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 2175,
									"end": 2176,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2168,
									"end": 2183,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2239,
									"end": 2245,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2276,
									"end": 2277,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2270,
									"end": 2274,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2266,
									"end": 2278,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2278,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2256,
									"end": 2278,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2323,
									"end": 2324,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2317,
									"end": 2321,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2313,
									"end": 2325,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2344,
									"end": 2362,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 2392,
									"end": 2398,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2388,
									"end": 2405,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2378,
									"end": 2405,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2378,
									"end": 2405,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2462,
									"end": 2464,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2451,
									"end": 2465,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2431,
									"end": 2449,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 2481,
									"end": 2499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2246,
									"end": 2515,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2195,
									"end": 2515,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2570,
									"end": 2574,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2593,
									"end": 2596,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2585,
									"end": 2596,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2585,
									"end": 2596,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2616,
									"end": 2619,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2613,
									"end": 2614,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2606,
									"end": 2620,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2650,
									"end": 2654,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2647,
									"end": 2648,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 2629,
									"end": 2655,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2629,
									"end": 2655,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2521,
									"end": 2662,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2705,
									"end": 2711,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2752,
									"end": 2754,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2747,
									"end": 2749,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2740,
									"end": 2745,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2736,
									"end": 2750,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2732,
									"end": 2755,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 2722,
									"end": 2755,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2722,
									"end": 2755,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2668,
									"end": 2761,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2811,
									"end": 2819,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2861,
									"end": 2866,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2855,
									"end": 2859,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2851,
									"end": 2867,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2830,
									"end": 2867,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2830,
									"end": 2867,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2767,
									"end": 2874,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2949,
									"end": 2955,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2999,
									"end": 3000,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 2987,
									"end": 2997,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2983,
									"end": 3001,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 3052,
									"end": 3118,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3041,
									"end": 3050,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 3022,
									"end": 3119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "tag",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 3170,
									"end": 3178,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 3140,
									"end": 3179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3128,
									"end": 3179,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 3128,
									"end": 3179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3212,
									"end": 3216,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3208,
									"end": 3217,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3201,
									"end": 3206,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3197,
									"end": 3218,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3218,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3188,
									"end": 3218,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3261,
									"end": 3265,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3251,
									"end": 3259,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 3247,
									"end": 3266,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3240,
									"end": 3245,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3237,
									"end": 3267,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2956,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2956,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2880,
									"end": 3273,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3307,
									"end": 3310,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3328,
									"end": 3333,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3321,
									"end": 3333,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3321,
									"end": 3333,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3279,
									"end": 3339,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3395,
									"end": 3404,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 3473,
									"end": 3478,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 3455,
									"end": 3479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "tag",
									"source": 8,
									"value": "111"
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 3446,
									"end": 3480,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "tag",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 3428,
									"end": 3481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "tag",
									"source": 8,
									"value": "109"
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3415,
									"end": 3481,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3415,
									"end": 3481,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3345,
									"end": 3487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3536,
									"end": 3539,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3557,
									"end": 3562,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3550,
									"end": 3562,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3550,
									"end": 3562,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3493,
									"end": 3568,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 3715,
									"end": 3722,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 3684,
									"end": 3723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "tag",
									"source": 8,
									"value": "114"
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 3818,
									"end": 3834,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 3794,
									"end": 3835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "tag",
									"source": 8,
									"value": "116"
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3786,
									"end": 3792,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3779,
									"end": 3783,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3773,
									"end": 3784,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 3745,
									"end": 3836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "tag",
									"source": 8,
									"value": "115"
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3739,
									"end": 3743,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3732,
									"end": 3837,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 3650,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3574,
									"end": 3843,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3894,
									"end": 3897,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3849,
									"end": 3922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 4005,
									"end": 4037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "tag",
									"source": 8,
									"value": "119"
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 4104,
									"end": 4110,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4096,
									"end": 4102,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4090,
									"end": 4094,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 4046,
									"end": 4111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "tag",
									"source": 8,
									"value": "120"
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3981,
									"end": 4117,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3928,
									"end": 4117,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "tag",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4200,
									"end": 4203,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4193,
									"end": 4198,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4190,
									"end": 4204,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 4291,
									"end": 4292,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4284,
									"end": 4289,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 4254,
									"end": 4293,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "tag",
									"source": 8,
									"value": "125"
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4227,
									"end": 4228,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4220,
									"end": 4225,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4216,
									"end": 4229,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4207,
									"end": 4229,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4207,
									"end": 4229,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "122"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "tag",
									"source": 8,
									"value": "124"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4123,
									"end": 4309,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4416,
									"end": 4418,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 4411,
									"end": 4414,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4408,
									"end": 4419,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 4482,
									"end": 4487,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 4450,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "tag",
									"source": 8,
									"value": "128"
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 4552,
									"end": 4562,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 4534,
									"end": 4563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "tag",
									"source": 8,
									"value": "129"
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4524,
									"end": 4532,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4520,
									"end": 4564,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4717,
									"end": 4719,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4705,
									"end": 4715,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4702,
									"end": 4720,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4738,
									"end": 4746,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4723,
									"end": 4746,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4723,
									"end": 4746,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "tag",
									"source": 8,
									"value": "130"
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 4835,
									"end": 4838,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 4817,
									"end": 4839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "tag",
									"source": 8,
									"value": "132"
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4807,
									"end": 4815,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4803,
									"end": 4840,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4790,
									"end": 4801,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 4761,
									"end": 4841,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "tag",
									"source": 8,
									"value": "131"
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4420,
									"end": 4851,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4420,
									"end": 4851,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "tag",
									"source": 8,
									"value": "127"
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4315,
									"end": 4858,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4918,
									"end": 4926,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4968,
									"end": 4973,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4962,
									"end": 4966,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4958,
									"end": 4974,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 4937,
									"end": 4974,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4937,
									"end": 4974,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4864,
									"end": 4981,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "tag",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5031,
									"end": 5037,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 5112,
									"end": 5113,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5108,
									"end": 5114,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5100,
									"end": 5105,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5097,
									"end": 5098,
									"name": "PUSH",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 5093,
									"end": 5106,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 5064,
									"end": 5115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "tag",
									"source": 8,
									"value": "135"
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5060,
									"end": 5116,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 5145,
									"end": 5149,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5139,
									"end": 5143,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5135,
									"end": 5150,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 5125,
									"end": 5150,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5125,
									"end": 5150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5038,
									"end": 5156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4987,
									"end": 5156,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5237,
									"end": 5241,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 5408,
									"end": 5411,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5402,
									"end": 5406,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 5383,
									"end": 5412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "tag",
									"source": 8,
									"value": "137"
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5375,
									"end": 5412,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5375,
									"end": 5412,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5445,
									"end": 5448,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5442,
									"end": 5443,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 5438,
									"end": 5449,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5432,
									"end": 5436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5429,
									"end": 5450,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 5421,
									"end": 5450,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5421,
									"end": 5450,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5161,
									"end": 5456,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 5611,
									"end": 5614,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "49"
								},
								{
									"begin": 5578,
									"end": 5615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "tag",
									"source": 8,
									"value": "139"
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5680,
									"end": 5698,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5672,
									"end": 5678,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5669,
									"end": 5699,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 5702,
									"end": 5720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "tag",
									"source": 8,
									"value": "141"
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "tag",
									"source": 8,
									"value": "140"
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 5778,
									"end": 5782,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5772,
									"end": 5783,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 5746,
									"end": 5784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "tag",
									"source": 8,
									"value": "142"
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 5891,
									"end": 5897,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5883,
									"end": 5889,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5877,
									"end": 5881,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 5831,
									"end": 5898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "tag",
									"source": 8,
									"value": "143"
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5925,
									"end": 5926,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5949,
									"end": 5953,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5936,
									"end": 5953,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5936,
									"end": 5953,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5981,
									"end": 5983,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 5973,
									"end": 5979,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5970,
									"end": 5984,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5998,
									"end": 5999,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6655,
									"end": 6656,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6678,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6721,
									"end": 6730,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6716,
									"end": 6719,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 6712,
									"end": 6731,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6706,
									"end": 6732,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6697,
									"end": 6732,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6697,
									"end": 6732,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "tag",
									"source": 8,
									"value": "146"
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 6832,
									"end": 6838,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 6772,
									"end": 6839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "tag",
									"source": 8,
									"value": "147"
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6766,
									"end": 6770,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6759,
									"end": 6840,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6628,
									"end": 6850,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "tag",
									"source": 8,
									"value": "145"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6045,
									"end": 6049,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6041,
									"end": 6050,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 6033,
									"end": 6039,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6029,
									"end": 6051,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 6111,
									"end": 6115,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 6079,
									"end": 6116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "tag",
									"source": 8,
									"value": "148"
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6138,
									"end": 6139,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "tag",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6166,
									"end": 6173,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6163,
									"end": 6164,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6160,
									"end": 6174,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6245,
									"end": 6254,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6240,
									"end": 6243,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6236,
									"end": 6255,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6230,
									"end": 6256,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6222,
									"end": 6228,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6215,
									"end": 6257,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6296,
									"end": 6297,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6288,
									"end": 6294,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6284,
									"end": 6298,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6274,
									"end": 6298,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6274,
									"end": 6298,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6343,
									"end": 6345,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6332,
									"end": 6341,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 6328,
									"end": 6346,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6315,
									"end": 6346,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 6315,
									"end": 6346,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6189,
									"end": 6193,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6186,
									"end": 6187,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6182,
									"end": 6194,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6177,
									"end": 6194,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 6177,
									"end": 6194,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "149"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "tag",
									"source": 8,
									"value": "151"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6388,
									"end": 6394,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 6379,
									"end": 6386,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6376,
									"end": 6395,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 6446,
									"end": 6455,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 6441,
									"end": 6444,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6437,
									"end": 6456,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6431,
									"end": 6457,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 6531,
									"end": 6535,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 6523,
									"end": 6529,
									"name": "DUP10",
									"source": 8
								},
								{
									"begin": 6519,
									"end": 6536,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6508,
									"end": 6517,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "66"
								},
								{
									"begin": 6489,
									"end": 6537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "tag",
									"source": 8,
									"value": "153"
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6481,
									"end": 6487,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 6474,
									"end": 6538,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6396,
									"end": 6552,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "tag",
									"source": 8,
									"value": "152"
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6598,
									"end": 6599,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 6594,
									"end": 6595,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 6586,
									"end": 6592,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6582,
									"end": 6596,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 6578,
									"end": 6600,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6572,
									"end": 6576,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 6565,
									"end": 6601,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "tag",
									"source": 8,
									"value": "144"
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5461,
									"end": 6856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 6967,
									"end": 6972,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 6949,
									"end": 6973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "tag",
									"source": 8,
									"value": "155"
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6944,
									"end": 6947,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 6937,
									"end": 6974,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6862,
									"end": 6980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "tag",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7079,
									"end": 7083,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7117,
									"end": 7119,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 7106,
									"end": 7115,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7102,
									"end": 7120,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7094,
									"end": 7120,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7094,
									"end": 7120,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 7198,
									"end": 7199,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7187,
									"end": 7196,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7183,
									"end": 7200,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7174,
									"end": 7180,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 7130,
									"end": 7201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "tag",
									"source": 8,
									"value": "157"
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 6986,
									"end": 7208,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7214,
									"end": 7394,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 7214,
									"end": 7394,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7262,
									"end": 7339,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7259,
									"end": 7260,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7252,
									"end": 7340,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7359,
									"end": 7363,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 7356,
									"end": 7357,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 7349,
									"end": 7364,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7383,
									"end": 7387,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 7380,
									"end": 7381,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7373,
									"end": 7388,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7440,
									"end": 7443,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7459,
									"end": 7479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 7477,
									"end": 7478,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7459,
									"end": 7479,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 7459,
									"end": 7479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7459,
									"end": 7479,
									"name": "tag",
									"source": 8,
									"value": "160"
								},
								{
									"begin": 7459,
									"end": 7479,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7454,
									"end": 7479,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7454,
									"end": 7479,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7493,
									"end": 7513,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 7511,
									"end": 7512,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7493,
									"end": 7513,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 7493,
									"end": 7513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7493,
									"end": 7513,
									"name": "tag",
									"source": 8,
									"value": "161"
								},
								{
									"begin": 7493,
									"end": 7513,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7488,
									"end": 7513,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7488,
									"end": 7513,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7536,
									"end": 7537,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7533,
									"end": 7534,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7529,
									"end": 7538,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7522,
									"end": 7538,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7522,
									"end": 7538,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7557,
									"end": 7560,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 7554,
									"end": 7555,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7551,
									"end": 7561,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 7564,
									"end": 7582,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 7564,
									"end": 7582,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 7564,
									"end": 7582,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7564,
									"end": 7582,
									"name": "tag",
									"source": 8,
									"value": "163"
								},
								{
									"begin": 7564,
									"end": 7582,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "tag",
									"source": 8,
									"value": "162"
								},
								{
									"begin": 7548,
									"end": 7584,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7400,
									"end": 7591,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7597,
									"end": 7715,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 7597,
									"end": 7715,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 7702,
									"end": 7707,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 7684,
									"end": 7708,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "tag",
									"source": 8,
									"value": "165"
								},
								{
									"begin": 7684,
									"end": 7708,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7679,
									"end": 7682,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7672,
									"end": 7709,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 7597,
									"end": 7715,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7597,
									"end": 7715,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7597,
									"end": 7715,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7870,
									"end": 7874,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7908,
									"end": 7910,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 7897,
									"end": 7906,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 7893,
									"end": 7911,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7885,
									"end": 7911,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 7885,
									"end": 7911,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7921,
									"end": 7992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 7989,
									"end": 7990,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 7978,
									"end": 7987,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 7974,
									"end": 7991,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7965,
									"end": 7971,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 7921,
									"end": 7992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 7921,
									"end": 7992,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7921,
									"end": 7992,
									"name": "tag",
									"source": 8,
									"value": "167"
								},
								{
									"begin": 7921,
									"end": 7992,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8002,
									"end": 8074,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 8070,
									"end": 8072,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8059,
									"end": 8068,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8055,
									"end": 8073,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8046,
									"end": 8052,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 8002,
									"end": 8074,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 8002,
									"end": 8074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8002,
									"end": 8074,
									"name": "tag",
									"source": 8,
									"value": "168"
								},
								{
									"begin": 8002,
									"end": 8074,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8084,
									"end": 8156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 8152,
									"end": 8154,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 8141,
									"end": 8150,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8137,
									"end": 8155,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8128,
									"end": 8134,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8084,
									"end": 8156,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 8084,
									"end": 8156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8084,
									"end": 8156,
									"name": "tag",
									"source": 8,
									"value": "169"
								},
								{
									"begin": 8084,
									"end": 8156,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 7721,
									"end": 8163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8262,
									"end": 8266,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8300,
									"end": 8302,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 8289,
									"end": 8298,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 8285,
									"end": 8303,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8277,
									"end": 8303,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 8277,
									"end": 8303,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8313,
									"end": 8384,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 8381,
									"end": 8382,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 8370,
									"end": 8379,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 8366,
									"end": 8383,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 8357,
									"end": 8363,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 8313,
									"end": 8384,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 8313,
									"end": 8384,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 8313,
									"end": 8384,
									"name": "tag",
									"source": 8,
									"value": "171"
								},
								{
									"begin": 8313,
									"end": 8384,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 8169,
									"end": 8391,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 167,
									"end": 1027,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 167,
									"end": 1027,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1027,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 1027,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1027,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 167,
									"end": 1027,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1027,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 167,
									"end": 1027,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 167,
									"end": 1027,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122072812d813afda4ad2c3f8a8fc7898fab9d89aba12703abec276db8dac9c9b45664736f6c634300081a0033",
									".code": [
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "42966C68"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 1027,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 642,
											"end": 770,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 642,
											"end": 770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 642,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 642,
											"end": 770,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 642,
											"end": 770,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 642,
											"end": 770,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 642,
											"end": 770,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 642,
											"end": 770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 642,
											"end": 770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 642,
											"end": 770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 642,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 642,
											"end": 770,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 642,
											"end": 770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 642,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 642,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 642,
											"end": 770,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 642,
											"end": 770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 642,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 642,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 642,
											"end": 770,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 642,
											"end": 770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 642,
											"end": 770,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 821,
											"end": 1025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 821,
											"end": 1025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 642,
											"end": 770,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 642,
											"end": 770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 713,
											"end": 730,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 719,
											"end": 721,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 723,
											"end": 729,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 713,
											"end": 718,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 713,
											"end": 730,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 713,
											"end": 730,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 713,
											"end": 730,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 752,
											"end": 754,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 745,
											"end": 763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 745,
											"end": 763,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 745,
											"end": 763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "30385C845B448A36257A6A1716E6AD2E1BC2CBE333CDE1E69FE849AD6511ADFE"
										},
										{
											"begin": 756,
											"end": 762,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 745,
											"end": 763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 763,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 745,
											"end": 763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 745,
											"end": 763,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 745,
											"end": 763,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 745,
											"end": 763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 745,
											"end": 763,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 745,
											"end": 763,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 745,
											"end": 763,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 745,
											"end": 763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 763,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 745,
											"end": 763,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 745,
											"end": 763,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 745,
											"end": 763,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 745,
											"end": 763,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 745,
											"end": 763,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 642,
											"end": 770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 642,
											"end": 770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 642,
											"end": 770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 878,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 888,
											"end": 898,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 878,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 878,
											"end": 899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 878,
											"end": 899,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 878,
											"end": 899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 878,
											"end": 909,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 878,
											"end": 909,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 870,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 870,
											"end": 942,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 870,
											"end": 942,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 942,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 870,
											"end": 942,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 870,
											"end": 942,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 870,
											"end": 942,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 870,
											"end": 942,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 870,
											"end": 942,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 870,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 870,
											"end": 942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 870,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 870,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 870,
											"end": 942,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 870,
											"end": 942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 870,
											"end": 942,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 942,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 870,
											"end": 942,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 870,
											"end": 942,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 870,
											"end": 942,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 870,
											"end": 942,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 870,
											"end": 942,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 870,
											"end": 942,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 870,
											"end": 942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 958,
											"end": 968,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 970,
											"end": 976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 952,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 952,
											"end": 977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 952,
											"end": 977,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 999,
											"end": 1009,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1018,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 992,
											"end": 1018,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1018,
											"name": "PUSH",
											"source": 7,
											"value": "696DE425F79F4A40BC6D2122CA50507F0EFBEABBFF86A84871B7196AB8EA8DF7"
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1018,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1018,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 992,
											"end": 1018,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1018,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 992,
											"end": 1018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1018,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 992,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1018,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 992,
											"end": 1018,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1018,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1018,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1018,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1018,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 992,
											"end": 1018,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 821,
											"end": 1025,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 821,
											"end": 1025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5189,
											"end": 5191,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5186,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5168,
											"end": 5175,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5164,
											"end": 5187,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5160,
											"end": 5192,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 5195,
											"end": 5274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 5195,
											"end": 5274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 5157,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5385,
											"end": 5392,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5365,
											"end": 5374,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5361,
											"end": 5383,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 5340,
											"end": 5393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5340,
											"end": 5393,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5330,
											"end": 5393,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5286,
											"end": 5403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5081,
											"end": 5410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 5521,
											"end": 5526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 5503,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 5503,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5491,
											"end": 5528,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5416,
											"end": 5534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5633,
											"end": 5637,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5656,
											"end": 5674,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5648,
											"end": 5674,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 5752,
											"end": 5753,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5750,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5737,
											"end": 5754,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 5684,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 5684,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5540,
											"end": 5762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5850,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5879,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5868,
											"end": 5891,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5864,
											"end": 5896,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 5899,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 5899,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 5861,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6019,
											"end": 6020,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 6089,
											"end": 6096,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6080,
											"end": 6086,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6069,
											"end": 6078,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6065,
											"end": 6087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 6044,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 6044,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6034,
											"end": 6097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5990,
											"end": 6107,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 6217,
											"end": 6224,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6197,
											"end": 6206,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6193,
											"end": 6215,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 6172,
											"end": 6225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 6172,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6162,
											"end": 6225,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6117,
											"end": 6235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 6248,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6296,
											"end": 6373,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6293,
											"end": 6294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6286,
											"end": 6374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6397,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6383,
											"end": 6398,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6421,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6414,
											"end": 6415,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6407,
											"end": 6422,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6478,
											"end": 6484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6495,
											"end": 6517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6562,
											"end": 6563,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6552,
											"end": 6564,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6583,
											"end": 6601,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6639,
											"end": 6643,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 6631,
											"end": 6637,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6627,
											"end": 6644,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6617,
											"end": 6644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 6573,
											"end": 6654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6701,
											"end": 6703,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6699,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6690,
											"end": 6704,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6670,
											"end": 6688,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6705,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 6720,
											"end": 6738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 6720,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 6664,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6485,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6434,
											"end": 6754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6938,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 6760,
											"end": 6938,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6900,
											"end": 6930,
											"name": "PUSH",
											"source": 8,
											"value": "496E73756666696369656E742062616C616E636520746F206275726E00000000"
										},
										{
											"begin": 6896,
											"end": 6897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6894,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6884,
											"end": 6898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6877,
											"end": 6931,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6938,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6760,
											"end": 6938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6944,
											"end": 7310,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 6944,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7086,
											"end": 7089,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7107,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 7171,
											"end": 7173,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 7166,
											"end": 7169,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7107,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 7107,
											"end": 7174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7107,
											"end": 7174,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 7107,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7174,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7100,
											"end": 7174,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 7272,
											"end": 7275,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 7183,
											"end": 7276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 7183,
											"end": 7276,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7301,
											"end": 7303,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7296,
											"end": 7299,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7292,
											"end": 7304,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7285,
											"end": 7304,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7285,
											"end": 7304,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6944,
											"end": 7310,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6944,
											"end": 7310,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6944,
											"end": 7310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6944,
											"end": 7310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7316,
											"end": 7735,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 7316,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7482,
											"end": 7486,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7520,
											"end": 7522,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7509,
											"end": 7518,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7505,
											"end": 7523,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7497,
											"end": 7523,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7497,
											"end": 7523,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7569,
											"end": 7578,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7563,
											"end": 7567,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7559,
											"end": 7579,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7555,
											"end": 7556,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7553,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7540,
											"end": 7557,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7533,
											"end": 7580,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7597,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 7723,
											"end": 7727,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7597,
											"end": 7728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 7597,
											"end": 7728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7597,
											"end": 7728,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 7597,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7589,
											"end": 7728,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7589,
											"end": 7728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7316,
											"end": 7735,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7316,
											"end": 7735,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7316,
											"end": 7735,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7316,
											"end": 7735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7741,
											"end": 8183,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 7741,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7890,
											"end": 7894,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7928,
											"end": 7930,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7917,
											"end": 7926,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7913,
											"end": 7931,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7905,
											"end": 7931,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7905,
											"end": 7931,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7941,
											"end": 8012,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 8009,
											"end": 8010,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7998,
											"end": 8007,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7994,
											"end": 8011,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7985,
											"end": 7991,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7941,
											"end": 8012,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 7941,
											"end": 8012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7941,
											"end": 8012,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 7941,
											"end": 8012,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8022,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 8090,
											"end": 8092,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8079,
											"end": 8088,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8075,
											"end": 8093,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8066,
											"end": 8072,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8022,
											"end": 8094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 8022,
											"end": 8094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8022,
											"end": 8094,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 8022,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8104,
											"end": 8176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 8172,
											"end": 8174,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8161,
											"end": 8170,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8157,
											"end": 8175,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8148,
											"end": 8154,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8104,
											"end": 8176,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 8104,
											"end": 8176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8104,
											"end": 8176,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 8104,
											"end": 8176,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7741,
											"end": 8183,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7741,
											"end": 8183,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7741,
											"end": 8183,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7741,
											"end": 8183,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7741,
											"end": 8183,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7741,
											"end": 8183,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7741,
											"end": 8183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8189,
											"end": 8369,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 8189,
											"end": 8369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8237,
											"end": 8314,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8234,
											"end": 8235,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8227,
											"end": 8315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8334,
											"end": 8338,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 8331,
											"end": 8332,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8324,
											"end": 8339,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8358,
											"end": 8362,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8355,
											"end": 8356,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8348,
											"end": 8363,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8566,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 8375,
											"end": 8566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8415,
											"end": 8418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8434,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 8452,
											"end": 8453,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8434,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 8434,
											"end": 8454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8434,
											"end": 8454,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 8434,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8429,
											"end": 8454,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8429,
											"end": 8454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8468,
											"end": 8488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 8486,
											"end": 8487,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8468,
											"end": 8488,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 8468,
											"end": 8488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8468,
											"end": 8488,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 8468,
											"end": 8488,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8463,
											"end": 8488,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8463,
											"end": 8488,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8511,
											"end": 8512,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8508,
											"end": 8509,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8504,
											"end": 8513,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8513,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8497,
											"end": 8513,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8535,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8529,
											"end": 8530,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8526,
											"end": 8536,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8523,
											"end": 8559,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8523,
											"end": 8559,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 8523,
											"end": 8559,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8539,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 8539,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 8539,
											"end": 8557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8539,
											"end": 8557,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 8539,
											"end": 8557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8523,
											"end": 8559,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 8523,
											"end": 8559,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8566,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8566,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8566,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8375,
											"end": 8566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Lockup.sol",
								"contracts/Reputify.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Reputify.sol\":\"Reputify\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Reputify.sol\":{\"keccak256\":\"0x9d7e0558aeeae90b756f2342801bcd581aab22677d4ec1f53810c78ac77d2fbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9320d74dc40f4d48afc1c4d7cba1bc9a5e586e52220405dcbd7d3895f28dfacd\",\"dweb:/ipfs/QmYwzCy6WGsDTEo4kgzq3UTzbCmJFznDTf7jPo4vfHzUAd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/Reputify.sol:Reputify",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/Reputify.sol:Reputify",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/Reputify.sol:Reputify",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/Reputify.sol:Reputify",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/Reputify.sol:Reputify",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/Reputify.sol:Reputify",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/Lockup.sol": {
				"ast": {
					"absolutePath": "contracts/Lockup.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"Reputify": [
							1510
						],
						"StakingContract": [
							1421
						]
					},
					"id": 1422,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1422,
							"sourceUnit": 148,
							"src": "60:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Reputify.sol",
							"file": "./Reputify.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1422,
							"sourceUnit": 1511,
							"src": "114:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "Ownable",
										"nameLocations": [
											"208:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "208:7:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "208:7:6"
								}
							],
							"canonicalName": "StakingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1421,
							"linearizedBaseContracts": [
								1421,
								147,
								933
							],
							"name": "StakingContract",
							"nameLocation": "189:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StakingContract.Stake",
									"id": 946,
									"members": [
										{
											"constant": false,
											"id": 941,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "255:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 946,
											"src": "247:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 940,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "247:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 943,
											"mutability": "mutable",
											"name": "isPositive",
											"nameLocation": "277:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 946,
											"src": "272:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 942,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "272:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 945,
											"mutability": "mutable",
											"name": "postId",
											"nameLocation": "357:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 946,
											"src": "350:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 944,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "350:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "230:5:6",
									"nodeType": "StructDefinition",
									"scope": 1421,
									"src": "223:197:6",
									"visibility": "public"
								},
								{
									"canonicalName": "StakingContract.Post",
									"id": 958,
									"members": [
										{
											"constant": false,
											"id": 948,
											"mutability": "mutable",
											"name": "originalPoster",
											"nameLocation": "459:14:6",
											"nodeType": "VariableDeclaration",
											"scope": 958,
											"src": "451:22:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 947,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "451:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 950,
											"mutability": "mutable",
											"name": "totalStaked",
											"nameLocation": "526:11:6",
											"nodeType": "VariableDeclaration",
											"scope": 958,
											"src": "518:19:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 949,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "518:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 952,
											"mutability": "mutable",
											"name": "totalPositiveStake",
											"nameLocation": "593:18:6",
											"nodeType": "VariableDeclaration",
											"scope": 958,
											"src": "585:26:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 951,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "585:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 954,
											"mutability": "mutable",
											"name": "totalNegativeStake",
											"nameLocation": "668:18:6",
											"nodeType": "VariableDeclaration",
											"scope": 958,
											"src": "660:26:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 953,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "660:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 957,
											"mutability": "mutable",
											"name": "stakers",
											"nameLocation": "745:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 958,
											"src": "735:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "735:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 956,
												"nodeType": "ArrayTypeName",
												"src": "735:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Post",
									"nameLocation": "435:4:6",
									"nodeType": "StructDefinition",
									"scope": 1421,
									"src": "428:370:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 961,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "822:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1421,
									"src": "806:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Reputify_$1510",
										"typeString": "contract Reputify"
									},
									"typeName": {
										"id": 960,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 959,
											"name": "Reputify",
											"nameLocations": [
												"806:8:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1510,
											"src": "806:8:6"
										},
										"referencedDeclaration": 1510,
										"src": "806:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Reputify_$1510",
											"typeString": "contract Reputify"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 966,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "912:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1421,
									"src": "879:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$946_storage_$",
										"typeString": "mapping(address => struct StakingContract.Stake)"
									},
									"typeName": {
										"id": 965,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 962,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "887:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "879:25:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$946_storage_$",
											"typeString": "mapping(address => struct StakingContract.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 964,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 963,
												"name": "Stake",
												"nameLocations": [
													"898:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 946,
												"src": "898:5:6"
											},
											"referencedDeclaration": 946,
											"src": "898:5:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$946_storage_ptr",
												"typeString": "struct StakingContract.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f8300fca",
									"id": 971,
									"mutability": "mutable",
									"name": "posts",
									"nameLocation": "956:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1421,
									"src": "925:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Post_$958_storage_$",
										"typeString": "mapping(string => struct StakingContract.Post)"
									},
									"typeName": {
										"id": 970,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 967,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "933:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "925:23:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Post_$958_storage_$",
											"typeString": "mapping(string => struct StakingContract.Post)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 969,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 968,
												"name": "Post",
												"nameLocations": [
													"943:4:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 958,
												"src": "943:4:6"
											},
											"referencedDeclaration": 958,
											"src": "943:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
												"typeString": "struct StakingContract.Post"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "56e5c3a64ee1d63cc76545ae78b97f7bb9e3f402463f7f9f86428f5154fc5eaf",
									"id": 981,
									"name": "Staked",
									"nameLocation": "1008:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1031:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1015:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1045:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1037:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1037:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"indexed": false,
												"mutability": "mutable",
												"name": "isPositive",
												"nameLocation": "1058:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1053:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 976,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1053:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"indexed": false,
												"mutability": "mutable",
												"name": "postId",
												"nameLocation": "1077:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1070:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 978,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:70:6"
									},
									"src": "1002:83:6"
								},
								{
									"anonymous": false,
									"eventSelector": "7fc4727e062e336010f2c282598ef5f14facb3de68cf8195c2f23e1454b2b74e",
									"id": 989,
									"name": "Unstaked",
									"nameLocation": "1097:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1122:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1106:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1106:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1136:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1128:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1152:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "1144:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1105:54:6"
									},
									"src": "1091:69:6"
								},
								{
									"anonymous": false,
									"eventSelector": "e2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486",
									"id": 995,
									"name": "RewardPaid",
									"nameLocation": "1172:10:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1199:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1183:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1213:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1205:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1182:38:6"
									},
									"src": "1166:55:6"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "1307:104:6",
										"statements": [
											{
												"expression": {
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1005,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "1318:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Reputify_$1510",
															"typeString": "contract Reputify"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1007,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "1335:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1006,
															"name": "Reputify",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "1326:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Reputify_$1510_$",
																"typeString": "type(contract Reputify)"
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1326:22:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Reputify_$1510",
															"typeString": "contract Reputify"
														}
													},
													"src": "1318:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Reputify_$1510",
														"typeString": "contract Reputify"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "1318:30:6"
											}
										]
									},
									"id": 1012,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1002,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 999,
													"src": "1293:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1003,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1001,
												"name": "Ownable",
												"nameLocations": [
													"1285:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1285:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1285:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "1249:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "1241:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1271:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "1263:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:44:6"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1307:0:6"
									},
									"scope": 1421,
									"src": "1229:182:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "1533:1093:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1022,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "1552:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1561:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1552:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1564:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 1021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1544:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1544:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "1544:37:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1031,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1616:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1620:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1616:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1029,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "1600:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Reputify_$1510",
																			"typeString": "contract Reputify"
																		}
																	},
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1606:9:6",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 385,
																	"src": "1600:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1600:27:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1034,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "1631:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1600:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1639:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1028,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1592:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1592:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "1592:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1042,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1697:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1701:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1697:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1046,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1717:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_StakingContract_$1421",
																					"typeString": "contract StakingContract"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_StakingContract_$1421",
																					"typeString": "contract StakingContract"
																				}
																			],
																			"id": 1045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1709:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1044,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1709:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1709:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1040,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "1681:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Reputify_$1510",
																			"typeString": "contract Reputify"
																		}
																	},
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1687:9:6",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 426,
																	"src": "1681:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1681:42:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1049,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "1727:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1681:52:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e7472616374206e6f7420617070726f76656420746f207472616e7366657220746f6b656e73",
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1735:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98e81edf2b3f4fbb6d9b4dff4c46bf609d7be7b570e06ad4fbf58eced840fe4b",
																"typeString": "literal_string \"Contract not approved to transfer tokens\""
															},
															"value": "Contract not approved to transfer tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98e81edf2b3f4fbb6d9b4dff4c46bf609d7be7b570e06ad4fbf58eced840fe4b",
																"typeString": "literal_string \"Contract not approved to transfer tokens\""
															}
														],
														"id": 1039,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1673:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1673:105:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "1673:105:6"
											},
											{
												"assignments": [
													1056
												],
												"declarations": [
													{
														"constant": false,
														"id": 1056,
														"mutability": "mutable",
														"name": "post",
														"nameLocation": "1804:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1142,
														"src": "1791:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
															"typeString": "struct StakingContract.Post"
														},
														"typeName": {
															"id": 1055,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1054,
																"name": "Post",
																"nameLocations": [
																	"1791:4:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 958,
																"src": "1791:4:6"
															},
															"referencedDeclaration": 958,
															"src": "1791:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																"typeString": "struct StakingContract.Post"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1060,
												"initialValue": {
													"baseExpression": {
														"id": 1057,
														"name": "posts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "1811:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Post_$958_storage_$",
															"typeString": "mapping(string memory => struct StakingContract.Post storage ref)"
														}
													},
													"id": 1059,
													"indexExpression": {
														"id": 1058,
														"name": "postId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "1817:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1811:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Post_$958_storage",
														"typeString": "struct StakingContract.Post storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1791:33:6"
											},
											{
												"assignments": [
													1062
												],
												"declarations": [
													{
														"constant": false,
														"id": 1062,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1901:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1142,
														"src": "1896:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1061,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1896:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1073,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1065,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1930:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1934:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1930:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1069,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1950:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$1421",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$1421",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1942:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1067,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1942:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1942:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1071,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "1957:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1063,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "1911:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Reputify_$1510",
																"typeString": "contract Reputify"
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1917:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "1911:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1911:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1896:68:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1075,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "1983:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1992:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 1074,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1975:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1975:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "1975:41:6"
											},
											{
												"expression": {
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1079,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "2065:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$946_storage_$",
																"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
															}
														},
														"id": 1082,
														"indexExpression": {
															"expression": {
																"id": 1080,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2072:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2076:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2072:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2065:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$946_storage",
															"typeString": "struct StakingContract.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1084,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "2092:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1085,
																"name": "isPositive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "2100:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 1086,
																"name": "postId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1018,
																"src": "2112:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 1083,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "2086:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$946_storage_ptr_$",
																"typeString": "type(struct StakingContract.Stake storage pointer)"
															}
														},
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2086:33:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$946_memory_ptr",
															"typeString": "struct StakingContract.Stake memory"
														}
													},
													"src": "2065:54:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$946_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "2065:54:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1090,
															"name": "post",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "2178:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																"typeString": "struct StakingContract.Post storage pointer"
															}
														},
														"id": 1091,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2183:11:6",
														"memberName": "totalStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 950,
														"src": "2178:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2198:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2178:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1102,
												"nodeType": "IfStatement",
												"src": "2174:128:6",
												"trueBody": {
													"id": 1101,
													"nodeType": "Block",
													"src": "2201:101:6",
													"statements": [
														{
															"expression": {
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1094,
																		"name": "post",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1056,
																		"src": "2216:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																			"typeString": "struct StakingContract.Post storage pointer"
																		}
																	},
																	"id": 1096,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2221:14:6",
																	"memberName": "originalPoster",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 948,
																	"src": "2216:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1097,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2238:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2242:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2238:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2216:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1100,
															"nodeType": "ExpressionStatement",
															"src": "2216:32:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1103,
															"name": "post",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "2314:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																"typeString": "struct StakingContract.Post storage pointer"
															}
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2319:11:6",
														"memberName": "totalStaked",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 950,
														"src": "2314:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1106,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "2334:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2314:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "2314:26:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1114,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2369:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2373:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2369:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1109,
																"name": "post",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "2351:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																	"typeString": "struct StakingContract.Post storage pointer"
																}
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2356:7:6",
															"memberName": "stakers",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 957,
															"src": "2351:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2364:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2351:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2351:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "2351:29:6"
											},
											{
												"condition": {
													"id": 1118,
													"name": "isPositive",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1016,
													"src": "2417:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1132,
													"nodeType": "Block",
													"src": "2495:60:6",
													"statements": [
														{
															"expression": {
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1126,
																		"name": "post",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1056,
																		"src": "2510:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																			"typeString": "struct StakingContract.Post storage pointer"
																		}
																	},
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2515:18:6",
																	"memberName": "totalNegativeStake",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 954,
																	"src": "2510:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1129,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "2537:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2510:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1131,
															"nodeType": "ExpressionStatement",
															"src": "2510:33:6"
														}
													]
												},
												"id": 1133,
												"nodeType": "IfStatement",
												"src": "2413:142:6",
												"trueBody": {
													"id": 1125,
													"nodeType": "Block",
													"src": "2429:60:6",
													"statements": [
														{
															"expression": {
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1119,
																		"name": "post",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1056,
																		"src": "2444:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																			"typeString": "struct StakingContract.Post storage pointer"
																		}
																	},
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2449:18:6",
																	"memberName": "totalPositiveStake",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 952,
																	"src": "2444:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1122,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "2471:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2444:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1124,
															"nodeType": "ExpressionStatement",
															"src": "2444:33:6"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1135,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2579:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2583:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2579:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1137,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "2591:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1138,
															"name": "isPositive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "2599:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1139,
															"name": "postId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "2611:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1134,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "2572:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bool,string memory)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2572:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1141,
												"nodeType": "EmitStatement",
												"src": "2567:51:6"
											}
										]
									},
									"functionSelector": "c0497ac8",
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1463:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1477:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1469:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "isPositive",
												"nameLocation": "1490:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1485:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1015,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1485:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "postId",
												"nameLocation": "1516:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1502:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1017,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1502:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:55:6"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1533:0:6"
									},
									"scope": 1421,
									"src": "1454:1172:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "2747:2767:6",
										"statements": [
											{
												"assignments": [
													1152
												],
												"declarations": [
													{
														"constant": false,
														"id": 1152,
														"mutability": "mutable",
														"name": "userStake",
														"nameLocation": "2771:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1419,
														"src": "2758:22:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$946_memory_ptr",
															"typeString": "struct StakingContract.Stake"
														},
														"typeName": {
															"id": 1151,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1150,
																"name": "Stake",
																"nameLocations": [
																	"2758:5:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 946,
																"src": "2758:5:6"
															},
															"referencedDeclaration": 946,
															"src": "2758:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$946_storage_ptr",
																"typeString": "struct StakingContract.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1157,
												"initialValue": {
													"baseExpression": {
														"id": 1153,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "2783:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$946_storage_$",
															"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
														}
													},
													"id": 1156,
													"indexExpression": {
														"expression": {
															"id": 1154,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2790:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2794:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2790:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2783:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$946_storage",
														"typeString": "struct StakingContract.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2758:43:6"
											},
											{
												"assignments": [
													1160
												],
												"declarations": [
													{
														"constant": false,
														"id": 1160,
														"mutability": "mutable",
														"name": "post",
														"nameLocation": "2825:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1419,
														"src": "2812:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
															"typeString": "struct StakingContract.Post"
														},
														"typeName": {
															"id": 1159,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1158,
																"name": "Post",
																"nameLocations": [
																	"2812:4:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 958,
																"src": "2812:4:6"
															},
															"referencedDeclaration": 958,
															"src": "2812:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																"typeString": "struct StakingContract.Post"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1164,
												"initialValue": {
													"baseExpression": {
														"id": 1161,
														"name": "posts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "2832:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_Post_$958_storage_$",
															"typeString": "mapping(string memory => struct StakingContract.Post storage ref)"
														}
													},
													"id": 1163,
													"indexExpression": {
														"id": 1162,
														"name": "postId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "2838:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2832:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Post_$958_storage",
														"typeString": "struct StakingContract.Post storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:33:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1166,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "2866:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$946_memory_ptr",
																		"typeString": "struct StakingContract.Stake memory"
																	}
																},
																"id": 1167,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2876:6:6",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 941,
																"src": "2866:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2885:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2866:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207374616b6520666f756e64",
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2888:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															},
															"value": "No stake found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															}
														],
														"id": 1165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2858:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2858:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "2858:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1177,
																					"name": "userStake",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1152,
																					"src": "2940:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$946_memory_ptr",
																						"typeString": "struct StakingContract.Stake memory"
																					}
																				},
																				"id": 1178,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2950:6:6",
																				"memberName": "postId",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 945,
																				"src": "2940:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2934:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																				"typeString": "type(bytes storage pointer)"
																			},
																			"typeName": {
																				"id": 1175,
																				"name": "bytes",
																				"nodeType": "ElementaryTypeName",
																				"src": "2934:5:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2934:23:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1174,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2924:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2924:34:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1184,
																				"name": "postId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1147,
																				"src": "2978:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"id": 1183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2972:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																				"typeString": "type(bytes storage pointer)"
																			},
																			"typeName": {
																				"id": 1182,
																				"name": "bytes",
																				"nodeType": "ElementaryTypeName",
																				"src": "2972:5:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2972:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1181,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "2962:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2962:24:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "2924:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f7374204944206d69736d61746368",
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2988:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_205c9abf3277d6f6ea53f405a0c4521e2370e038cb4c792c2a133737d9f8b562",
																"typeString": "literal_string \"Post ID mismatch\""
															},
															"value": "Post ID mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_205c9abf3277d6f6ea53f405a0c4521e2370e038cb4c792c2a133737d9f8b562",
																"typeString": "literal_string \"Post ID mismatch\""
															}
														],
														"id": 1173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2916:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2916:91:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "2916:91:6"
											},
											{
												"assignments": [
													1192
												],
												"declarations": [
													{
														"constant": false,
														"id": 1192,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3028:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1419,
														"src": "3020:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1191,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3020:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1194,
												"initialValue": {
													"hexValue": "30",
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3037:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3020:18:6"
											},
											{
												"condition": {
													"id": 1195,
													"name": "predictionOutcome",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1145,
													"src": "3055:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1384,
													"nodeType": "Block",
													"src": "4053:1109:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1283,
																			"name": "post",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1160,
																			"src": "4123:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																				"typeString": "struct StakingContract.Post storage pointer"
																			}
																		},
																		"id": 1284,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4128:14:6",
																		"memberName": "originalPoster",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 948,
																		"src": "4123:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4144:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 1280,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "4108:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Reputify_$1510",
																			"typeString": "contract Reputify"
																		}
																	},
																	"id": 1282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4114:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 409,
																	"src": "4108:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4108:38:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1287,
															"nodeType": "ExpressionStatement",
															"src": "4108:38:6"
														},
														{
															"body": {
																"id": 1325,
																"nodeType": "Block",
																"src": "4301:279:6",
																"statements": [
																	{
																		"assignments": [
																			1301
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1301,
																				"mutability": "mutable",
																				"name": "stakerAddress",
																				"nameLocation": "4328:13:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1325,
																				"src": "4320:21:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"typeName": {
																					"id": 1300,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4320:7:6",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1306,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 1302,
																					"name": "post",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1160,
																					"src": "4344:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																						"typeString": "struct StakingContract.Post storage pointer"
																					}
																				},
																				"id": 1303,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4349:7:6",
																				"memberName": "stakers",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 957,
																				"src": "4344:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 1305,
																			"indexExpression": {
																				"id": 1304,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1289,
																				"src": "4357:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4344:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4320:39:6"
																	},
																	{
																		"assignments": [
																			1309
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1309,
																				"mutability": "mutable",
																				"name": "stakeInfo",
																				"nameLocation": "4391:9:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1325,
																				"src": "4378:22:6",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$946_memory_ptr",
																					"typeString": "struct StakingContract.Stake"
																				},
																				"typeName": {
																					"id": 1308,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1307,
																						"name": "Stake",
																						"nameLocations": [
																							"4378:5:6"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 946,
																						"src": "4378:5:6"
																					},
																					"referencedDeclaration": 946,
																					"src": "4378:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$946_storage_ptr",
																						"typeString": "struct StakingContract.Stake"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1313,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1310,
																				"name": "stakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 966,
																				"src": "4403:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$946_storage_$",
																					"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
																				}
																			},
																			"id": 1312,
																			"indexExpression": {
																				"id": 1311,
																				"name": "stakerAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1301,
																				"src": "4410:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4403:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$946_storage",
																				"typeString": "struct StakingContract.Stake storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4378:46:6"
																	},
																	{
																		"condition": {
																			"expression": {
																				"id": 1314,
																				"name": "stakeInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1309,
																				"src": "4447:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$946_memory_ptr",
																					"typeString": "struct StakingContract.Stake memory"
																				}
																			},
																			"id": 1315,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4457:10:6",
																			"memberName": "isPositive",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 943,
																			"src": "4447:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1324,
																		"nodeType": "IfStatement",
																		"src": "4443:122:6",
																		"trueBody": {
																			"id": 1323,
																			"nodeType": "Block",
																			"src": "4469:96:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1319,
																								"name": "stakerAddress",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1301,
																								"src": "4507:13:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"hexValue": "30",
																								"id": 1320,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4522:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								}
																							],
																							"expression": {
																								"id": 1316,
																								"name": "token",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 961,
																								"src": "4492:5:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Reputify_$1510",
																									"typeString": "contract Reputify"
																								}
																							},
																							"id": 1318,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4498:8:6",
																							"memberName": "transfer",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 409,
																							"src": "4492:14:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																								"typeString": "function (address,uint256) external returns (bool)"
																							}
																						},
																						"id": 1321,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4492:32:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1322,
																					"nodeType": "ExpressionStatement",
																					"src": "4492:32:6"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1292,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "4271:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 1293,
																			"name": "post",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1160,
																			"src": "4275:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																				"typeString": "struct StakingContract.Post storage pointer"
																			}
																		},
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4280:7:6",
																		"memberName": "stakers",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "4275:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4288:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4275:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4271:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1326,
															"initializationExpression": {
																"assignments": [
																	1289
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1289,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "4264:1:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 1326,
																		"src": "4256:9:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1288,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4256:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1291,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4268:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "4256:13:6"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "4296:3:6",
																	"subExpression": {
																		"id": 1297,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1289,
																		"src": "4296:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1299,
																"nodeType": "ExpressionStatement",
																"src": "4296:3:6"
															},
															"nodeType": "ForStatement",
															"src": "4251:329:6"
														},
														{
															"body": {
																"id": 1382,
																"nodeType": "Block",
																"src": "4698:453:6",
																"statements": [
																	{
																		"assignments": [
																			1340
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1340,
																				"mutability": "mutable",
																				"name": "stakerAddress",
																				"nameLocation": "4725:13:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1382,
																				"src": "4717:21:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"typeName": {
																					"id": 1339,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "4717:7:6",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1345,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 1341,
																					"name": "post",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1160,
																					"src": "4741:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																						"typeString": "struct StakingContract.Post storage pointer"
																					}
																				},
																				"id": 1342,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4746:7:6",
																				"memberName": "stakers",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 957,
																				"src": "4741:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 1344,
																			"indexExpression": {
																				"id": 1343,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1328,
																				"src": "4754:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4741:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4717:39:6"
																	},
																	{
																		"assignments": [
																			1348
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1348,
																				"mutability": "mutable",
																				"name": "stakeInfo",
																				"nameLocation": "4788:9:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1382,
																				"src": "4775:22:6",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$946_memory_ptr",
																					"typeString": "struct StakingContract.Stake"
																				},
																				"typeName": {
																					"id": 1347,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1346,
																						"name": "Stake",
																						"nameLocations": [
																							"4775:5:6"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 946,
																						"src": "4775:5:6"
																					},
																					"referencedDeclaration": 946,
																					"src": "4775:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$946_storage_ptr",
																						"typeString": "struct StakingContract.Stake"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1352,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1349,
																				"name": "stakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 966,
																				"src": "4800:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$946_storage_$",
																					"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
																				}
																			},
																			"id": 1351,
																			"indexExpression": {
																				"id": 1350,
																				"name": "stakerAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1340,
																				"src": "4807:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4800:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$946_storage",
																				"typeString": "struct StakingContract.Stake storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4775:46:6"
																	},
																	{
																		"condition": {
																			"id": 1355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "4844:21:6",
																			"subExpression": {
																				"expression": {
																					"id": 1353,
																					"name": "stakeInfo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1348,
																					"src": "4845:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$946_memory_ptr",
																						"typeString": "struct StakingContract.Stake memory"
																					}
																				},
																				"id": 1354,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4855:10:6",
																				"memberName": "isPositive",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 943,
																				"src": "4845:20:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1381,
																		"nodeType": "IfStatement",
																		"src": "4840:296:6",
																		"trueBody": {
																			"id": 1380,
																			"nodeType": "Block",
																			"src": "4867:269:6",
																			"statements": [
																				{
																					"assignments": [
																						1357
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1357,
																							"mutability": "mutable",
																							"name": "stakerReward",
																							"nameLocation": "4898:12:6",
																							"nodeType": "VariableDeclaration",
																							"scope": 1380,
																							"src": "4890:20:6",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1356,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "4890:7:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 1367,
																					"initialValue": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1366,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1362,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"expression": {
																											"id": 1358,
																											"name": "stakeInfo",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1348,
																											"src": "4914:9:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Stake_$946_memory_ptr",
																												"typeString": "struct StakingContract.Stake memory"
																											}
																										},
																										"id": 1359,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "4924:6:6",
																										"memberName": "amount",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 941,
																										"src": "4914:16:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"expression": {
																											"id": 1360,
																											"name": "post",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1160,
																											"src": "4933:4:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																												"typeString": "struct StakingContract.Post storage pointer"
																											}
																										},
																										"id": 1361,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "4938:18:6",
																										"memberName": "totalNegativeStake",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 954,
																										"src": "4933:23:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "4914:42:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 1363,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "4913:44:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"expression": {
																								"id": 1364,
																								"name": "post",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1160,
																								"src": "4960:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																									"typeString": "struct StakingContract.Post storage pointer"
																								}
																							},
																							"id": 1365,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4965:18:6",
																							"memberName": "totalNegativeStake",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 954,
																							"src": "4960:23:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4913:70:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4890:93:6"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1371,
																								"name": "stakerAddress",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1340,
																								"src": "5021:13:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1372,
																								"name": "stakerReward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1357,
																								"src": "5036:12:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1368,
																								"name": "token",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 961,
																								"src": "5006:5:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Reputify_$1510",
																									"typeString": "contract Reputify"
																								}
																							},
																							"id": 1370,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5012:8:6",
																							"memberName": "transfer",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 409,
																							"src": "5006:14:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																								"typeString": "function (address,uint256) external returns (bool)"
																							}
																						},
																						"id": 1373,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5006:43:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1374,
																					"nodeType": "ExpressionStatement",
																					"src": "5006:43:6"
																				},
																				{
																					"eventCall": {
																						"arguments": [
																							{
																								"id": 1376,
																								"name": "stakerAddress",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1340,
																								"src": "5088:13:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1377,
																								"name": "stakerReward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1357,
																								"src": "5103:12:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1375,
																							"name": "RewardPaid",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 995,
																							"src": "5077:10:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256)"
																							}
																						},
																						"id": 1378,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5077:39:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1379,
																					"nodeType": "EmitStatement",
																					"src": "5072:44:6"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1331,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "4668:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 1332,
																			"name": "post",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1160,
																			"src": "4672:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																				"typeString": "struct StakingContract.Post storage pointer"
																			}
																		},
																		"id": 1333,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4677:7:6",
																		"memberName": "stakers",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "4672:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4685:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4672:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4668:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1383,
															"initializationExpression": {
																"assignments": [
																	1328
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1328,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "4661:1:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 1383,
																		"src": "4653:9:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1327,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4653:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1330,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4665:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "4653:13:6"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "4693:3:6",
																	"subExpression": {
																		"id": 1336,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1328,
																		"src": "4693:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1338,
																"nodeType": "ExpressionStatement",
																"src": "4693:3:6"
															},
															"nodeType": "ForStatement",
															"src": "4648:503:6"
														}
													]
												},
												"id": 1385,
												"nodeType": "IfStatement",
												"src": "3051:2111:6",
												"trueBody": {
													"id": 1279,
													"nodeType": "Block",
													"src": "3074:973:6",
													"statements": [
														{
															"assignments": [
																1197
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1197,
																	"mutability": "mutable",
																	"name": "commission",
																	"nameLocation": "3135:10:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1279,
																	"src": "3127:18:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1196,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3127:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1205,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1201,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1198,
																					"name": "userStake",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1152,
																					"src": "3149:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$946_memory_ptr",
																						"typeString": "struct StakingContract.Stake memory"
																					}
																				},
																				"id": 1199,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3159:6:6",
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 941,
																				"src": "3149:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "35",
																				"id": 1200,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3168:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_5_by_1",
																					"typeString": "int_const 5"
																				},
																				"value": "5"
																			},
																			"src": "3149:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1202,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3148:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3173:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "3148:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3127:49:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1209,
																			"name": "post",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1160,
																			"src": "3326:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																				"typeString": "struct StakingContract.Post storage pointer"
																			}
																		},
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3331:14:6",
																		"memberName": "originalPoster",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 948,
																		"src": "3326:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1211,
																				"name": "userStake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1152,
																				"src": "3347:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$946_memory_ptr",
																					"typeString": "struct StakingContract.Stake memory"
																				}
																			},
																			"id": 1212,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3357:6:6",
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 941,
																			"src": "3347:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1213,
																			"name": "commission",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "3366:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3347:29:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1206,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "3311:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Reputify_$1510",
																			"typeString": "contract Reputify"
																		}
																	},
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3317:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 409,
																	"src": "3311:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3311:66:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1216,
															"nodeType": "ExpressionStatement",
															"src": "3311:66:6"
														},
														{
															"assignments": [
																1218
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1218,
																	"mutability": "mutable",
																	"name": "remainingAmount",
																	"nameLocation": "3473:15:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1279,
																	"src": "3465:23:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1217,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3465:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1223,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1219,
																		"name": "post",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1160,
																		"src": "3491:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																			"typeString": "struct StakingContract.Post storage pointer"
																		}
																	},
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3496:18:6",
																	"memberName": "totalPositiveStake",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 952,
																	"src": "3491:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1221,
																	"name": "commission",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1197,
																	"src": "3517:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3491:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3465:62:6"
														},
														{
															"body": {
																"id": 1277,
																"nodeType": "Block",
																"src": "3592:444:6",
																"statements": [
																	{
																		"assignments": [
																			1237
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1237,
																				"mutability": "mutable",
																				"name": "stakerAddress",
																				"nameLocation": "3619:13:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1277,
																				"src": "3611:21:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"typeName": {
																					"id": 1236,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3611:7:6",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1242,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 1238,
																					"name": "post",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1160,
																					"src": "3635:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																						"typeString": "struct StakingContract.Post storage pointer"
																					}
																				},
																				"id": 1239,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3640:7:6",
																				"memberName": "stakers",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 957,
																				"src": "3635:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 1241,
																			"indexExpression": {
																				"id": 1240,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1225,
																				"src": "3648:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3635:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3611:39:6"
																	},
																	{
																		"assignments": [
																			1245
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1245,
																				"mutability": "mutable",
																				"name": "stakeInfo",
																				"nameLocation": "3682:9:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1277,
																				"src": "3669:22:6",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$946_memory_ptr",
																					"typeString": "struct StakingContract.Stake"
																				},
																				"typeName": {
																					"id": 1244,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1243,
																						"name": "Stake",
																						"nameLocations": [
																							"3669:5:6"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 946,
																						"src": "3669:5:6"
																					},
																					"referencedDeclaration": 946,
																					"src": "3669:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stake_$946_storage_ptr",
																						"typeString": "struct StakingContract.Stake"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1249,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1246,
																				"name": "stakes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 966,
																				"src": "3694:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$946_storage_$",
																					"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
																				}
																			},
																			"id": 1248,
																			"indexExpression": {
																				"id": 1247,
																				"name": "stakerAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1237,
																				"src": "3701:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3694:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$946_storage",
																				"typeString": "struct StakingContract.Stake storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3669:46:6"
																	},
																	{
																		"condition": {
																			"expression": {
																				"id": 1250,
																				"name": "stakeInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1245,
																				"src": "3738:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$946_memory_ptr",
																					"typeString": "struct StakingContract.Stake memory"
																				}
																			},
																			"id": 1251,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3748:10:6",
																			"memberName": "isPositive",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 943,
																			"src": "3738:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1276,
																		"nodeType": "IfStatement",
																		"src": "3734:287:6",
																		"trueBody": {
																			"id": 1275,
																			"nodeType": "Block",
																			"src": "3760:261:6",
																			"statements": [
																				{
																					"assignments": [
																						1253
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1253,
																							"mutability": "mutable",
																							"name": "stakerReward",
																							"nameLocation": "3791:12:6",
																							"nodeType": "VariableDeclaration",
																							"scope": 1275,
																							"src": "3783:20:6",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 1252,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "3783:7:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 1262,
																					"initialValue": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1261,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 1257,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"expression": {
																											"id": 1254,
																											"name": "stakeInfo",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1245,
																											"src": "3807:9:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Stake_$946_memory_ptr",
																												"typeString": "struct StakingContract.Stake memory"
																											}
																										},
																										"id": 1255,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "3817:6:6",
																										"memberName": "amount",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 941,
																										"src": "3807:16:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"id": 1256,
																										"name": "remainingAmount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1218,
																										"src": "3826:15:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "3807:34:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 1258,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "3806:36:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"expression": {
																								"id": 1259,
																								"name": "post",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1160,
																								"src": "3845:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																									"typeString": "struct StakingContract.Post storage pointer"
																								}
																							},
																							"id": 1260,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3850:18:6",
																							"memberName": "totalPositiveStake",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 952,
																							"src": "3845:23:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3806:62:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "3783:85:6"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1266,
																								"name": "stakerAddress",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1237,
																								"src": "3906:13:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1267,
																								"name": "stakerReward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1253,
																								"src": "3921:12:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"id": 1263,
																								"name": "token",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 961,
																								"src": "3891:5:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Reputify_$1510",
																									"typeString": "contract Reputify"
																								}
																							},
																							"id": 1265,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3897:8:6",
																							"memberName": "transfer",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 409,
																							"src": "3891:14:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																								"typeString": "function (address,uint256) external returns (bool)"
																							}
																						},
																						"id": 1268,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3891:43:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1269,
																					"nodeType": "ExpressionStatement",
																					"src": "3891:43:6"
																				},
																				{
																					"eventCall": {
																						"arguments": [
																							{
																								"id": 1271,
																								"name": "stakerAddress",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1237,
																								"src": "3973:13:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1272,
																								"name": "stakerReward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1253,
																								"src": "3988:12:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1270,
																							"name": "RewardPaid",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 995,
																							"src": "3962:10:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256)"
																							}
																						},
																						"id": 1273,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3962:39:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1274,
																					"nodeType": "EmitStatement",
																					"src": "3957:44:6"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1228,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "3562:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 1229,
																			"name": "post",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1160,
																			"src": "3566:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																				"typeString": "struct StakingContract.Post storage pointer"
																			}
																		},
																		"id": 1230,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3571:7:6",
																		"memberName": "stakers",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "3566:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3579:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3566:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3562:23:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1278,
															"initializationExpression": {
																"assignments": [
																	1225
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1225,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "3555:1:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 1278,
																		"src": "3547:9:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1224,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3547:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1227,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3559:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3547:13:6"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "3587:3:6",
																	"subExpression": {
																		"id": 1233,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1225,
																		"src": "3587:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1235,
																"nodeType": "ExpressionStatement",
																"src": "3587:3:6"
															},
															"nodeType": "ForStatement",
															"src": "3542:494:6"
														}
													]
												}
											},
											{
												"condition": {
													"expression": {
														"id": 1386,
														"name": "userStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "5213:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$946_memory_ptr",
															"typeString": "struct StakingContract.Stake memory"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5223:10:6",
													"memberName": "isPositive",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 943,
													"src": "5213:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1403,
													"nodeType": "Block",
													"src": "5311:70:6",
													"statements": [
														{
															"expression": {
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1396,
																		"name": "post",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1160,
																		"src": "5326:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																			"typeString": "struct StakingContract.Post storage pointer"
																		}
																	},
																	"id": 1398,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5331:18:6",
																	"memberName": "totalNegativeStake",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 954,
																	"src": "5326:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"expression": {
																		"id": 1399,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "5353:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$946_memory_ptr",
																			"typeString": "struct StakingContract.Stake memory"
																		}
																	},
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5363:6:6",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 941,
																	"src": "5353:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5326:43:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1402,
															"nodeType": "ExpressionStatement",
															"src": "5326:43:6"
														}
													]
												},
												"id": 1404,
												"nodeType": "IfStatement",
												"src": "5209:172:6",
												"trueBody": {
													"id": 1395,
													"nodeType": "Block",
													"src": "5235:70:6",
													"statements": [
														{
															"expression": {
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1388,
																		"name": "post",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1160,
																		"src": "5250:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Post_$958_storage_ptr",
																			"typeString": "struct StakingContract.Post storage pointer"
																		}
																	},
																	"id": 1390,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5255:18:6",
																	"memberName": "totalPositiveStake",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 952,
																	"src": "5250:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"expression": {
																		"id": 1391,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "5277:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$946_memory_ptr",
																			"typeString": "struct StakingContract.Stake memory"
																		}
																	},
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5287:6:6",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 941,
																	"src": "5277:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5250:43:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1394,
															"nodeType": "ExpressionStatement",
															"src": "5250:43:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5393:25:6",
													"subExpression": {
														"baseExpression": {
															"id": 1405,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "5400:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$946_storage_$",
																"typeString": "mapping(address => struct StakingContract.Stake storage ref)"
															}
														},
														"id": 1408,
														"indexExpression": {
															"expression": {
																"id": 1406,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5407:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5411:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5407:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5400:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$946_storage",
															"typeString": "struct StakingContract.Stake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "5393:25:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1412,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5469:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5473:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5469:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1414,
																"name": "userStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1152,
																"src": "5481:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$946_memory_ptr",
																	"typeString": "struct StakingContract.Stake memory"
																}
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5491:6:6",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 941,
															"src": "5481:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1416,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "5499:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1411,
														"name": "Unstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "5460:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5460:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "EmitStatement",
												"src": "5455:51:6"
											}
										]
									},
									"functionSelector": "b7f5a5a3",
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "2684:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "predictionOutcome",
												"nameLocation": "2697:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "2692:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1144,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2692:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "postId",
												"nameLocation": "2730:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "2716:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1146,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2716:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2691:46:6"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2747:0:6"
									},
									"scope": 1421,
									"src": "2675:2839:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1422,
							"src": "180:5337:6",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								981,
								989,
								995
							]
						}
					],
					"src": "33:5486:6"
				},
				"id": 6
			},
			"contracts/Reputify.sol": {
				"ast": {
					"absolutePath": "contracts/Reputify.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"Reputify": [
							1510
						]
					},
					"id": 1511,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1423,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1424,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1511,
							"sourceUnit": 800,
							"src": "57:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1425,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1511,
							"sourceUnit": 148,
							"src": "113:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1426,
										"name": "ERC20",
										"nameLocations": [
											"188:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "188:5:7"
									},
									"id": 1427,
									"nodeType": "InheritanceSpecifier",
									"src": "188:5:7"
								},
								{
									"baseName": {
										"id": 1428,
										"name": "Ownable",
										"nameLocations": [
											"195:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "195:7:7"
									},
									"id": 1429,
									"nodeType": "InheritanceSpecifier",
									"src": "195:7:7"
								}
							],
							"canonicalName": "Reputify",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1510,
							"linearizedBaseContracts": [
								1510,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "Reputify",
							"nameLocation": "176:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe",
									"id": 1435,
									"name": "Minted",
									"nameLocation": "215:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "238:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "222:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "222:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "250:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "242:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "221:36:7"
									},
									"src": "209:49:7"
								},
								{
									"anonymous": false,
									"eventSelector": "696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df7",
									"id": 1441,
									"name": "Burned",
									"nameLocation": "269:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "292:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "276:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "306:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "298:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:38:7"
									},
									"src": "263:51:7"
								},
								{
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "493:94:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1456,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1443,
															"src": "509:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1457,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "523:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1455,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "503:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "503:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "503:34:7"
											}
										]
									},
									"id": 1461,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5265707574696679",
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "452:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e8fcdcd14772a4970ecf174842dd5f34a8573b49265704060203c15122f22775",
														"typeString": "literal_string \"Reputify\""
													},
													"value": "Reputify"
												},
												{
													"hexValue": "525054",
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "464:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_193fb9814d53cc9cda8187d0d39a8722345ce84f54c3c6acd15c420cb1471f43",
														"typeString": "literal_string \"RPT\""
													},
													"value": "RPT"
												}
											],
											"id": 1450,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1447,
												"name": "ERC20",
												"nameLocations": [
													"446:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "446:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "446:24:7"
										},
										{
											"arguments": [
												{
													"id": 1452,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1443,
													"src": "479:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1453,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1451,
												"name": "Ownable",
												"nameLocations": [
													"471:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "471:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "471:21:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "409:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "401:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "401:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "431:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "423:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "400:45:7"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "493:0:7"
									},
									"scope": 1510,
									"src": "389:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "703:67:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1471,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "719:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1472,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "723:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1470,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "713:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "713:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1474,
												"nodeType": "ExpressionStatement",
												"src": "713:17:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1476,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "752:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1477,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1465,
															"src": "756:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1475,
														"name": "Minted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1435,
														"src": "745:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "745:18:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1479,
												"nodeType": "EmitStatement",
												"src": "740:23:7"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1481,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1468,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1467,
												"name": "onlyOwner",
												"nameLocations": [
													"693:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "693:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "693:9:7"
										}
									],
									"name": "mint",
									"nameLocation": "651:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "664:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "656:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "676:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "668:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:28:7"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "703:0:7"
									},
									"scope": 1510,
									"src": "642:128:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "860:165:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1488,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "888:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "892:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "888:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1487,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "878:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "878:21:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1491,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "903:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "878:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e636520746f206275726e",
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "911:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5",
																"typeString": "literal_string \"Insufficient balance to burn\""
															},
															"value": "Insufficient balance to burn"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5",
																"typeString": "literal_string \"Insufficient balance to burn\""
															}
														],
														"id": 1486,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "870:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "870:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1495,
												"nodeType": "ExpressionStatement",
												"src": "870:72:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1497,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "958:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "962:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "958:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1499,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "970:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1496,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "952:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "952:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1501,
												"nodeType": "ExpressionStatement",
												"src": "952:25:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1503,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "999:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1003:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "999:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1505,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "1011:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1502,
														"name": "Burned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "992:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "992:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1507,
												"nodeType": "EmitStatement",
												"src": "987:31:7"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "830:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "843:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "835:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:16:7"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "860:0:7"
									},
									"scope": 1510,
									"src": "821:204:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1511,
							"src": "167:860:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								1435,
								1441
							]
						}
					],
					"src": "32:996:7"
				},
				"id": 7
			}
		}
	}
}